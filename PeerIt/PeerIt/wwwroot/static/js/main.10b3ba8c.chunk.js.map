{"version":3,"sources":["webix.js","containers/courses.js","widget/CreateCourse.js","widget/AdminToolbar.js","widget/InstructorToolbar.js","widget/StudentToolbar.js","widget/ManageUsers.js","widget/ManageCourses.js","widget/AdminSettings.js","widget/LiveFeed.js","containers/CourseContent.js","widget/CommentForm.js","widget/CommentView.js","widget/ShowStudentAssignment.js","widget/ShowAssignment.js","containers/portal.js","containers/Login.js","App.js","serviceWorker.js","index.js"],"names":["Webix","react_default","a","createElement","ref","data","ui","this","setValues","parse","setValue","destructor","props","setWebixData","select","window","webix","ReactDOM","findDOMNode","refs","root","componentWillUpdate","Component","Courses","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentUser","role","viewingCourse","courseGroup","handleCourseViewer","handleMenuClick","component","protoUI","name","defaults","borderless","$init","config","$ready","push","render","app","$view","view","loadCourses","console","log","getCourseGroup","_this2","CourseID","fetch","method","headers","Content-Type","credentials","mode","then","res","json","response","success","JSON","stringify","reviewGroup","setState","$$","load","catch","error","_this3","length","courses","drawCourses","_this4","forEach","element","accord","header","id","padding","css","autoheight","body","cols","renderSubMenu","on","onItemClick","i","redraw","parseInt","nextChild","webixGetNextChild","stateChange","e","bind","collapsed","height","index","addView","getChildViews","template","courseID","_ref","autowidth","multiview","animate","cells","columns","url","defineProperty","width","viewingAssignment","getItem","label","type","map","courseAssignment","src_webix","scroll","rows","gravity","multi","CreateCourse","seed","redrawAll","formData","getValues","CourseName","location","reload","move","position","head","left","click","close","elements","labelWidth","invalidMessage","margin","value","createCourse","rules","isNotEmpty","show","scope","inputWidth","renderCreateCourseWindow","AdminToolbar","logout","showCreateCourse","handleCreateCourse","accountClick","containers_courses","widget_CreateCourse","innerHeight","responsive","ready","getFirstId","content","align","renderCreateCourseButton","renderCourses","InstructorToolbar","handleCreateCourseWindow","StudentToolbar","renderAccountWindow","uploadReview","ManageUsers","administrators","instructors","students","invitedguests","editUser","getData","src","stateName","formValues","req","FirstName","LastName","Email","Password","Role","isEnabled","renderEditWindow","firstName","lastName","email","options","saveEditWindow","isEmail","validate","newUser","newEditWindow","errors","description","newUserErrorLabel","createUser","fillspace","trg","renderOnData","ManageCourses","AdminSettings","SMTP_Enabled","SMTP_USERNAME","SMTP_Port","SMTP_HOST","renderWindow","loadSettings","getSetting","setting","column","numericValue","stringValue","serverName","portNum","usernameAdminLogin","IsEnabled","smtpUsername","smtpPassword","alert","LiveFeed","className","CourseContent","addingStudent","hasEvent","attachEvent","addStudent","studentID","courseGroupID","groupValue","inputName","upload","link","autosend","date","Date","weekHeader","events","isHoliday","FormVal","define","urlData","assignmentname","Assignment_Name","Course","dueDate","toUTCString","send","message","Due_Date","changeStudentGroup","studentGroup","assignmentID","_this5","renderUploadAssignmentWindow","sort","obj","onClick","webixtype_base","ev","html","confirm","assignment","deleteAssignment","renderChangeStudentGroupWindow","addStudentWindow","remove_button","row","removeStudent","CommentForm","assignmentId","createComment","formdata","textBox","renderCommentForm","CommentView","comments","renderComments","ShowStudentAssignment","errorMsg","studentAssignmentPfileId","studentAssignmentId","listOfReviews","reviewErrorMsg","reviewPFileId","downloadLink","buildAssignmentLink","viewOtherStudent","showCommentForm","assertThisInitialized","renderStudentAssignmentReviewsDataTable","fetchStudentAssignmentByCourseAssignmentAndUser","fetchAllReviewsForTheStudenAssignmentSubmission","renderUploadStudentAssignmentWindow","renderAssignmentReviewButton","getStudentAssignmentSubmissionDetails","fK_PFile","reviewDataTable","text","myaction","arg","t","theReview","courseAssignmentId","href","widget_CommentForm","widget_CommentView","renderUploadStudentAssignmentButton","renderLink","renderAddCommentButton","ShowAssignment","courseName","fK_COURSE","assignmentName","pFile","target","renderAdminInstructorList","widget_ShowStudentAssignment","Portal","account","currentContentWidgets","handleLogin","fetchAccountFormData","includes","widget_LiveFeed","widget_AdminToolbar","widget_InstructorToolbar","widget_StudentToolbar","containers_CourseContent","widget_ManageUsers","widget_ManageCourses","widget_AdminSettings","widget_ShowAssignment","contentWidget","shouldRender","saveAccountChanges","newPassword","properties","Password1","Password2","isChanged","output","Length","innerWidth","document","toolbar","renderAdminToolbar","renderInstructorToolbar","renderStudentToolbar","renderLiveFeed","renderAdminManageUsers","renderAdminManageCourses","renderAdminSettings","renderCourseContent","renderShowAssignment","renderShowStudentAssignment","Login","updateLogin","passwordErrorLabel","userName","emailAddress","getValue","password","minWidth","minHeight","labelAlign","labelPosition","validateEvent","doLogin","hotkey","App","getTime","checkIfLoggedIn","cache","X-PINGOVER","statechange","portal","containers_Login","user","renderLogin","renderPortal","Boolean","hostname","match","src_App_0","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.10b3ba8c.chunk.js","sourcesContent":["// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'webix/webix.js';\r\nimport 'webix/webix.css';\r\n\r\nclass Webix extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div ref=\"root\"></div>\r\n    );\r\n  }\r\n\r\n  setWebixData(data){\r\n    const ui = this.ui;\r\n    if (ui.setValues)\r\n      ui.setValues(data);\r\n    else if (ui.parse)\r\n      ui.parse(data)\r\n    else if (ui.setValue)\r\n      ui.setValue(data); \r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.ui.destructor();\r\n    this.ui = null;\r\n  }\r\n\r\n  componentWillUpdate(props){\r\n    if (props.data)\r\n      this.setWebixData(props.data);\r\n    if (props.select)\r\n      this.select(props.select);\r\n  }\r\n\r\n  componentDidMount(){\r\n  \tthis.ui = window.webix.ui(\r\n  \t  this.props.ui, \r\n  \t  ReactDOM.findDOMNode(this.refs.root)\r\n\t  );\r\n\r\n    this.componentWillUpdate(this.props);\r\n  }\r\n   \r\n  \r\n}\r\n\r\nexport default Webix;\r\n","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\nimport '../css/courses.css';\r\n\r\nclass Courses extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      data: null,\r\n      viewingCourse: props.viewingCourse,\r\n      courseGroup : null,\r\n      Courses: []\r\n    };\r\n   \r\n    this.handleCourseViewer = props.handleCourseViewer;\r\n    this.handleMenuClick = props.handleMenuClick;\r\n    this.component = {};\r\n    window.webix.protoUI({\r\n      name: \"react\",\r\n      defaults: {\r\n        borderless: true\r\n      },\r\n      $init: function (config) {\r\n        this.$ready.push(function () {\r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view);\r\n    this.loadCourses();\r\n    if (this.state.role === \"Student\") {\r\n      console.log(\"At Constructor CourseViewing: \" + this.state.viewingCourse);\r\n      this.getCourseGroup();\r\n    }\r\n  }\r\n  getCourseGroup(props){\r\n     //console.log(\"trying to get course group:\"  + \"State\" + JSON.stringify(this.state));\r\n     let CourseID = this.state.viewingCourse;\r\n     if(CourseID == null && typeof(props) != \"undefined\"){ CourseID = props.viewingCourse; }\r\n     fetch(\"/StudentAssignment/GetCourseGroup?courseId=\" + CourseID, {\r\n        method: 'GET', // or 'PUT'\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: \"include\",\r\n        mode: \"no-cors\"\r\n      }).then(res => res.json()).then(response => {\r\n          if (response.success) {\r\n            console.log(\"GROUP:\" + JSON.stringify(response.data[0].reviewGroup));\r\n\r\n            if(this.state.courseGroup != response.data[0].reviewGroup){\r\n              this.setState({courseGroup:response.data[0].reviewGroup});\r\n              window.webix.$$(\"GroupAssignments\"+CourseID).load(\"/StudentAssignment/GetAssignmentsByCourseAndReviewGroup?courseId=\" + CourseID + \"&reviewGroupId=\" +response.data[0].reviewGroup);\r\n            }\r\n          }\r\n          else{\r\n         \r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState(props);\r\n    this.getCourseGroup(props);\r\n    this.loadCourses();\r\n    \r\n    //console.log(\"reload courses\");\r\n    // Trigger Webix to Redraw the component\r\n    //window.webix.$$().setHTML(\"<h1>YEP</h1>\");\r\n  }\r\n  loadCourses() {\r\n    //let accord = [];\r\n    fetch(\"Course/GetCourses\", {\r\n      method: 'GET', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\",\r\n      mode: \"no-cors\"\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          if(response.data.length > 0){\r\n          \tthis.setState({ courses: response.data });\r\n          }\r\n          this.drawCourses();\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n\r\n  }\r\n\r\n  drawCourses() {\r\n  \r\n    if (this.state.courses != null && this.state.courses.length > 0) {\r\n\r\n      this.state.courses.forEach(element => {\r\n        //console.log(\"considered\" + window.webix.$$(\"courses\").index(element.id));\r\n\r\n        let accord = {\r\n          view: \"accordionitem\",\r\n          header: element.name,\r\n          id: element.id,\r\n          padding: 0,\r\n          css: \"courseMenuItem\",\r\n          autoheight:true,\r\n          body: {\r\n            cols: this.renderSubMenu(element.id)\r\n          },\r\n          on: {\r\n            'onItemClick': function (i) {\r\n              let redraw = false;\r\n              // Check if it should redraw\r\n              if (parseInt(i) !== parseInt(this.state.viewingCourse)) {\r\n                redraw = true;\r\n              }\r\n              else {\r\n                // They clicked on self\r\n                // Check and see if there is another view passed to change the active view to\r\n                try {\r\n                  //let index = window.webix.$$(\"courses\").index(i);\r\n                  let nextChild = this.webixGetNextChild(i);\r\n                  //console.log(\"next child is: \" + nextChild + \" compared to \" + i);\r\n                  if (nextChild !== false) {\r\n                    //console.log(\"setting view to next child\");\r\n                    let stateChange = { \"viewingCourse\": parseInt(nextChild) };\r\n                    this.handleCourseViewer(stateChange);\r\n                  }\r\n                  // Lets set the one we're viewing up to what the accordion is showing\r\n                }\r\n                catch (e) {\r\n                  console.log(\"error\" + e);\r\n                }\r\n              }\r\n\r\n              if (redraw) {\r\n                this.handleCourseViewer({ \"viewingCourse\": parseInt(i) });\r\n                this.drawCourses();\r\n              }\r\n            }.bind(this)\r\n          },\r\n          collapsed: true,\r\n          height: 200\r\n        };\r\n        // Lets try if it doesnt exisit\r\n        try {\r\n          if (window.webix.$$(\"courses\").index(element.id) === -1) {\r\n            window.webix.$$(\"courses\").addView(accord);\r\n          }\r\n        }\r\n        catch (e) {\r\n          console.log(\"error\" + e);\r\n        }\r\n      });\r\n    }\r\n    else{\r\n    \t// No Courses\r\n    \tif(window.webix.$$(\"courses\").getChildViews().length == 0){\r\n\t    \tlet ui = {\r\n\t    \t  view: \"accordionitem\",\r\n\t          header: \"No Courses\",\r\n\t          padding: 0,\r\n\t          css: \"courseMenuItem\",\r\n\t          autoheight:true,\r\n\t          body: {\r\n\t             view:\"template\",\r\n\t             template: \"No Courses\"\r\n\t          }\r\n\t        };\r\n\t    \t window.webix.$$(\"courses\").addView(ui);\r\n\t    }\r\n    }\r\n  }\r\n\r\n  renderSubMenu(courseID) {\r\n    if (this.state.role === \"Administrator\" || this.state.role === \"Instructor\") {\r\n      return (\r\n        [\r\n          {\r\n            id: \"coursesTabView\" + courseID,\r\n            view: \"tabview\",\r\n            css: \"subCourseTabMenu\",\r\n            autowidth:true,\r\n            multiview: {\r\n              animate: true\r\n            },\r\n            cells: [\r\n              {\r\n                css: \"subCourseMenu\",\r\n                header: \"Students\",\r\n                id: \"AdminInstructorSubListItem\",\r\n                autoheight:true,\r\n                autowidth:true,\r\n                body:  {\r\n                    autoheight: true,\r\n                    view: \"datatable\",\r\n                    columns: [\r\n                      { id: \"firstName\", header: \"First Name\", autowidth: true },\r\n                      { id: \"lastName\", header: \"Last Name\", autowidth: true }\r\n                    ],\r\n                    url: \"/Course/GetStudents?courseID=\" + courseID\r\n                  },\r\n                autoheight: true,\r\n                autowidth:true,\r\n                collapsed: true,\r\n                gravity: 1\r\n              },\r\n              {\r\n                css: \"subCourseMenu\",\r\n                header: \"Assignments\",\r\n                autoheight:true,\r\n                body:  {\r\n                    autoheight: true,\r\n                    view: \"datatable\",\r\n               \t\tid: \"Assignments\"+courseID,\r\n                    columns: [\r\n                      { id: \"name\", header: \"Name\", width:150 },\r\n                      { id: \"dueDate\", header: \"DueDate\", width:150 },\r\n                    ],\r\n                    url: \"/CourseAssignment/Assignments?courseID=\" + courseID,\r\n                    on : { 'onItemClick' : function(i){\r\n\t                    //\tconsole.log(\"test\" + i);\t\r\n\t                    \t//console.log(\"Data:\" + JSON.stringify(window.webix.$$(\"Assignments\" + courseID).getItem(i)));\r\n                       \tthis.handleCourseViewer({viewingAssignment:window.webix.$$(\"Assignments\" + courseID).getItem(i)});\r\n                        this.handleMenuClick(\"ShowAssignment\");\r\n                        \r\n\t                    }.bind(this) \r\n\t                }\r\n                  },\r\n                collapsed: true\r\n              },\r\n              {\r\n                css: \"subCourseMenu\",\r\n                header: \"Bulk\",\r\n                body: {\r\n                  view: \"template\",\r\n                  template: \"bulk\"\r\n                }\r\n              },\r\n              {\r\n                css: \"subCourseMenu\",\r\n                header: \"Settings\",\r\n                body: {\r\n                  view: \"button\",\r\n                  label: \"Settings\",\r\n                  type: \"standard\",\r\n                  on: {\r\n                    'onItemClick': function (i) {\r\n                      this.handleMenuClick(\"CourseContent\");\r\n                    }.bind(this)\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      );\r\n    }\r\n    else if (this.state.role === \"Student\") {\r\n     \r\n      return ([{\r\n        view: \"tabview\",\r\n        cells: [\r\n          {\r\n            header: \"Your Assignments\",\r\n            body:  {\r\n                autoheight: true,\r\n                view: \"datatable\",\r\n              id: \"Assignments\"+courseID,\r\n                columns: [\r\n                  { id: \"name\", header: \"Name\", width:150 },\r\n                  { id: \"dueDate\", header: \"DueDate\", width:150 },\r\n                ],\r\n                url: \"/CourseAssignment/Assignments?courseID=\" + courseID,\r\n                on : { 'onItemClick' : function(i){\r\n                    this.handleCourseViewer({viewingAssignment:window.webix.$$(\"Assignments\" + courseID).getItem(i)});\r\n                    // console.log(\"AsSIGNMENT: \" + JSON.stringify(window.webix.$$(\"Assignments\" + courseID).getItem(i)));\r\n                      \r\n                    this.handleMenuClick(\"ShowAssignment\");\r\n                  }.bind(this) \r\n              }\r\n            }\r\n          },\r\n          {\r\n            header: \"Group Assignments\",\r\n            body:  {\r\n                autoheight: true,\r\n                view: \"datatable\",\r\n                id: \"GroupAssignments\"+courseID,\r\n                columns: [\r\n                 \r\n                  \r\n                  { id: \"firstName\", map:\"#appUser.firstName#\", header: \"First Name\", width:100 },\r\n                  { id: \"lastName\", map:\"#appUser.lastName#\", header: \"Last Name\", width:100 },\r\n\r\n                  { id: \"name\", map: \" #courseAssignment.name#\", header: \"Assignment\", width:150 },\r\n                ],\r\n                url: \"/StudentAssignment/GetAssignmentsByCourseAndReviewGroup?courseID=\" + courseID + \"&reviewGroupId=\",\r\n                on : { 'onItemClick' : function(i){\r\n                    //console.log(\"Load This assignent: \" + window.webix.$$(\"GroupAssignments\" + courseID).getItem(i).courseAssignment);\r\n                    this.handleCourseViewer({viewingAssignment:window.webix.$$(\"GroupAssignments\" + courseID).getItem(i).courseAssignment});                      \r\n                    this.handleMenuClick(\"ShowAssignment\");\r\n                  }.bind(this) \r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }]);\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let ui = {\r\n\r\n      view: \"accordion\",\r\n      id: \"verses\",\r\n      scroll: \"y\", // vertical scrolling\r\n      //height:500,\r\n      autoheight: true,\r\n      width: 320,\r\n      //body: {\r\n        rows: [\r\n          {\r\n          \tautoheight:true,\r\n            view: \"accordion\",\r\n            gravity: 3,\r\n            scroll: true,\r\n            multi: false,\r\n            css: \"webix_dark\",\r\n            id: \"courses\",\r\n            rows: []\r\n          }\r\n        ]\r\n      //}\r\n    };\r\n    let data = null;\r\n    return (\r\n      <div id=\"Courses\">\r\n        <Webix ui={ui} data={data} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Courses;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Webix from '../webix';\r\n\r\nclass CreateCourse extends Component {\r\n\r\n\tconstructor(props) {\r\n   super(props);\r\n    this.state = {\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      data: null,\r\n      seed: props.seed\r\n\r\n      \r\n    };\r\n    this.redrawAll = props.redrawAll;\r\n\r\n  }\r\n   createCourse() {\r\n    let formData = window.webix.$$(\"newCourseForm\").getValues();\r\n\r\n    fetch(\"Course/CreateCourse?courseName=\" + formData.CourseName, {\r\n      method: 'POST', // or 'PUT'\r\n\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\",\r\n      mode: \"no-cors\"\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          this.setState({\"data\" : 0});\r\n\r\n          this.redrawAll();\r\n// eslint-disable-next-line          \r\n          location.reload();\r\n        } else {\r\n       //   let errors = \"\";\r\n          //response.error.forEach(error => {\r\n       //  //   errors += error.description\r\n      //    });\r\n\r\n        }\r\n        console.log(response);\r\n\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n  }\r\n  renderCreateCourseWindow() {\r\n    \r\n    if (window.webix.$$(\"newCourseWindow\") == null) {\r\n       window.webix.ui({\r\n        view: \"window\",\r\n        id: \"newCourseWindow\",\r\n        width: 500,\r\n        height: 500,\r\n        move: true,\r\n        position: \"center\",\r\n        head: {\r\n          type: \"space\",\r\n          cols: [\r\n            { view: \"label\", label: \"Create New Course\" },\r\n            {\r\n              view: \"button\", label: \"Close\", width: 70, left: 250,\r\n              click: function () {\r\n                window.webix.$$(\"newCourseWindow\").close();\r\n                //temp fix - if more time add a cleaner reload\r\n                \r\n              }\r\n            }\r\n          ]\r\n        },\r\n        body: {\r\n          type: \"space\",\r\n          rows: [\r\n            {\r\n              view: \"form\",\r\n              id: \"newCourseForm\",\r\n              width: 400,\r\n              elements: [\r\n\r\n                { view: \"text\", label: \"Course Name\", name: \"CourseName\", labelWidth: 100, invalidMessage: \"Course Name can not be empty\" },\r\n               \r\n                {\r\n                  margin: 5, cols: [\r\n                    {\r\n                      view: \"button\", value: \"Create Course\", type: \"form\", click: function () {\r\n                        this.createCourse();\r\n                        window.webix.$$(\"newCourseWindow\").close();\r\n                      }.bind(this)\r\n                    }\r\n                  ]\r\n                }\r\n              ],\r\n              rules: {\r\n                \"CourseName\": window.webix.rules.isNotEmpty\r\n              }\r\n            }\r\n          ]\r\n        }\r\n\r\n      }).show();\r\n    }\r\n  }\r\n\r\n  \r\n\trender(){\r\n    let scope = this;\r\n    let ui = {\r\n        view: \"button\",\r\n        gravity: 1,\r\n        label: \"Create Course\",\r\n        id: \"createCourse_button\",\r\n        value: \"Create Course\",\r\n\r\n        inputWidth: 100,\r\n        click: function () {  \r\n          scope.renderCreateCourseWindow();\r\n        }\r\n      };\r\n    let data = null;\r\n\t\r\n\t\t return(<div  id=\"CreateCourse\">\r\n        <Webix ui={ui} data={data}/>\r\n      </div>\r\n      );\r\n\t}\r\n}\r\nexport default CreateCourse;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Webix from '../webix';\r\nimport Courses from '../containers/courses.js';\r\nimport CreateCourse from '../widget/CreateCourse.js';\r\nclass AdminToolbar extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentUser: props.currentUser,\r\n\t\t\trole: props.role,\r\n\t\t\tviewingCourse: props.viewingCourse,\r\n\t\t\tviewingAssignment:props.viewingAssignment,\r\n\t\t\tdata: null,\r\n\t\t\tseed : props.seed\r\n\t\t\t\r\n\t\t};\r\n\t\tthis.logout = props.logout;\r\n\t\t// Receive the function handle for handleManageUsersMenuClick\r\n\t\tthis.handleMenuClick = props.handleMenuClick;\r\n\t\tthis.showCreateCourse = props.handleCreateCourse;\r\n\t    this.accountClick = props.accountClick;\r\n\t    this.handleCourseViewer = props.handleCourseViewer;\r\n\t    this.redrawAll = props.redrawAll;\r\n\t}\r\n    componentWillReceiveProps(props) {\r\n    \tthis.setState(props);\r\n    }\r\n\trenderCourses() {\r\n       return <Courses \r\n       currentUser={this.state.currentUser} \r\n       role={this.state.role}  \r\n       handleCourseViewer={this.handleCourseViewer.bind(this)} \r\n       viewingCourse={this.state.viewingCourse}\r\n       handleMenuClick={this.handleMenuClick}\r\n       accountClick={this.accountClick.bind(this)}\r\n       redrawAll={this.redrawAll} seed={this.state.seed}\r\n       viewingAssignment={this.state.viewingAssignment}\r\n       />\r\n\t}\r\n\trenderCreateCourseButton() {\r\n       return <CreateCourse currentUser={this.state.currentUser} role={this.state.role} showCreateCourse={this.showCreateCourse}\r\n       redrawAll={this.redrawAll} seed={this.state.seed} />\r\n\t}\t\t\t\r\n\trender() {\r\n\t\t//let scope = this;\r\n\t\tlet data = null;\r\n\t\tlet ui =\r\n\t\t{\r\n\t\t\ttype: \"space\",\r\n            scroll: \"false\",\r\n            height: window.innerHeight,\r\n            autowidth:true,\r\n            padding: 0,\r\n            responsive: \"a1\",\r\n\t\t\trows: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tview: \"list\",\r\n\t\t\t\t\t\tgravity: 1,\r\n\t\t\t\t\t\tpadding:0,\r\n\t\t\t\t\t\tscroll: false,\r\n\t\t\t\t\t\tmargin:0,\r\n\t\t\t\t\t\theight:225,\r\n\t\t\t\t\t\tdata: [\"Admin\", \"My Account\", \"Manage Users\", \"Settings\", \"Logout\"],\r\n\t\t\t\t\t\tready: function () {\r\n\t\t\t\t\t\t\t// Highlight the first one\r\n\t\t\t\t\t\t\tthis.select(this.getFirstId());\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclick: function (a) {\r\n\t\t\t\t\t\t\tif (a === \"Logout\") {\r\n\t\t\t\t\t\t\t\t//Attempt to call the logout chain\r\n\t\t\t\t\t\t\t\tthis.logout();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (a === \"Manage Users\") {\r\n\t\t\t\t\t\t\t\tthis.handleMenuClick(\"ManageUsers\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (a === \"Manage Courses\") {\r\n\t\t\t\t\t\t\t\tthis.handleMenuClick(\"ManageCourses\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (a === \"Settings\") {\r\n\t\t\t\t\t\t\t\tif (window.webix.$$(\"AdminSettings\") == null) {\r\n\t\t\t\t\t\t\t\t\tthis.handleMenuClick(\"AdminSettings\");\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (a === \"Admin\") {\r\n\t\t\t\t\t\t\t\tthis.handleMenuClick(\"LiveFeed\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t            else if( a === \"My Account\"){\r\n\t\t\t\t            \tif (window.webix.$$(\"accountWindow\") == null) {\r\n\t\t\t\t\t\t\t\t\tthis.accountClick();\r\n\t\t\t\t            \t}\r\n\t\t\t\t            }    \r\n\r\n\t\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\t\tselect: true,\r\n\t\t\t\t\t},\r\n                \t{\r\n\t\t\t\t\t\tgravity: 1,\r\n\t\t\t\t\t \tview: \"template\",\r\n                 \t\tscroll: false,\r\n                 \t\ttemplate: \"right\",\r\n                 \t\tcontent: \"CreateCourse\",\r\n                 \t\tautoheight:true,\r\n                 \t\talign:\"right\"\r\n                \t},\r\n\t\t\t\t    {\r\n\t\t\t\t\t \tview: \"template\",\r\n\t             \t\ttemplate: \"right\",\r\n\t             \t\tcontent: \"Courses\",\r\n\t             \t\theight: 300,\r\n\t             \t\tscroll: true,\r\n\t             \t\talign:\"right\"\r\n                \t}\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div id=\"AdminToolbar\" >\r\n\t\t\t\t{this.renderCreateCourseButton()}\r\n\t\t\t\t{this.renderCourses()}\r\n\t\t\t\t<Webix ui={ui} data={data} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default AdminToolbar;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Webix from '../webix';\r\nimport Courses from '../containers/courses.js';\r\nimport CreateCourse from '../widget/CreateCourse.js';\r\n\r\nclass InstructorToolbar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewingCourse: props.viewingCourse,\r\n      currentUser: props.currentUser,\r\n      viewingAssignment:props.viewingAssignment,\r\n      role: props.role,\r\n      data: null,\r\n      seed : props.seed\r\n    };\r\n    this.logout = props.logout;\r\n    this.handleCreateCourseWindow = props.handleCreateCourse;\r\n    this.handleMenuClick = props.handleMenuClick;\r\n    this.showCreateCourse = props.handleCreateCourse;\r\n    this.accountClick = props.accountClick;\r\n    this.handleCourseViewer = props.handleCourseViewer;\r\n    this.redrawAll = props.redrawAll;\r\n  }\r\n  componentWillReceiveProps(props) {\r\n      this.setState(props);\r\n  }\r\n  renderCourses() {\r\n    return <Courses\r\n      currentUser={this.state.currentUser}\r\n      role={this.state.role}\r\n      handleCourseViewer={this.handleCourseViewer}\r\n      viewingCourse={this.state.viewingCourse}\r\n      handleMenuClick={this.handleMenuClick}\r\n      accountClick={this.accountClick.bind(this)}\r\n      redrawAll={this.redrawAll} seed={this.state.seed}\r\n      viewingAssignment={this.state.viewingAssignment}\r\n    />\r\n  }\r\n  renderCreateCourseButton() {\r\n    return <CreateCourse \r\n    currentUser={this.state.currentUser} \r\n    role={this.state.role} \r\n    showCreateCourse={this.showCreateCourse} \r\n    accountClick={this.accountClick.bind(this)}\r\n    redrawAll={this.redrawAll} seed={this.state.seed}\r\n    />\r\n  }\r\n\r\n  render() {\r\n    //let scope = this;\r\n    let data = null;\r\n    let ui =\r\n    {\r\n      type: \"space\",\r\n      padding: 0,\r\n      //responsive: \"a1\",\r\n      height: window.innerHeight,\r\n      width: 350,\r\n      rows:\r\n        [\r\n          {\r\n            view: \"list\",\r\n            data: [\"Instructor\", \"My Account\", \"Logout\"],\r\n            ready: function () {\r\n              this.select(this.getFirstId());\r\n            },\r\n            click: function (a) {\r\n              if(a == \"My Account\"){\r\n                if (window.webix.$$(\"accountWindow\") == null) {\r\n                  this.accountClick();\r\n                }\r\n              }\r\n              else if (a === \"Logout\") {\r\n                //Attempt to call the logout chain\r\n                this.logout();\r\n              }\r\n            }.bind(this),\r\n            select: true,\r\n            scroll: false,\r\n            //width: 350,\r\n            height: 150\r\n          },\r\n          {\r\n            gravity: 1,\r\n            view: \"template\",\r\n            scroll: true,\r\n            template: \"right\",\r\n            content: \"CreateCourse\",\r\n            autoheight: true,\r\n            align: \"right\"\r\n          },\r\n          // This is where we would render courses        \r\n          {\r\n            view: \"template\",\r\n            scroll: true,\r\n            template: \"right\",\r\n            content: \"Courses\",\r\n            //autoheight:true,\r\n            height: 300,\r\n            align: \"right\"\r\n          }\r\n        ]\r\n    };\r\n    return (<div id=\"InstructorToolbar\" >\r\n      {this.renderCreateCourseButton()}\r\n      {this.renderCourses()}\r\n      <Webix ui={ui} data={data} />\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default InstructorToolbar;","\r\nimport React, { Component } from 'react';\r\nimport Webix from '../webix';\r\nimport Courses from '../containers/courses.js';\r\nclass StudentToolbar extends Component {\r\n\r\n\r\n\tconstructor(props) {\r\n\t      super(props);\r\n\t      this.state = {\r\n          currentUser: props.currentUser,\r\n          role: props.role,\r\n          viewingCourse: props.viewingCourse,\r\n          viewingAssignment:props.viewingAssignment,\r\n\t        data : null,\r\n          seed : props.seed\r\n         // courseGroup : null\r\n\t      };\r\n    this.logout = props.logout;\r\n    this.handleMenuClick = props.handleMenuClick;\r\n    this.renderAccountWindow = props.renderAccountWindow;\r\n    this.uploadReview = props.uploadReview;\r\n    this.accountClick = props.accountClick;\r\n    this.redrawAll = props.redrawAll;\r\n    this.handleCourseViewer = props.handleCourseViewer;\r\n    // Load course group\r\n   // console.log(\"COnstruct Student: \" + props.viewingCourse);\r\n    \r\n  }\r\n  componentWillReceiveProps(props) {\r\n\r\n      this.setState(props);\r\n\r\n    //  this.getCourseGroup(props);\r\n   \r\n  }\r\n\r\n  renderCourses() {\r\n    return <Courses\r\n      currentUser={this.state.currentUser}\r\n      role={this.state.role}\r\n      handleCourseViewer={this.handleCourseViewer.bind(this)}\r\n      viewingCourse={this.state.viewingCourse}\r\n      handleMenuClick={this.handleMenuClick}\r\n      accountClick={this.accountClick.bind(this)}\r\n      redrawAll={this.redrawAll} seed={this.state.seed}\r\n      viewingAssignment={this.state.viewingAssignment}\r\n    />\r\n  }\r\n  render() {\r\n    let data = null;\r\n    let ui =\r\n    {\r\n      type: \"space\",\r\n      scroll: \"auto\",\r\n      height: window.innerHeight,\r\n      width: 350,\r\n      padding: 0,\r\n      responsive: \"a1\",\r\n      rows: [\r\n        {\r\n          view: \"list\",\r\n          data: [\"Student\", \"My Account\", \"Logout\"],\r\n          ready: function () {\r\n            this.select(this.getFirstId());\r\n          },\r\n          click: function (a) {\r\n            if( a === \"My Account\"){\r\n              if (window.webix.$$(\"accountWindow\") == null) {\r\n                this.accountClick();\r\n              }\r\n            }\r\n            else if (a === \"Logout\") {\r\n              //Attempt to call the logout chain\r\n              this.logout();\r\n            }\r\n          }.bind(this),\r\n          select: true,\r\n          scroll: false,\r\n          height: 200\r\n        },\r\n        {\r\n          view: \"template\",\r\n          scroll: true,\r\n          template: \"right\",\r\n          content: \"Courses\",\r\n          align: \"right\",\r\n          height: 300\r\n          //autoheight: true\r\n        }\r\n      ]\r\n    }\r\n    \r\n    return (<div id=\"StudentToolbar\">\r\n      <Webix ui={ui} data={data} />\r\n      {this.renderCourses()}\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default StudentToolbar;","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\n\r\nclass ManageUsers extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      // Lists of users\r\n      administrators: null,\r\n      instructors: null,\r\n      students: null,\r\n      invitedguests: null,\r\n      // If editing a user\r\n      editUser: null\r\n    };\r\n    // Start Data Load \r\n    if (this.state.administrators === null) { this.getData(\"/Admin/GetAdministrators\", \"administrators\"); }\r\n    if (this.state.instructors === null) { this.getData(\"/Admin/GetInstructors\", \"instructors\"); }\r\n    if (this.state.students === null) { this.getData(\"/Admin/GetStudents\", \"students\"); }\r\n    if (this.state.invitedguests === null) { this.getData(\"/Admin/GetInvitedGuests\", \"invitedguests\"); }\r\n\r\n    window.webix.protoUI({\r\n      name: \"react\",\r\n      defaults: {\r\n        borderless: true\r\n      },\r\n      $init: function (config) {\r\n        this.$ready.push(function () {\r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view)\r\n\r\n  }\r\n  getData(src, stateName) {\r\n    let scope = this;\r\n    fetch(src, {\r\n      method: 'GET', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\",\r\n      mode: \"no-cors\"\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          // This would cause a re-render\r\n          scope.setState({ [stateName]: response.data });\r\n\r\n        }\r\n\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n  }\r\n  saveEditWindow() {\r\n    let scope = this;\r\n    let formValues = window.webix.$$(\"editUserForm\").getValues();\r\n    let isEnabled = function () {\r\n      if (scope.state.editUser.isEnabled === 1) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n    // Save the edit window\r\n    let req = \"/Admin/Edit?ID=\" + this.state.editUser.id + \"&FirstName=\" + formValues.FirstName + \"&LastName=\" +\r\n      formValues.LastName + \"&Email=\" + formValues.Email + \"&Password=\" + formValues.Password +\r\n      \"&Role=\" + formValues.Role + \"&IsEnabled=\" + isEnabled();\r\n    console.log(\"Making Request: \" + req);\r\n    fetch(req, {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\",\r\n      mode: \"no-cors\"\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          // This would cause a re-render\r\n          scope.setState({ \"editUser\": null, \"administrators\": null, \"instructors\": null, \"students\": null, \"invitedguests\": null });\r\n          // States no longer empty\r\n          window.webix.$$(\"editUserWindow\").close();\r\n          //console.log(\"attempting to open render window\");\r\n          //Dirt Reload Data\r\n          // Start Data Load \r\n          if (this.state.administrators === null) { this.getData(\"/Admin/GetAdministrators\", \"administrators\"); }\r\n          if (this.state.instructors === null) { this.getData(\"/Admin/GetInstructors\", \"instructors\"); }\r\n          if (this.state.students === null) { this.getData(\"/Admin/GetStudents\", \"students\"); }\r\n          if (this.state.invitedguests === null) { this.getData(\"/Admin/GetInvitedGuests\", \"invitedguests\"); }\r\n\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n\r\n  }\r\n  newEditWindow(id) {\r\n    // console.log(\"open a window for\" + id);\r\n    // Lets do a request that will cause this to reload\r\n    let scope = this;\r\n    if (this.state.editUser === null) {\r\n      fetch(\"/Admin/GetUser?id=\" + id, {\r\n        method: 'GET', // or 'PUT'\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: \"include\",\r\n        mode: \"no-cors\"\r\n      }).then(res => res.json())\r\n        .then(response => {\r\n          if (response.success) {\r\n            // This would cause a re-render\r\n            scope.setState({ \"editUser\": response.data[0] });\r\n            // States no longer empty\r\n            scope.renderEditWindow();\r\n            //console.log(\"attempting to open render window\");\r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n\r\n  }\r\n  renderEditWindow() {\r\n    console.log(\"rendering\" + JSON.stringify(this.state.editUser));\r\n    let scope = this;\r\n    let isEnabled = function () {\r\n      if (scope.state.editUser.isEnabled) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    };\r\n    window.webix.ui({\r\n      view: \"window\",\r\n      id: \"editUserWindow\",\r\n      width: 500,\r\n      height: 500,\r\n      move: true,\r\n      position: \"center\",\r\n      head: {\r\n        type: \"space\",\r\n        cols: [\r\n          { view: \"label\", label: \"Edit User\" },\r\n          {\r\n            view: \"button\", label: \"Close\", width: 70, left: 250,\r\n            click: function () {\r\n              scope.setState({ \"editUser\": null });\r\n              window.webix.$$(\"editUserWindow\").close();\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"editUserForm\",\r\n            width: 400,\r\n            elements: [\r\n              { view: \"checkbox\", label: \"Active\", name: \"IsEnabled\", value: isEnabled() },\r\n              { view: \"text\", label: \"First Name\", name: \"FirstName\", labelWidth: 100, invalidMessage: \"First Name can not be empty\", value: this.state.editUser.firstName },\r\n              { view: \"text\", label: \"Last Name\", name: \"LastName\", labelWidth: 100, invalidMessage: \"Last Name can not be empty\", value: this.state.editUser.lastName },\r\n              { view: \"text\", label: \"Email\", name: \"Email\", labelWidth: 100, invalidMessage: \"Must be valid email address\", value: this.state.editUser.email },\r\n              { view: \"text\", type: \"password\", label: \"Password\", name: \"Password\", labelWidth: 100, invalidMessage: \"Password can not be empty\" },\r\n              {\r\n                view: \"select\", label: \"Role\", name: \"Role\", labelWidth: 100, value: this.state.editUser.role, options: [\r\n                  { \"id\": \"Administrator\", \"value\": \"Administrator\" },\r\n                  { \"id\": \"Student\", \"value\": \"Student\" },\r\n                  { \"id\": \"Instructor\", \"value\": \"Instructor\" },\r\n                  { \"id\": \"InvitedGuest\", \"value\": \"InvitedGuest\" }\r\n                ]\r\n              },\r\n              {\r\n                margin: 5, cols: [\r\n                  {\r\n                    view: \"button\", value: \"Edit User\", type: \"form\", click: function () {\r\n                      scope.saveEditWindow();\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            rules: {\r\n              \"Email\": window.webix.rules.isEmail,\r\n              \"LastName\": window.webix.rules.isNotEmpty,\r\n              \"FirstName\": window.webix.rules.isNotEmpty,\r\n              \"Password\": window.webix.rules.isNotEmpty\r\n            }\r\n          }\r\n        ]\r\n      }\r\n\r\n    }).show();\r\n  }\r\n  createUser() {\r\n    // check for valid response\r\n    let scope = this;\r\n    let validResponse = window.webix.$$(\"newUserForm\").validate();\r\n    if (validResponse) {\r\n      let newUser = window.webix.$$(\"newUserForm\").getValues();\r\n  \r\n      fetch(\"/Admin/Create?FirstName=\" + newUser.FirstName\r\n        + \"&LastName= \" + newUser.LastName + \"&Email=\" + newUser.Email + \"&Password=\" + newUser.Password, {\r\n          method: 'POST', // or 'PUT'\r\n          //body: JSON.stringify({\"FirstName\":newUser.FirstName,\"LastName\":newUser.LastName,\"Email\":newUser.Email,\"Password\":newUser.password}), // data can be `string` or {object}!\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\",\r\n          mode: \"no-cors\"\r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if (response.success) {\r\n            //console.log(\"Attempted to Create UseR: \" + JSON.stringify(response));\r\n            // If the new user window is open close it\r\n            if (window.webix.$$(\"newUserWindow\") != null) {\r\n              window.webix.$$(\"newUserWindow\").close()\r\n            }\r\n           // console.log(\"open new window to:  \" + response.data[0].id);\r\n            scope.newEditWindow(response.data[0].id);\r\n          } else {\r\n            let errors = \"\";\r\n            response.error.forEach(error => {\r\n              errors += error.description\r\n            });\r\n            window.webix.$$(\"newUserForm\").elements.newUserErrorLabel.setValue(errors);\r\n          }\r\n\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n\r\n  }\r\n  renderOnData() {\r\n    // By doing it like this - it skips the first render and only loads webix if data\r\n    /* {\r\n                          view:\"button\", \r\n                          id:\"my_button\", \r\n                          value:\"Button\", \r\n                          type:\"form\", \r\n                          inputWidth:100 \r\n                     },   \r\n                     */\r\n    if (\r\n      (this.state.administrators != null) &&\r\n      (this.state.instructors != null) &&\r\n      (this.state.students != null) &&\r\n      (this.state.invitedguests != null)) {\r\n      let scope = this;\r\n      let ui =\r\n      {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"button\",\r\n            id: \"createUser_button\",\r\n            value: \"Create User\",\r\n\r\n            inputWidth: 100,\r\n            click: function () {\r\n              // Lets only allow once\r\n              if (window.webix.$$(\"newUserWindow\") == null) {\r\n                window.webix.ui({\r\n                  view: \"window\",\r\n                  id: \"newUserWindow\",\r\n                  width: 500,\r\n                  height: 500,\r\n                  move: true,\r\n                  position: \"center\",\r\n                  head: {\r\n                    type: \"space\",\r\n                    cols: [\r\n                      { view: \"label\", label: \"Create New User\" },\r\n                      {\r\n                        view: \"button\", label: \"Close\", width: 70, left: 250,\r\n                        click: function () {\r\n                          window.webix.$$(\"newUserWindow\").close();\r\n                        }\r\n                      }\r\n                    ]\r\n                  },\r\n                  body: {\r\n                    type: \"space\",\r\n                    rows: [\r\n                      {\r\n                        view: \"form\",\r\n                        id: \"newUserForm\",\r\n                        width: 400,\r\n                        elements: [\r\n\r\n                          { view: \"text\", label: \"First Name\", name: \"FirstName\", labelWidth: 100, invalidMessage: \"First Name can not be empty\" },\r\n                          { view: \"text\", label: \"Last Name\", name: \"LastName\", labelWidth: 100, invalidMessage: \"Last Name can not be empty\" },\r\n                          { view: \"text\", label: \"Email\", name: \"Email\", labelWidth: 100, invalidMessage: \"Must be valid email address\" },\r\n                          { view: \"text\", type: \"password\", label: \"Password\", name: \"Password\", labelWidth: 100, invalidMessage: \"Password can not be empty\" },\r\n                          { view: \"label\", label: \"\", name: \"newUserErrorLabel\", labelWidth: 100 },\r\n                          {\r\n                            margin: 5, cols: [\r\n                              {\r\n                                view: \"button\", value: \"Create User\", type: \"form\", click: function () {\r\n                                  scope.createUser();\r\n                                }\r\n                              }\r\n                            ]\r\n                          }\r\n                        ],\r\n                        rules: {\r\n                          \"Email\": window.webix.rules.isEmail,\r\n                          \"LastName\": window.webix.rules.isNotEmpty,\r\n                          \"FirstName\": window.webix.rules.isNotEmpty,\r\n                          \"Password\": window.webix.rules.isNotEmpty\r\n                        }\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                }).show();\r\n              }\r\n            }\r\n          },\r\n          {\r\n            id: \"ManageUsers\",\r\n            view: \"tabview\",\r\n            fillspace: true,\r\n            cells:\r\n              [\r\n                {\r\n                  header: \"Administrators\",\r\n                  view: \"datatable\",\r\n                  columns:\r\n                    [\r\n                      { id: \"firstName\", header: \"First Name\" },\r\n                      { id: \"lastName\", header: \"Last Name\" },\r\n                      { id: \"email\", header: \"Email\", fillspace: true }\r\n                    ],\r\n                  data: this.state.administrators,\r\n                  autoheight: true,\r\n                  scroll: false,\r\n                  on: { //https://docs.webix.com/api__link__ui.datatable_onclick_config.html\r\n                    // the default click behavior that is true for any datatable cell\r\n                    \"onItemClick\": function (id, e, trg) {\r\n                      scope.newEditWindow(id);\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  header: \"Instructors\",\r\n                  view: \"datatable\",\r\n                  columns:\r\n                    [\r\n                      { id: \"firstName\", header: \"First Name\" },\r\n                      { id: \"lastName\", header: \"Last Name\" },\r\n                      { id: \"email\", header: \"Email\", fillspace: true }\r\n                    ],\r\n                  data: this.state.instructors,\r\n                  autoheight: true,\r\n                  scroll: false,\r\n                  on: { //https://docs.webix.com/api__link__ui.datatable_onclick_config.html\r\n                    // the default click behavior that is true for any datatable cell\r\n                    \"onItemClick\": function (id, e, trg) {\r\n                      scope.newEditWindow(id);\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  header: \"Students\",\r\n                  view: \"datatable\",\r\n                  columns:\r\n                    [\r\n                      { id: \"firstName\", header: \"First Name\" },\r\n                      { id: \"lastName\", header: \"Last Name\" },\r\n                      { id: \"email\", header: \"Email\", fillspace: true }\r\n                    ],\r\n                  data: this.state.students,\r\n                  autoheight: true,\r\n                  scroll: false,\r\n                  on: { //https://docs.webix.com/api__link__ui.datatable_onclick_config.html\r\n                    // the default click behavior that is true for any datatable cell\r\n                    \"onItemClick\": function (id, e, trg) {\r\n                      scope.newEditWindow(id);\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  header: \"Invited Guests\",\r\n                  view: \"datatable\",\r\n                  columns:\r\n                    [\r\n                      { id: \"firstName\", header: \"First Name\" },\r\n                      { id: \"lastName\", header: \"Last Name\" },\r\n                      { id: \"email\", header: \"Email\", fillspace: true }\r\n                    ],\r\n                  data: this.state.invitedguests,\r\n                  autoheight: true,\r\n                  scroll: false,\r\n                  on: { //https://docs.webix.com/api__link__ui.datatable_onclick_config.html\r\n                    // the default click behavior that is true for any datatable cell\r\n                    \"onItemClick\": function (id, e, trg) {\r\n                      scope.newEditWindow(id);\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n          }\r\n        ]\r\n\r\n      };\r\n\r\n      return <Webix ui={ui} />\r\n    }\r\n  }\r\n  render() {\r\n    // console.log(JSON.stringify(this.state.administrators));\r\n\r\n    return (\r\n      <div id=\"ManageUsers\">\r\n        {this.renderOnData()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ManageUsers;\r\n\r\n","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import Webix from '../webix';\r\n\r\nclass ManageCourses extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        currentUser : props.currentUser,\r\n        role : props.role,\r\n      };\r\n\r\n    window.webix.protoUI({\r\n      name:\"react\",\r\n      defaults:{\r\n        borderless:true\r\n      },\r\n      $init:function(config){\r\n        this.$ready.push(function(){    \r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view)\r\n  }\r\n  Createcourse(){\r\n  let scope = this;\r\n      let validResponse = window.webix.$$(\"newCourseForm\").validate();\r\n      if(validResponse){\r\n        let newCourse = window.webix.$$(\"newCourseForm\").getValues();\r\n        fetch(\"/Course/CreateCourse?courseName=\", {\r\n          method: 'POST', // or 'PUT'\r\n          //body: JSON.stringify({\"FirstName\":newUser.FirstName,\"LastName\":newUser.LastName,\"Email\":newUser.Email,\"Password\":newUser.password}), // data can be `string` or {object}!\r\n          headers:{\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\",\r\n          mode:\"no-cors\"\r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if(response.success){\r\n            //console.log(\"Attempted to Create User: \" + JSON.stringify(response));\r\n            // If the new user window is open close it\r\n            if(window.webix.$$(\"newCourseWindow\") != null){\r\n              window.webix.$$(\"newCourseWindow\").close()\r\n            }\r\n            console.log(\"open new window to:  \" + response.data[0].id);\r\n            scope.newEditWindow( response.data[0].id);\r\n          }else{\r\n            let errors = \"\";\r\n            response.error.forEach( error => {\r\n              errors += error.description\r\n            }); \r\n            window.webix.$$(\"newCourseForm\").elements.newUserErrorLabel.setValue(errors);\r\n          }\r\n\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n      }\r\n  }\r\n  render(){\r\n\r\n   // let data = null;\r\n\r\n     return(\r\n      <div id=\"ManageCourses\">\r\n        manage courses\r\n      </div>\r\n               \r\n             \r\n      );\r\n  }\r\n}\r\n\r\nexport default ManageCourses;","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import Webix from '../webix';\r\n\r\nclass AdminSettings extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        currentUser : props.currentUser,\r\n        role : props.role,\r\n        SMTP_Enabled :null,\r\n        SMTP_USERNAME :null,\r\n        SMTP_Port : null,\r\n        SMTP_HOST : null\r\n      };\r\n      this.renderWindow = false;\r\n    window.webix.protoUI({\r\n      name:\"react\",\r\n      defaults:{\r\n        borderless:true\r\n      },\r\n      $init:function(config){\r\n        this.$ready.push(function(){    \r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view);\r\n    //load the content\r\n    this.loadSettings();\r\n  }\r\n\r\n\r\n  loadSettings(){\r\n    // This reaches out and grabs the settings\r\n    // in the final then - it sets this.renderWindow = true\r\n    if (this.state.SMTP_Enabled == null){\r\n      this.getData(\"Settings/GetSettings\");\r\n    }\r\n  }\r\n\r\n\r\n  getData(src){\r\n    let scope = this;\r\n       fetch(src, {\r\n            method: 'GET', // or 'PUT'\r\n            headers:{\r\n              'Content-Type': 'application/json'\r\n            },\r\n            credentials: \"include\",\r\n            mode:\"no-cors\"\r\n          }).then(res => res.json())\r\n          .then(response => {\r\n            if(response.success){\r\n              // This would cause a re-render\r\n              return response;\r\n            }\r\n          }).then(response => {\r\n              this.renderWindow = true;\r\n              let stateChange  = {\r\n                   \"SMTP_Enabled\" :\"\"+ scope.getSetting(\"SMTP_Enabled\",response.data,\"numeric\"),\r\n                   \"SMTP_USERNAME\" :\"\"+ scope.getSetting(\"SMTP_USERNAME\",response.data,\"string\"),\r\n                   \"SMTP_Port\" :\"\"+ scope.getSetting(\"SMTP_Port\",response.data,\"numeric\"),\r\n                   \"SMTP_HOST\" :\"\"+ scope.getSetting(\"SMTP_HOST\",response.data,\"string\")\r\n                  };\r\n              this.setState( stateChange );\r\n          })\r\n          .catch(error => console.error('Error:', error));\r\n  }\r\n  getSetting(setting,data,column){\r\n    for(let i = 0;i<data.length;i++)\r\n    {\r\n        if(data[i].id === setting){\r\n            if(column === \"numeric\"){\r\n                return data[i].numericValue;\r\n            }\r\n            else{\r\n                return data[i].stringValue;\r\n            }\r\n        }\r\n    }\r\n  }\r\n  renderEditWindow(){\r\n    if(this.renderWindow){\r\n      window.webix.ui({\r\n              view:\"window\",\r\n              id:\"settingsWindow\",\r\n              width: 500,\r\n              height: 500,\r\n              move:true,\r\n              position:\"center\",\r\n              head:{\r\n                  type:\"space\",\r\n                  cols:[\r\n                      { view:\"label\", label: \"Settings\" },\r\n                      {\r\n                        view:\"button\", label:\"Close\", width:70,left:250,\r\n                        click:function(){\r\n                          //scope.setState({\"editUser\" : null });\r\n                          window.webix.$$(\"settingsWindow\").close();\r\n                          this.renderWindow = false;\r\n                        }.bind(this)\r\n                      }\r\n                   ]   \r\n              },\r\n              body:{\r\n                  type:\"space\",\r\n                  rows:[\r\n                      { \r\n                        view:\"form\", \r\n                        id:\"configurationForm\",\r\n                        width:400,\r\n                        elements:[\r\n                            { view:\"checkbox\", value: this.state.SMTP_Enabled, label:\"Send Emails\", name: \"IsEnabled\", labelWidth:100 },\r\n                            { view:\"text\", label:\"SMTP Server\", name:\"serverName\", labelWidth:100,invalidMessage: \"Server cannot be empty\", value:this.state.SMTP_HOST},\r\n                            { view:\"text\", label:\"SMTP Port\", name:\"portNum\", width:150, labelWidth:100, invalidMessage:\"Port cannot be empty\", value:this.state.SMTP_Port},\r\n                            { view:\"text\", label:\"SMTP Login\", name:\"smtpUsername\", labelWidth:100,invalidMessage: \"Please login to confirm changes\",value: this.state.SMTP_USERNAME},\r\n                            { view:\"text\", type:\"password\", label:\"SMTP Password\", name:\"smtpPassword\", labelWidth:125, invalidMessage: \"Password can not be empty\" },\r\n                            { margin:5, cols:[\r\n                                { view:\"button\", value:\"Save Settings\" , type:\"form\", click:function(){\r\n                                  this.saveEditWindow();\r\n                                  window.webix.$$(\"settingsWindow\").close();\r\n                                  this.renderWindow = false;\r\n                                }.bind(this)\r\n                              }\r\n                            ]}\r\n                        ],\r\n                        rules:{\r\n                            \"serverName\": window.webix.rules.isNotEmpty,\r\n                            \"portNum\": window.webix.rules.isNotEmpty,\r\n                            \"usernameAdminLogin\": window.webix.rules.isEmail,\r\n                            \"Password\" :  window.webix.rules.isNotEmpty\r\n                        }\r\n                      }\r\n                  ]\r\n              }\r\n          }).show();\r\n    }\r\n  }\r\n\r\n  saveEditWindow(){\r\n    \r\n    let formValues = window.webix.$$(\"configurationForm\").getValues();\r\n      // Save the edit window\r\n      let req = (\"/Settings/EditSettings?isEnabledId=SMTP_Enabled&isEnabledValue=\" + formValues.IsEnabled +\r\n                \"&serverId=SMTP_HOST&serverValue=\" + formValues.serverName +\r\n                \"&portId=SMTP_Port&portValue=\" + formValues.portNum +\r\n                \"&usernameId=SMTP_USERNAME&usernameValue=\" + formValues.smtpUsername +\r\n                \"&passwordId=SMTP_Password&passwordValue=\" + formValues.smtpPassword);\r\n          console.log(\"Making Request: \" + req);\r\n        fetch(req, {\r\n            method: 'POST', // or 'PUT'\r\n            headers:{\r\n              'Content-Type': 'application/json'\r\n            },\r\n            credentials: \"include\",\r\n            mode:\"no-cors\"\r\n          }).then(res => res.json())\r\n          .then(response => {\r\n            if(response.success){\r\n              alert(\"All Changes Saved Successfully.\")\r\n              console.log(\"We did it!\");\r\n            }\r\n          })\r\n          .catch(error => console.error('Error:', error));\r\n  }\r\n  render(){\r\n     return(\r\n      <div id=\"AdminSettings\">\r\n        {this.renderEditWindow()}\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default AdminSettings;","\r\nimport React, { Component } from 'react';\r\n//import Webix from '../webix';\r\n\r\nclass LiveFeed extends Component {\r\n\r\n\tconstructor(props) {\r\n\t      super(props);\r\n\t      this.state = {\r\n\t        data : null\r\n\t      };\r\n  }\r\n\r\n\trender(){\r\n\t\t return(<div  id=\"LiveFeed\">\r\n\t\t\t <div className=\"arrowWithIstructions\">\r\n\t\t\t <img className=\"arrow\" src=\"../../../images/arrow2.png\"></img>\r\n\t\t\t \t <div className=\"instructions\">\r\n\t\t\t\t\t<h1>Click here to peer at some assignments.  Completely up to you though.</h1>\r\n\t\t\t\t </div>\r\n\t\t\t </div>\r\n\t\t\t <div className=\"logoImage\">\r\n\t\t\t <img className=\"theLogo\" src=\"../../../images/logo.png\"></img>\r\n\t\t\t </div>\r\n      </div>\r\n      );\r\n\t}\r\n}\r\nexport default LiveFeed;\r\n\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\n\r\nclass CourseContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      viewingCourse: props.viewingCourse,\r\n      addingStudent: false,\r\n      seed : props.seed\r\n\r\n    }\r\n    this.redrawAll = props.redrawAll;\r\n    this.handleCourseViewer = props.handleCourseViewer;\r\n    this.handleMenuClick = props.handleMenuClick;\r\n    window.webix.protoUI({\r\n      name: \"react\",\r\n      defaults: {\r\n        borderless: true\r\n      },\r\n      $init: function (config) {\r\n        this.$ready.push(function () {\r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view)\r\n  }\r\n  addStudentWindow() {\r\n    window.webix.ui({\r\n      view: \"window\",\r\n      id: \"addStudentWindow\",\r\n      width: 500,\r\n      height: 500,\r\n      move: true,\r\n      position: \"center\",\r\n      head: {\r\n        type: \"space\",\r\n        cols: [\r\n          { view: \"label\", label: \"Add Student to Course\" },\r\n          {\r\n            view: \"button\", id: \"addStudentButton\", label: \"Close\", width: 70, left: 250,\r\n            click: function () {\r\n              this.setState({ addingStudent: false });\r\n              window.webix.$$(\"addStudentWindow\").close();\r\n            }.bind(this)\r\n          }\r\n        ]\r\n      },\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"addStudentForm\",\r\n            width: 400,\r\n            elements: [\r\n              { view: \"text\", label: \"Email\", name: \"Email\", labelWidth: 100, invalidMessage: \"Must be valid email address\" },\r\n              {\r\n                margin: 5,\r\n                cols: [\r\n                  {\r\n                    view: \"button\",\r\n                    value: \"Add Student\",\r\n                    type: \"form\",\r\n                    id: \"AddStudentFormButton\"\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            rules: {\r\n              \"Email\": window.webix.rules.isEmail\r\n            }\r\n          }\r\n        ]\r\n      }\r\n\r\n    }).show();\r\n\r\n    console.log(\"Does button have click: \" + window.webix.$$(\"AddStudentFormButton\").hasEvent(\"onItemClick\"));\r\n    // If its not already bound lets do it\r\n    if (window.webix.$$(\"AddStudentFormButton\").hasEvent(\"onItemClick\")=== false) {\r\n      console.log(\"binding function to button\");\r\n      window.webix.$$(\"AddStudentFormButton\").attachEvent(\"onItemClick\", function (i) {\r\n\r\n        let validResponse = window.webix.$$(\"addStudentForm\").validate();\r\n        if (validResponse) {\r\n            let email = window.webix.$$(\"addStudentForm\").elements[\"Email\"].config.value;\r\n            this.addStudent(email,this.state.viewingCourse);\r\n        }\r\n      }.bind(this));\r\n    }\r\n\r\n  }\r\n  addStudent(email,courseID) {\r\n        fetch(\"/Course/AddStudentToCourse?courseID=\" + courseID + \"&studentEmail=\" + email, {\r\n          method: 'POST', // or 'PUT'\r\n          headers:{\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\",\r\n          mode:\"no-cors\"\r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if(response.success){\r\n            // Should reload student list\r\n            console.log(\"Added Student\");\r\n            window.webix.$$(\"addStudentWindow\").close();\r\n            //this.handleMenuClick(\"LiveFeed\");\r\n             this.redrawAll();\r\n             // eslint-disable-next-line          \r\n              location.reload()\r\n\r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState(props);\r\n  }\r\n  removeStudent(studentID){\r\n     fetch(\"/Course/RemoveStudentToCourse?courseID=\" + this.state.viewingCourse + \"&studentID=\" + studentID, {\r\n          method: 'DELETE', // or 'PUT'\r\n          headers:{\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\"\r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if(response.success){\r\n            // Should reload student list\r\n            // this.handleMenuClick(\"LiveFeed\");\r\n             this.redrawAll();\r\n             // eslint-disable-next-line          \r\n          location.reload()\r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n  }\r\n  getStudentGroup(studentID, courseID) {\r\n    fetch(\"/Course/GetStudentGroup?studentID=\" + studentID + \"&courseID=\" + courseID, \r\n    {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\"\r\n    })\r\n    .then(response => {\r\n      if (response.success) {\r\n        return response;\r\n      }\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n  }\r\n  changeStudentGroup(courseGroupID, groupValue) {\r\n    fetch(\"/Course/ChangeStudentGroup?&courseGroupID=\" + courseGroupID + \"&reviewGroupID=\" + groupValue,\r\n    {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\"\r\n    })\r\n    .then(response => {\r\n      if (response.success) {\r\n        this.redrawAll();\r\n      }\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n  }\r\n  renderUploadAssignmentWindow() {\r\n    let scope = this;\r\n\r\n    var newWindow = window.webix.ui({\r\n      view: \"window\",\r\n      id: \"uploadAssignmentWindow\",\r\n      width:600,\r\n      //height: 600,\r\n      move: true,\r\n      position: \"center\",\r\n      head: {\r\n        type: \"space\",\r\n        cols: [\r\n          { view: \"label\", label: \"Upload an Assignment\" },\r\n          {\r\n            view: \"button\", label: \"Close\", \r\n            width: 70, \r\n            left: 250,\r\n            click: function () {\r\n              //scope.setState({\"editUser\" : null });\r\n              window.webix.$$(\"uploadAssignmentWindow\").close();\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"uploadAssignmentForm\",\r\n            //width: \"auto\",\r\n            elements: [\r\n              { view: \"label\", label: \"Upload your Assignment form here: \", name: \"\", labelWidth: \"auto\", value: \"\" },\r\n              {\r\n                \r\n                view: \"uploader\", inputName: \"files\", upload: \"/CourseAssignment/CreateAssignment\", \r\n                //urlData:{assignmentname:\"new assignment\",courseID:13,dueDate:\"07/08/2019\"} ,\r\n                id: \"AssignmentFile\", link: \"mylist\", value: \"Upload File\", autosend: false\r\n              },\r\n              {\r\n                view: \"list\", id: \"mylist\", type: \"uploader\",\r\n                autoheight: true, borderless: true\r\n              },\r\n              \r\n              { view: \"text\", label: \"Assignment Name\", name: \"Assignment_Name\",labelWidth: 200,invalidMessage:\"Please enter Assignment Name\" },\r\n              /*{ view: \"text\", label: \"Course\", name: \"Course\", labelWidth: 200,invalidMessage:\"What Course is this? \",value:this.state.viewingCourse },*/\r\n              {view:\"calendar\",\r\n              id:\"my_calendar\",\r\n              name:\"Due_Date\",\r\n              date:new Date(\r\n                ),\r\n              weekHeader:true,\r\n              events:window.webix.Date.isHoliday,\r\n              width:300,\r\n              height:250},\r\n              \r\n              //{ view: \"text\", label: \"Due Date\", name: \"Due_Date\", labelWidth: 200,invalidMessage:\"Please enter Valid Date\" }, \r\n              {\r\n                view: \"button\",value:\"Upload\", type:\"form\", \r\n                click: function () {\r\n                  let validResponse = window.webix.$$(\"uploadAssignmentForm\").validate();\r\n                  let FormVal = window.webix.$$(\"uploadAssignmentForm\").getValues();\r\n                  window.webix.$$(\"AssignmentFile\").define({\r\n                    urlData:{assignmentname:FormVal.Assignment_Name,\r\n                    courseID:FormVal.Course,\r\n                    dueDate:(window.webix.$$(\"my_calendar\").config.date).toUTCString()\r\n                    }\r\n                  });\r\n                  window.webix.$$(\"AssignmentFile\").send(function(response) {\r\n                    console.log(\"upload send: \" + JSON.stringify(response));\r\n                    if (response != null){\r\n                     // console.log(Date(\"07/08/2019\"));\r\n                      window.webix.message(\"Success\");\r\n                      // eslint-disable-next-line          \r\n                       location.reload();\r\n                      //window.webix.$$(\"uploadAssignmentWindow\").attachEvent(\"onUploadComplete\", function(response){\r\n                        window.webix.$$(\"uploadAssignmentWindow\").close();\r\n                        //window.webix.message(\"done\");\r\n                    //}); \r\n                    }\r\n                    else {\r\n                    //console.log(Date(\"07/08/2019\"));\r\n                    alert(\"Nothing to Submit\");\r\n                  }})\r\n                }\r\n              }\r\n            ],\r\n            rules: {\r\n              \"Course\": window.webix.rules.isNotEmpty,\r\n              \"Due_Date\": window.webix.rules.isNotEmpty,\r\n              \"Assignment_Name\":window.webix.rules.isNotEmpty\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }).show();\r\n    window.webix.$$(\"uploadAssignmentForm\").setValues(\r\n         { Course:this.state.viewingCourse}\r\n     );\r\n  }\r\n  renderChangeStudentGroupWindow(courseGroupID) {\r\n    let scope = this;\r\n\r\n    var newWindow = window.webix.ui({\r\n      view: \"window\",\r\n      id: \"changeStudentGroupWindow\",\r\n      width:600,\r\n      move: true,\r\n      position: \"center\",\r\n      head: {\r\n        type: \"space\",\r\n        cols: [\r\n          { view: \"label\", label: \"Change Student Group\" },\r\n          {\r\n            view: \"button\", label: \"Close\", \r\n            width: 70, \r\n            left: 250,\r\n            click: function () {\r\n              window.webix.$$(\"changeStudentGroupWindow\").close();\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"changeStudentGroupForm\",\r\n            elements: [\r\n              { id: courseGroupID, view: \"text\", label: \"CourseGroup Record ID: \" + courseGroupID, name: \"studentGroup\",labelWidth: 200,\r\n               invalidMessage:\"Please Enter a Valid Student Group ID\" },\r\n              {\r\n                view: \"button\",value:\"Change\", type:\"form\", \r\n                click: function () {\r\n                  let validResponse = window.webix.$$(\"changeStudentGroupForm\").validate();\r\n                  let FormVal = window.webix.$$(\"changeStudentGroupForm\").getValues();\r\n                  this.changeStudentGroup(courseGroupID, FormVal.studentGroup);\r\n                  window.webix.$$(\"changeStudentGroupWindow\").close();\r\n                  this.redrawAll();\r\n                }.bind(this)\r\n              }\r\n            ],\r\n            rules: {\r\n              \"studentGroup\": window.webix.rules.isNotEmpty\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }).show();\r\n /*   window.webix.$$(\"uploadAssignmentForm\").setValues(\r\n         { Course:this.state.viewingCourse}\r\n     );\r\n     */\r\n  }\r\n  deleteAssignment(assignmentID){\r\n    fetch(\"/CourseAssignment/DeleteAssignment?assignmentID=\" + assignmentID, {\r\n          method: 'DELETE', // or 'PUT'\r\n          headers:{\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\"\r\n          \r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if(response.success){\r\n            this.redrawAll();\r\n            window.webix.$$(\"AssignmentsContent\").load(\"/CourseAssignment/Assignments?courseID=\" +this.state.viewingCourse);\r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n  }\r\n  render() {\r\n    console.log(\"render course content\");\r\n    let reviewGroupOptions = function() {\r\n      let optionString = \"\"\r\n      for (let i = 1; i <= 20; i ++) {\r\n        optionString += \"<option id='\" + i + \"'>Group \" + i + \"</option>\";\r\n      }\r\n      return optionString;\r\n    }\r\n    let ui = {\r\n      rows: [\r\n        {\r\n          header: \"Course Settings (ID: \" + this.state.viewingCourse + \")\", body: \" \"\r\n        },\r\n        {\r\n          view: \"tabview\",\r\n          autoheight: true,\r\n          header: \"Course\",\r\n          cells: [\r\n            {\r\n              autoheight: true,\r\n              header: \"Assignments\",\r\n              body: {\r\n                autoheight: true,\r\n                rows: [\r\n                  {\r\n                    view: \"button\",\r\n                    value: \"Add Assignment\",\r\n                    type: \"form\",\r\n                    id: \"AddAssignmnetButton\",\r\n                    on: {\r\n                          'onItemClick' : function(i){\r\n                              this.renderUploadAssignmentWindow();\r\n                            }.bind(this)\r\n                    }\r\n                  },\r\n                  {\r\n                    css: \"subCourseMenu\",\r\n                    header: \"Assignments\",\r\n                    autoheight:true,\r\n                    body:  {\r\n                        autoheight: true,\r\n                        view: \"datatable\",\r\n                      id: \"AssignmentsContent\",\r\n                        columns: [\r\n                          { id: \"name\", header: \"Name\",  width:150, sort:\"string\"},\r\n                          { id: \"dueDate\", header: \"DueDate\", width:150, sort:\"string\"},\r\n                          { header: \"Manage\",  gravity:2,template:function(obj){ \r\n                             return \"<div class='webix_el_button'><button class='webixtype_base'>Remove</button></div>\";\r\n                           }}\r\n                        ],\r\n                        url: \"/CourseAssignment/Assignments?courseID=\" + this.state.viewingCourse,\r\n                        onClick : {\r\n                            webixtype_base:function(ev, id, html){\r\n                            //eslint-disable-next-line\r\n                            if(confirm(\"Are you sure you want to delete this assignment?\")){\r\n                               // window.webix.alert(\"Clicked row \"+id);\r\n                              let assignment =  window.webix.$$(\"AssignmentsContent\").getItem(id);\r\n                              this.deleteAssignment(assignment.id);\r\n                            }\r\n                          }.bind(this) \r\n                        }   \r\n                      }\r\n                    }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              header: \"Groups\",\r\n              body: {\r\n                autoheight: true,\r\n                rows: [\r\n                  {\r\n                    autoheight: true,\r\n                    view: \"datatable\",\r\n                    columns: [\r\n                      { id: \"id\", map: \"#fK_AppUser.id#\", header: \"\", width: 50 },\r\n                      { id: \"firstName\", map: \"#fK_AppUser.firstName#\", header: \"First Name\", width: 200 },\r\n                      { id: \"lastName\", map: \"#fK_AppUser.lastName#\", header: \"Last Name\", width: 200 },\r\n                      { id: \"reviewGroup\", header: \"Review Group\", width: 400 }\r\n                    ],\r\n                    on:{\r\n                      onItemClick:function(id, ev, html){\r\n                        console.log(id[\"row\"]);\r\n                        if (window.webix.$$(\"changeStudentGroupWindow\") == null) {\r\n                          this.renderChangeStudentGroupWindow(id[\"row\"]);\r\n                        }\r\n                      }.bind(this)\r\n                    },\r\n                    url: \"/Course/GetStudentGroups?courseID=\" + this.state.viewingCourse\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              header: \"Students\",\r\n              body: {\r\n                autoheight: true,\r\n                rows: [\r\n                  {\r\n                    view: \"button\",\r\n                    value: \"Add Student\",\r\n                    css: \"webix_primary\",\r\n                    inputWidth: 100,\r\n                    on: {\r\n                      'onItemClick': function (i) {\r\n                        if (!this.state.addingStudent) {\r\n                          this.setState({ addingStudent: true });\r\n                          this.addStudentWindow();\r\n                        }\r\n                      }.bind(this)\r\n                    }\r\n                  },\r\n                  {\r\n                    autoheight: true,\r\n                    view: \"datatable\",\r\n                    columns: [\r\n                      { id: \"rank\", header: \"\", width: 50 },\r\n                      { id: \"firstName\", header: \"First Name\", width: 200 },\r\n                      { id: \"lastName\", header: \"Last Name\", width: 80 },\r\n                      { header: \"Enrollment\", width: 100 ,   template:\"<input type='button' value='Remove' class='remove_button'>\"}\r\n                    ],\r\n                    onClick : {\r\n                      remove_button:function (i,ev){\r\n                             // Don't remove the comment below - its actually functional.\r\n                             //eslint-disable-next-line\r\n                             let confirmCheck = confirm(\"Are you sure you want to remove this student?\");\r\n                             if(confirmCheck){\r\n                                console.log(\"I want to remove \" + ev.row);\r\n                                this.removeStudent(ev.row);\r\n                             }\r\n                          }.bind(this)\r\n                    },\r\n                    url: \"/Course/GetStudents?courseID=\" + this.state.viewingCourse\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n    let data = null;\r\n\r\n    return (\r\n      <div id=\"CourseContent\">\r\n        <Webix ui={ui} data={data} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CourseContent;","import React, { Component } from 'react';\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            currentUser: props.currentUser,\r\n            role: props.role,\r\n            assignmentId : props.assignmentId\r\n        };\r\n    }\r\n\r\n    renderCommentForm() {\r\n\r\n       window.webix.ui({\r\n            view: \"window\",\r\n            id: \"comment_win\",\r\n            head: {\r\n                type: \"space\",\r\n                padding: 0,\r\n                cols: [\r\n                    { view: \"label\", label: \"Add Comment\" },\r\n                    {\r\n                        view: \"button\", label: \"Close\", width: 70, left: 250,\r\n                        click: function () {\r\n                            window.webix.$$(\"comment_win\").close();\r\n                        }\r\n                    }]\r\n            },\r\n            move: true,\r\n            width: 300,\r\n            height: 200,\r\n            body: {\r\n                type: \"space\",\r\n                rows: [\r\n                    {\r\n                        view: \"form\",\r\n                        id: \"newCommentForm\",\r\n                        padding: 0,\r\n                        elements: [\r\n                            {\r\n                                view: \"textarea\",\r\n                                name: \"textBox\"\r\n                            },\r\n                            {\r\n                                view: \"button\", value: \"Comment\", type: \"form\", click: function () {\r\n                                    this.createComment()  //studentAssignmentID,comment);\r\n                                    window.webix.$$(\"comment_win\").close();\r\n                                }.bind(this)\r\n                            }\r\n                        ]\r\n                    }]\r\n            }\r\n        }).show();\r\n        \r\n    }\r\n    createComment() {\r\n        let formdata = window.webix.$$(\"newCommentForm\").getValues();\r\n        //console.log(formdata.textBox);\r\n\r\n        fetch(\"Comment/CreateComment?studentAssignmentId=\" + this.state.assignmentId + \"&commentContent=\" + formdata.textBox, {\r\n            method: 'POST', // or 'PUT'\r\n\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: \"include\",\r\n            mode: \"no-cors\"\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                if (response.success) {\r\n                    this.setState({ \"data\": 0 });\r\n                  //  this.redrawAll();\r\n                  \r\n                } else {\r\n                    //   let errors = \"\";\r\n                    //response.error.forEach(error => {\r\n                    //  //   errors += error.description\r\n                    //    });\r\n\r\n                }\r\n                console.log(\"attempt reload\");\r\n                 //eslint-disable-next-line\r\n                 location.reload();\r\n\r\n            })\r\n            .catch(error => console.error('Error:', error));\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (<div id=\"CommentForm\">\r\n            \r\n    {this.renderCommentForm()}\r\n        </div>)\r\n    }\r\n}\r\nexport default CommentForm;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Webix from '../webix';\r\nclass CommentView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentUser: props.currentUser,\r\n            role: props.role,\r\n            assignmentId: props.assignmentId,\r\n            comments:null\r\n        };\r\n        if (this.state.assignmentId != null) {\r\n            //this.GetComments();\r\n        }\r\n    }\r\n    componentWillReceiveProps(props) {\r\n        this.setState(props);\r\n        //this.GetComments();\r\n    }\r\n    GetComments() {\r\n\r\n        fetch(\"Comment/GetCommentsByAssignmentId?studentAssignmentId=\" + this.state.assignmentId, {\r\n            method: 'Get', // or 'PUT'\r\n\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: \"include\",\r\n            mode: \"no-cors\"\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                if (response.success) {\r\n                    this.setState({ \"comments\": response.data });\r\n                    console.log(this.state)\r\n                    // this.redrawAll();\r\n                } else {\r\n                    //   let errors = \"\";\r\n                    //response.error.forEach(error => {\r\n                    //  //   errors += error.description\r\n                    //    });\r\n\r\n                }\r\n                console.log('this is the comments responce: ' + JSON.stringify(response));\r\n\r\n            })\r\n            .catch(error => console.error('Error:', error));\r\n\r\n    }\r\n\r\n    renderComments() {\r\n\r\n        let ui = ({\r\n\t\t\t\tview:\"datatable\",\r\n\t\t\t\tcolumns:[\r\n                    { id:\"firstName\",map:\"#fK_APP_USER.firstName#\",\theader:\"Name\", css:\"\",width:100},\r\n                    { id:\"content\",\theader:\"\", css:\"\",width:550},\r\n                    \r\n                    \r\n\t\t\t\t\t\r\n\t\t\t\t],\r\n\t\t\t\tautoheight:true,\r\n\t\t\t\tautowidth:true,\r\n                //data: JSON.stringify(this.state.comments)\r\n                url:\"Comment/GetCommentsByAssignmentId?studentAssignmentId=\" + this.state.assignmentId\r\n\t\t\t});\t\r\n\r\n        return <Webix ui={ui} />\r\n\r\n    }\r\n    render() {\r\n\r\n        return (<div id=\"CommentView\">\r\n      \r\n            {this.renderComments()}\r\n        </div>)\r\n    }\r\n\r\n}\r\nexport default CommentView;","import React, { Component } from 'react';\r\nimport renderHTML from 'react-render-html';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\nimport { format } from 'url';\r\nimport CommentForm from './CommentForm.js';\r\nimport CommentView from './CommentView.js';\r\nimport { INSPECT_MAX_BYTES } from 'buffer';\r\n\r\n\r\nclass ShowStudentAssignment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg: null,\r\n      assignment: null,\r\n      studentAssignmentPfileId: null,\r\n      studentAssignmentId: null,\r\n      listOfReviews: null,\r\n      reviewErrorMsg: null,\r\n      reviewPFileId:null,\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      viewingCourse: props.viewingCourse,\r\n      viewingAssignment: props.viewingAssignment,\r\n      downloadLink: props.buildAssignmentLink,\r\n      viewOtherStudent: props.viewOtherStudent,\r\n      showCommentForm: false\r\n     \r\n    };\r\n    this.uploadReview.bind(this);\r\n    this.renderStudentAssignmentReviewsDataTable.bind(this);\r\n    this.fetchStudentAssignmentByCourseAssignmentAndUser.bind(this);\r\n    this.fetchAllReviewsForTheStudenAssignmentSubmission.bind(this);\r\n    this.renderUploadStudentAssignmentWindow.bind(this);\r\n    this.renderAssignmentReviewButton.bind(this);\r\n    this.getStudentAssignmentSubmissionDetails(props);\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState(props);\r\n  }\r\n\r\n  //Functions that fetch the data\r\n  fetchStudentAssignmentByCourseAssignmentAndUser(props) {\r\n    fetch(\"/StudentAssignment/GetStudentAssignmentsByCourseAssignmentAndUser?courseAssignmentId=\" + this.state.viewingAssignment.id, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      credentials: \"include\",\r\n      mode: \"no-cors\"\r\n    }).then(response => response.json())\r\n      .then(response => {\r\n        console.log(\"THE RESPONSE = \" + JSON.stringify(response));\r\n        if (response.success) {\r\n          if (response.data.length > 0) {\r\n            this.setState({\r\n              assignment: response.data[0].fK_PFile.name,\r\n              assignmentID: response.data[0].fK_PFile.id,\r\n              studentAssignmentId: response.data[0].id,\r\n              studentAssignmentPfileId: response.data[0].fK_PFile.id,\r\n              \r\n            });\r\n            this.fetchAllReviewsForTheStudenAssignmentSubmission();\r\n          }\r\n        } else {\r\n          this.setState({ errorMsg: response.error[0].description });\r\n        }\r\n      })\r\n  }\r\n\r\n  fetchAllReviewsForTheStudenAssignmentSubmission() {\r\n    fetch(\"Review/GetReviewsByStudentAssignmentId?studentAssignmentId=\" + this.state.studentAssignmentId, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      credentials: \"include\",\r\n      mode: \"no-cors\"\r\n    }).then(response => response.json())\r\n      .then(response => {\r\n        let listOfReviews = [];\r\n        if (response.success) {\r\n          for (let i = 0; i < response.data.length; i++) {\r\n            listOfReviews[i] = response.data[i];\r\n          }\r\n        }\r\n        else {\r\n          this.setState({ reviewErrorMsg: response.error[0] });\r\n        }\r\n      })\r\n  }\r\n  getStudentAssignmentSubmissionDetails(props) {\r\n    this.fetchStudentAssignmentByCourseAssignmentAndUser(props);\r\n\r\n  }\r\n  //render the buttons\r\n  renderAssignmentReviewButton() {\r\n    let ui = {\r\n      view: \"button\",\r\n      id: \"uploadReviewButton\",\r\n      value: \"Upload Review\",\r\n      css: \"webix_primary\",\r\n      inputWidth: 175,\r\n      click: function () {\r\n        this.uploadReview();\r\n      }.bind(this)\r\n    };\r\n    return <Webix ui={ui} data={null} />\r\n  }\r\n  renderUploadStudentAssignmentButton() {\r\n    let ui = {\r\n      view: \"button\",\r\n      id: \"uploadStudentAssignmentButton\",\r\n      value: \"Upload Assignment\",\r\n      css: \"webix_primary\",\r\n      inputWidth: 175,\r\n      click: function () {\r\n        this.renderUploadStudentAssignmentWindow();\r\n      }.bind(this)\r\n    };\r\n    return <Webix ui={ui} data={null} />\r\n  }\r\n  renderStudentAssignmentReviewsDataTable() {\r\n    if (this.state.studentAssignmentId != null) {\r\n      let reviewDataTable = {\r\n        view: \"datatable\",\r\n        id:\"studentReviewsDataTable\",\r\n        autoheight:true,\r\n        columns: [\r\n          { id: \"reviewName\", map: \"#fK_PFile.name#\", header: \"Review File Name\", width: 125 },\r\n          { id: \"firstName\", map: \"#fK_PFile.appUser.firstName#\", header: \"First Name\", width: 125 },\r\n          { id: \"lastName\", map: \"#fK_PFile.appUser.lastName#\", header: \"Last Name\", width: 125 },\r\n          { id:\"download\",css:\"myaction\", header: { css:\"myaction\",text:\"download\",width:150},template:\"Download\"}\r\n        ],\r\n        url: \"Review/GetReviewsByStudentAssignmentId?studentAssignmentId=\"+this.state.studentAssignmentId,\r\n        onClick:{ \r\n          \"myaction\" : function(arg,t,e) {\r\n            console.log(\"Clicked On: \" + JSON.stringify(window.webix.$$(\"studentReviewsDataTable\").getItem(t)));\r\n            let theReview = window.webix.$$(\"studentReviewsDataTable\").getItem(t);\r\n            fetch(\"PFile/Download?pFileId=\"+theReview.fK_PFile.id);\r\n        }\r\n      },\r\n      };\r\n\r\n      return <Webix ui={reviewDataTable} />\r\n    }\r\n  }\r\n  //Render the forms\r\n  renderUploadStudentAssignmentWindow(props) {\r\n    let scope = this;\r\n    var newWindow = window.webix.ui({\r\n      view: \"window\",\r\n      id: \"uploadStudentAssignmentWindow\",\r\n      width: 600,\r\n      //height: 600,\r\n      move: true,\r\n      position: \"center\",\r\n      head: {\r\n        type: \"space\",\r\n        cols: [\r\n          { view: \"label\", label: \"Upload a student Assignment\" },\r\n          {\r\n            view: \"button\", label: \"Close\",\r\n            width: 70,\r\n            left: 250,\r\n            click: function () {\r\n              window.webix.$$(\"uploadStudentAssignmentWindow\").close();\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"uploadStudentAssignmentForm\",\r\n            elements: [\r\n              { view: \"label\", label: \"Upload your student assignment here: \", name: \"\", labelWidth: \"auto\", value: \"\" },\r\n              {\r\n                view: \"uploader\", inputName: \"files\", upload: \"/StudentAssignment/UploadStudentAssignment\",\r\n                id: \"studentAssignmentFile\", link: \"mylist\", value: \"Upload File\", autosend: false\r\n              },\r\n              {\r\n                view: \"list\", id: \"mylist\", type: \"uploader\",\r\n                autoheight: true, borderless: true\r\n              },\r\n              //{ view: \"text\", label: \"Assignment Name\", name: \"Assignment_Name\",labelWidth: 200,invalidMessage:\"Please enter Assignment Name\" },\r\n              {\r\n                view: \"button\", value: \"Upload\", type: \"form\",\r\n                click: function (props) {\r\n                  console.log(\"VIEWING ASSIGNMENT ID = \" + this.state.viewingAssignment.id);\r\n                  let validResponse = window.webix.$$(\"uploadStudentAssignmentForm\").validate();\r\n                  let FormVal = window.webix.$$(\"uploadStudentAssignmentForm\").getValues();\r\n                  window.webix.$$(\"studentAssignmentFile\").define({\r\n                    urlData: { courseAssignmentId: this.state.viewingAssignment.id }\r\n                  });\r\n                  window.webix.$$(\"studentAssignmentFile\").send(function (response) {\r\n                    if (response != null) {\r\n                      window.webix.message(\"Success\");\r\n                    }\r\n                    else {\r\n                      alert(\"Nothing to Submit\");\r\n                    }\r\n                  })\r\n                }.bind(this)\r\n              }\r\n            ],\r\n            rules: {\r\n              //No rules defined yet!!!\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }).show();\r\n    window.webix.$$(\"uploadStudentAssignmentForm\").setValues(\r\n      { Course: this.state.viewingCourse }\r\n    );\r\n  }\r\n  uploadReview() {\r\n    let scope = this;\r\n    var newWindow = window.webix.ui({\r\n      view: \"window\",\r\n      id: \"uploadStudentAssignmentReviewWindow\",\r\n      width: 600,\r\n      //height: 600,\r\n      move: true,\r\n      position: \"center\",\r\n      head: {\r\n        type: \"space\",\r\n        cols: [\r\n          { view: \"label\", label: \"Upload a review for this student Assignment\" },\r\n          {\r\n            view: \"button\", label: \"Close\",\r\n            width: 70,\r\n            left: 250,\r\n            click: function () {\r\n              window.webix.$$(\"uploadStudentAssignmentReviewWindow\").close();\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"uploadStudentAssignmentReviewForm\",\r\n            elements: [\r\n              { view: \"label\", label: \"Upload your review for this student assignment here: \", name: \"\", labelWidth: \"auto\", value: \"\" },\r\n              {\r\n                view: \"uploader\", inputName: \"files\", upload: \"/Review/UploadReview\",\r\n                id: \"reviewFile\", link: \"mylist\", value: \"Upload File\", autosend: false\r\n              },\r\n              {\r\n                view: \"list\", id: \"mylist\", type: \"uploader\",\r\n                autoheight: true, borderless: true\r\n              },\r\n              {\r\n                view: \"button\", value: \"Upload Review\", type: \"form\",\r\n                click: function (props) {\r\n                  let validResponse = window.webix.$$(\"uploadStudentAssignmentReviewForm\").validate();\r\n                  let FormVal = window.webix.$$(\"uploadStudentAssignmentReviewForm\").getValues();\r\n                  window.webix.$$(\"reviewFile\").define({\r\n                    urlData: { studentAssignmentId: this.state.studentAssignmentId }\r\n                  });\r\n                  window.webix.$$(\"reviewFile\").send(function (response) {\r\n                    if (response != null) {\r\n                      window.webix.message(\"Succsess\");\r\n                      window.webix.$$(\"uploadStudentAssignmentReviewWindow\").close();\r\n                    }\r\n                  })\r\n                }.bind(this)\r\n              }\r\n            ],\r\n            rules: {\r\n              //No rules defined yet!!!\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }).show();\r\n    window.webix.$$(\"uploadStudentAssignmentReviewForm\").setValues(\r\n      { Course: this.state.viewingCourse }\r\n    );\r\n  }\r\n  renderLink() {\r\n    if (this.state.studentAssignmentPfileId != null) {\r\n      console.log(\"render the link\");\r\n      return (<div><a href={'/PFile/Download?pFileId=' + this.state.studentAssignmentPfileId}>Download Your Assignment Submission </a></div>);\r\n    }\r\n    console.log(\"no render\");\r\n  }\r\n  renderCommentForm() {\r\n    if (this.state.showCommentForm) {\r\n      //this.setState({showCommentFormForm: false});\r\n      return <CommentForm currentUser={this.state.currentUser} role={this.state.role} assignmentId={this.state.studentAssignmentId} />\r\n    }\r\n  }\r\n  renderAddCommentButton() {\r\n    let ui = {\r\n      view: \"button\",\r\n      id: \"addComment\",\r\n      value: \"Add Comment\",\r\n      css: \"webix_primary\",\r\n      inputWidth: 175,\r\n      click: function () {\r\n        this.setState({ showCommentForm: true });\r\n      }.bind(this)\r\n    };\r\n    return <Webix ui={ui} data={null} />\r\n  }\r\n  renderComments() {\r\n    console.log('rendercomments called this.state.studentassignmentid = '+ this.state.studentAssignmentId)\r\n    if (this.state.studentAssignmentId != null) {\r\n      return <CommentView currentUser={this.state.currentUser} role={this.state.role} assignmentId={this.state.studentAssignmentId} />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('this is student id :' + this.state.studentAssignmentId);\r\n    return (\r\n      <div id=\"ShowStudentAssignment\" className=\"showStudentAss\">\r\n        <h1>Your Submission Information for {this.state.viewingAssignment.name}</h1>\r\n        <h3>{this.state.errorMsg}</h3>\r\n        {this.renderUploadStudentAssignmentButton()}\r\n        {this.renderLink()}\r\n        <h1>Reviews for your Assignment Submission</h1>\r\n        {this.renderStudentAssignmentReviewsDataTable()}\r\n        {this.state.listOfReviews}\r\n        {this.state.reviewErrorMsg}\r\n        {this.renderAssignmentReviewButton()}\r\n        <h1>Comments for your assignment</h1>\r\n        {this.renderAddCommentButton()}\r\n        {this.renderCommentForm()}\r\n        {this.renderComments()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ShowStudentAssignment;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\nimport ShowStudentAssignment from '../widget/ShowStudentAssignment';\r\nclass ShowAssignment extends Component {\r\n constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      viewingCourse: props.viewingCourse,\r\n      viewingAssignment: props.viewingAssignment,\r\n      downloadLink : this.buildAssignmentLink(props),\r\n      courseName : props.viewingAssignment.fK_COURSE.name,\r\n      assignmentName : props.viewingAssignment.name,\r\n      viewOtherStudent: props.viewOtherStudent\r\n     \r\n    };\r\n    this.uploadReview = props.uploadReview;\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState(props);\r\n  }\r\n  buildAssignmentLink(props){\r\n  \t\ttry{\r\n  \t\t\treturn  <div><a href={'/PFile/Download?pFileId='+props.viewingAssignment.pFile.id }   target='new'>Download Instructions</a><b></b></div>\r\n  \t\t}\r\n  \t\tcatch(e){\r\n  \t\t\tconsole.log(\"Failed: \" + e);\r\n\t\t\treturn  `No Assignment Instructions Available`;\r\n  \t\t}\r\n  \t\treturn null;\r\n  }\r\n\r\n  renderAdminInstructorList(){\r\n  \t\treturn (\r\n  \t\t\t<div>\r\n  \t\t\t<h2>{this.state.courseName}</h2>\r\n  \t\t\t<h3>{this.state.assignmentName}</h3>\r\n  \t\t\t\r\n  \t\t\t<div id=\"downloadLink\">{this.state.downloadLink}</div>\r\n  \t\t\t\t\t\r\n  \t\t\t\t\r\n\r\n  \t\t\t</div>\r\n  \t\t\t);\r\n  \t\t\r\n  }\r\n  render() {\r\n  \tlet data = null;\r\n\tlet ui = null;\r\n\r\n    return (\r\n      <div id=\"ShowAssignment\">\r\n      \t\r\n     {this.renderAdminInstructorList()}\r\n     <ShowStudentAssignment currentUser={this.state.currentUser} role={this.state.role} viewingAssignment={this.state.viewingAssignment} viewingCourse={this.state.viewingCourse} uploadReview={this.uploadReview} viewOtherStudent={this.state.viewOtherStudent}></ShowStudentAssignment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// <Webix ui={ui} data={data} />\r\nexport default ShowAssignment;","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\nimport AdminToolbar from '../widget/AdminToolbar';\r\nimport InstructorToolbar from '../widget/InstructorToolbar';\r\nimport StudentToolbar from '../widget/StudentToolbar';\r\nimport ManageUsers from '../widget/ManageUsers';\r\nimport ManageCourses from '../widget/ManageCourses';\r\nimport AdminSettings from '../widget/AdminSettings';\r\nimport LiveFeed from '../widget/LiveFeed';\r\nimport CourseContent from '../containers/CourseContent';\r\nimport ShowAssignment  from '../widget/ShowAssignment';\r\nimport ShowStudentAssignment  from '../widget/ShowStudentAssignment';\r\nclass Portal extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        currentUser : props.currentUser,\r\n        role : props.role,\r\n        data : null,\r\n        account : null,\r\n        viewingCourse: props.viewingCourse,\r\n        viewingAssignment: props.viewingAssignment,\r\n        currentContentWidgets : [\"LiveFeed\"],\r\n        seed : props.seed\r\n      };\r\n    this.redrawAll = props.redrawAll;\r\n    this.handleCourseViewer = props.handleCourseViewer;\r\n    // Used to change user state from App.js\r\n    this.handleLogin = props.handleLogin;\r\n    // Logout Function\r\n    this.logout.bind(this);\r\n\r\n      //Account menu click\r\n      this.accountClick.bind(this);\r\n      this.fetchAccountFormData.bind(this);\r\n  \r\n    // Handle Menu Users Click\r\n    this.handleMenuClick.bind(this);\r\n   \r\n  }\r\n  renderPortal() {\r\n    //https://forum.webix.com/discussion/31137/reactjs-layout-components\r\n    window.webix.protoUI({\r\n      name: \"portal\",\r\n      defaults: {\r\n        borderless: true\r\n      },\r\n      $init: function (config) {\r\n        this.$ready.push(function () {\r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view)\r\n  }\r\n\r\n componentWillReceiveProps(props){\r\n  this.setState(props);\r\n }\r\n  /* Listed Render - this is so we can control what gets passed to what widget/container */\r\n  renderLiveFeed() {\r\n    if (this.state.currentContentWidgets.includes(\"LiveFeed\")) {\r\n      return <LiveFeed currentUser={this.state.currentUser} role={this.state.role} logout={this.logout.bind(this)}  redrawAll={this.redrawAll} seed={this.state.seed}/>\r\n\r\n    }\r\n  }\r\n  renderAdminToolbar() {\r\n    if (this.state.role === \"Administrator\") {\r\n      return <AdminToolbar currentUser={this.state.currentUser}\r\n        role={this.state.role}\r\n        logout={this.logout.bind(this)}\r\n        handleMenuClick={this.handleMenuClick.bind(this)}\r\n        viewingCourse={this.state.viewingCourse}\r\n        handleCourseViewer={this.handleCourseViewer.bind(this)}\r\n        accountClick={this.accountClick.bind(this)}\r\n        redrawAll={this.redrawAll} seed={this.state.seed}\r\n        viewingAssignment={this.state.viewingAssignment}\r\n        />\r\n    }\r\n  }\r\n  renderInstructorToolbar() {\r\n    if (this.state.role === \"Instructor\") {\r\n      return <InstructorToolbar currentUser={this.state.currentUser}\r\n        role={this.state.role}\r\n        logout={this.logout.bind(this)}\r\n        handleCourseViewer={this.handleCourseViewer.bind(this)}\r\n        handleMenuClick={this.handleMenuClick.bind(this)}\r\n        viewingCourse={this.state.viewingCourse}\r\n        accountClick={this.accountClick.bind(this)}\r\n        redrawAll={this.redrawAll} seed={this.state.seed}\r\n        viewingAssignment={this.state.viewingAssignment}\r\n        />\r\n    }\r\n  }\r\n  renderStudentToolbar() {\r\n    if (this.state.role === \"Student\") {\r\n      return <StudentToolbar \r\n      currentUser={this.state.currentUser} \r\n      role={this.state.role} \r\n      logout={this.logout.bind(this)}  \r\n      handleCourseViewer={this.handleCourseViewer.bind(this)}\r\n      handleMenuClick={this.handleMenuClick.bind(this)} \r\n      viewingCourse={this.state.viewingCourse}\r\n      accountClick={this.accountClick.bind(this)}\r\n      redrawAll={this.redrawAll} seed={this.state.seed}\r\n      viewingAssignment={this.state.viewingAssignment}\r\n      />\r\n    }\r\n  }\r\n  renderCourseContent() {\r\n    if (\r\n        ((this.state.role === \"Instructor\") ||  (this.state.role === \"Administrator\")) \r\n        && (this.state.currentContentWidgets.includes(\"CourseContent\"))\r\n      )\r\n      {\r\n        return <CourseContent \r\n        currentUser={this.state.currentUser} \r\n        role={this.state.role} \r\n        handleMenuClick={this.handleMenuClick.bind(this)} \r\n        viewingCourse={this.state.viewingCourse}\r\n        handleCourseViewer={this.handleCourseViewer.bind(this)}\r\n        redrawAll={this.redrawAll} seed={this.state.seed}\r\n        />\r\n    }\r\n  }\r\n  renderAdminManageUsers() {\r\n    if ((this.state.role === \"Administrator\") && (this.state.currentContentWidgets.includes(\"ManageUsers\"))) {\r\n      return <ManageUsers currentUser={this.state.currentUser} role={this.state.role} />\r\n    }\r\n  }\r\n  renderAdminManageCourses() {\r\n    if ((this.state.role === \"Administrator\") && (this.state.currentContentWidgets.includes(\"ManageCourses\"))) {\r\n      return <ManageCourses currentUser={this.state.currentUser} role={this.state.role} />\r\n    }\r\n  }\r\n  renderAdminSettings() {\r\n    if ((this.state.role === \"Administrator\") && (this.state.currentContentWidgets.includes(\"AdminSettings\"))) {\r\n      return <AdminSettings currentUser={this.state.currentUser} role={this.state.role} />\r\n    }\r\n  }\r\n  renderShowAssignment () {\r\n    if (this.state.currentContentWidgets.includes(\"ShowAssignment\")) {\r\n      return <ShowAssignment currentUser={this.state.currentUser} role={this.state.role}  viewingCourse={this.state.viewingCourse}\r\n        viewingAssignment={this.state.viewingAssignment}/>\r\n    }\r\n  }\r\n  renderShowStudentAssignment () {\r\n    if (this.state.currentContentWidgets.includes(\"ShowStudentAssignment\")) {\r\n      return <ShowStudentAssignment currentUser={this.state.currentUser} role={this.state.role}  viewingCourse={this.state.viewingCourse}\r\n        viewingAssignment={this.state.viewingAssignment}/>\r\n    }\r\n  }\r\n    handleMenuClick(contentWidget){\r\n      this.setState({'currentContentWidgets' : contentWidget});\r\n    }\r\n    fetchAccountFormData(){\r\n      fetch(\"/Account/PopulateFormData\", {\r\n        method: 'GET',\r\n        headers:{\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: \"include\",\r\n        mode:\"no-cors\"\r\n      }).then(res => res.json())\r\n        .then(response => {\r\n        //create an account object and assign its value to the \"account\" property of the state object.\r\n        if(response.success){\r\n          let account = {\r\n            \"FirstName\" : response.data[0].firstName,\r\n            \"LastName\" : response.data[0].lastName,\r\n            \"Email\" : response.data[0].email\r\n          }\r\n          this.setState({\"account\":account});\r\n            return true;\r\n        }else{\r\n          return false;\r\n        }\r\n      }).then(shouldRender => {\r\n        if(shouldRender){\r\n          this.renderAccountWindow();\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n    }\r\n    //Click event for the \"Account\" link in the toolbar.\r\n    accountClick(){\r\n      this.fetchAccountFormData();\r\n    }\r\n    renderAccountWindow(){\r\n       window.webix.ui({\r\n               view:\"window\",\r\n               id:\"accountWindow\",\r\n               width: 900,\r\n               height: 600,\r\n               move:true,\r\n               position:\"center\",\r\n               head:{\r\n                   type:\"space\",\r\n                   cols:[\r\n                       { view:\"label\", label: \"Edit My Account\" },\r\n                       {\r\n                         view:\"button\", label:\"Close\", width:70,left:250,\r\n                         click:function(){\r\n                           this.setState({\"editUser\" : null });\r\n                           window.webix.$$(\"accountWindow\").close();\r\n                         }.bind(this)\r\n                       }\r\n                    ]   \r\n               },\r\n               body:{\r\n                   type:\"space\",\r\n                   rows:[\r\n                       { \r\n                         view:\"form\", \r\n                         id:\"editAccountForm\",\r\n                         width:900,\r\n                         elements:[\r\n                           { view:\"label\", label:\"Your Email: \"+this.state.account.Email, name:\"Email\", labelWidth:100,invalidMessage: \"Must be valid email address\",value:this.state.account.Email },\r\n                             { view:\"text\", label:\"First Name\", name:\"FirstName\", labelWidth:100,invalidMessage: \"First Name can not be empty\", value:this.state.account.FirstName }, \r\n                             { view:\"text\", label:\"Last Name\", name:\"LastName\", labelWidth:100,invalidMessage: \"Last Name can not be empty\",value:this.state.account.LastName},\r\n                             { view:\"text\", type:\"password\", label:\"New Password\", name:\"Password1\", labelWidth:160, invalidMessage: \"Password can not be empty\" },\r\n                             { view:\"text\", type:\"password\", label:\"Confirm Password\", name:\"Password2\", labelWidth:160, invalidMessage: \"Password can not be empty\" },\r\n                             \r\n                             { margin:5, cols:[\r\n                                 { view:\"button\", value:\"Save Changes\" , type:\"form\", click:function(){\r\n                                   this.saveAccountChanges();\r\n                                 }.bind(this)\r\n                               }\r\n                             ]}\r\n                         ],\r\n                         rules:{\r\n                             \"Email\": window.webix.rules.isEmail,\r\n                             \"LastName\": window.webix.rules.isNotEmpty,\r\n                             \"FirstName\": window.webix.rules.isNotEmpty,\r\n                             \"Password\" :  window.webix.rules.isNotEmpty\r\n                         }\r\n                       }\r\n                   ]\r\n               }\r\n      }).show();\r\n    }\r\n    saveAccountChanges(){\r\n      let properties = window.webix.$$(\"editAccountForm\").getValues();\r\n      let newPassword;\r\n      if(properties.Password1 !== \"\" && properties.Password1 === properties.Password2)\r\n      {\r\n        newPassword = properties.Password2;\r\n      }\r\n      else{\r\n        newPassword = \"\";\r\n      }\r\n\r\n      fetch(\"/Account/UpdateAccountInfo?email=\"+properties.Email+\"&firstName=\"+properties.FirstName+\r\n          \"&lastName=\"+properties.LastName+\"&password=\"+newPassword, {\r\n        method: 'POST',\r\n        headers:{\r\n        'Content-Type': 'application/json'\r\n        },\r\n        credentials: \"include\",\r\n        mode:\"no-cors\"\r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if(response.success){\r\n            let account = {\r\n              \"FirstName\" : response.data[0].firstName,\r\n              \"LastName\" : response.data[0].lastName,\r\n              \"Email\" : response.data[0].email,\r\n            }\r\n            this.setState({\"account\":account});\r\n              return true;\r\n          }else\r\n          {\r\n            return false;\r\n          }\r\n        }).then(isChanged => {\r\n          if(isChanged){\r\n            window.webix.$$(\"accountWindow\").close();\r\n            this.logout();\r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n    // Handles the sub content Widgts \r\n    renderMultipleContentWidgets(){\r\n      if(this.state.currentContentWidgets != null){\r\n        let output = [];\r\n    // Lets go thru each of the requested widgets\r\n        for(let i=0; i<= this.state.currentContentWidgets.Length; i++){\r\n          // lets build the webix template that will get stacked in the portal\r\n          output.push( \r\n              {  \r\n                view:\"template\", \r\n                scroll:false,\r\n                content: this.state.currentContentWidgets[i]\r\n              });\r\n          }\r\n          let ui =\r\n          {\r\n            type: \"space\", id: \"a2\", rows:\r\n              [\r\n                {\r\n                  type: \"space\",\r\n                  padding: 0,\r\n                  responsive: \"a2\",\r\n                  height: window.innerHeight,\r\n                  width: window.innerWidth * .7,\r\n                  cols:\r\n                    [\r\n                      output\r\n                    ]\r\n                }\r\n              ]\r\n          };\r\n          return ui;\r\n      }\r\n    }\r\n    // Portal additional methods \r\n   \r\n    logout(){\r\n      fetch(\"/Account/Logout\", {\r\n\r\n          method: 'GET', // or 'PUT'\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\",\r\n          mode: \"no-cors\"\r\n        }).then(res => res.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          this.handleLogin(null, null);\r\n          // Don't remove the comment below - its actually functional.\r\n          //eslint-disable-next-line\r\n          document.location.reload();\r\n        } else {\r\n            console.log(response.error);\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n    \r\n  }\r\n  render() {\r\n    /*Portal Container */\r\n    \r\n    let toolbar = function () {\r\n      if (this.state.role === \"Administrator\") {\r\n        return \"AdminToolbar\";\r\n      }\r\n      else if (this.state.role === \"Instructor\") {\r\n        return \"InstructorToolbar\";\r\n      }\r\n      else if (this.state.role === \"Student\") {\r\n        return \"StudentToolbar\";\r\n      }\r\n      else {\r\n\r\n      }\r\n    }.bind(this);\r\n    let data = null;\r\n    let ui =\r\n    {\r\n      type: \"space\", id: \"a1\", rows:\r\n        [\r\n          {\r\n            type: \"space\",\r\n            scroll: \"auto\",\r\n            padding: 0,\r\n            responsive: \"a1\",\r\n            //height: window.height,\r\n            //width: window.width,\r\n            cols:\r\n              [\r\n                {\r\n                  view: \"template\",\r\n                  scroll: false,\r\n                  gravity: 1,\r\n                  width:350,\r\n                  template: \"left\",\r\n                  content: toolbar()\r\n                },\r\n                {\r\n                  view: \"template\",\r\n                  scroll: false,\r\n                  gravity: 4,\r\n                  template: \"right\",\r\n                  content: \"MultipleContentWidgets\"\r\n                }\r\n              ]\r\n          }\r\n        ]\r\n    };\r\n\r\n    return (\r\n      <div id=\"Portal\">\r\n        {this.renderAdminToolbar()}\r\n        {this.renderInstructorToolbar()}\r\n        {this.renderStudentToolbar()}\r\n        <Webix ui={ui} data={data} />\r\n        <div id=\"MultipleContentWidgets\">\r\n          {this.renderLiveFeed()}\r\n          {this.renderAdminManageUsers()}\r\n          {this.renderAdminManageCourses()}\r\n          {this.renderAdminSettings()}\r\n          {this.renderCourseContent()}\r\n          {this.renderShowAssignment()}\r\n          {this.renderShowStudentAssignment()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Portal;\r\n\r\n","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\n\r\n \r\nclass Login extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        data : null,\r\n      };\r\n      //grab the update Login method\r\n      this.updateLogin = props.handleLogin;\r\n     \r\n\r\n    window.webix.protoUI({\r\n      name:\"react\",\r\n      defaults:{\r\n        borderless:true\r\n      },\r\n      $init:function(config){\r\n        this.$ready.push(function(){    \r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view)\r\n  }\r\n  clearError(){\r\n     window.webix.$$(\"loginForm\").elements.passwordErrorLabel.setValue(\"\");\r\n  }\r\n doLogin(){\r\n    let userName = window.webix.$$(\"loginForm\").elements.emailAddress.getValue();\r\n    let password = window.webix.$$(\"loginForm\").elements.password.getValue();\r\n   \r\n    fetch(\"/Account/Login?Email=\" + userName + \"&Password=\" + password + \"&returnUrl=\", {\r\n      method: 'POST', // or 'PUT'\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\",\r\n      mode:\"no-cors\"\r\n    }).then(res => res.json())\r\n    .then(response => {\r\n      if(response.success){\r\n        this.updateLogin(response.data[0].emailAddress,response.data[0].role);\r\n      }else{\r\n        let errors = \"\";\r\n        response.error.forEach( error => {\r\n          errors += error.description\r\n        }); \r\n        window.webix.$$(\"loginForm\").elements.passwordErrorLabel.setValue(errors);\r\n      }\r\n\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n\r\n  }\r\n  render(){\r\n    let data = null;\r\n    let ui = {\r\n       type:\"space\",\r\n       id:\"a1\",\r\n       height: window.innerHeight-5,\r\n       width:  window.innerWidth-5,\r\n       minWidth:500,  \r\n       minHeight:500,\r\n      rows:\r\n                [{\r\n                 type:\"space\", \r\n                 padding:0, \r\n                 responsive:\"a1\", \r\n                 margin:0,\r\n                \r\n                 cols:[\r\n                        {},\r\n                        { \r\n                            view:\"form\", \r\n                            id:\"loginForm\",\r\n                            elements:[\r\n                                { \r\n                                  type:\"header\",\r\n                                  template:\"Please Login\"\r\n                                },\r\n                                { \r\n                                 \r\n                                  view:\"text\",\r\n                                  labelAlign:\"top\",\r\n                                  labelPosition:\"top\", \r\n                                  name:\"emailAddress\",\r\n                                  label:\"Email Address\",\r\n                                  validate:\"isNotEmpty\",\r\n                                  validateEvent:\"key\",\r\n                                  value:\"\" ,\r\n                              \r\n                                },\r\n                                { \r\n                                 \r\n                                  view:\"text\", \r\n                                  labelPosition:\"top\",\r\n                                  type:\"password\", \r\n                                  name:\"password\", \r\n                                  label:\"Password\",\r\n                                  validate:\"isNotEmpty\", \r\n                                  validateEvent:\"key\",\r\n                                  value:\"\"\r\n                                 \r\n                                },\r\n                                { \r\n                                  view:\"label\", \r\n                                  name:\"passwordErrorLabel\", \r\n                                  label:\"\" \r\n                                },\r\n\r\n                                 {}, { view:\"button\", label: 'login', click:this.doLogin.bind(this), hotkey:\"enter\"}\r\n                          ],\r\n                            width:500,\r\n                            height:500,\r\n                            gravity:0.3\r\n                        },\r\n                        {}\r\n                       ]\r\n                     }\r\n                 ]};\r\n\r\n                // Now lets check for returns\r\n               //console.log(window.webix.$$(\"loginForm\").elements);\r\n               \r\n     \r\n\r\n     return(\r\n      <div>\r\n        <Webix ui={ui} data={data}/>\r\n      </div>\r\n      );\r\n  }\r\n}\r\nexport default Login;\r\n\r\n","import React, { Component } from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport Portal from './containers/portal.js';\r\nimport Login from './containers/Login.js';\r\n//https://facebook.github.io/create-react-app/docs/proxying-api-requests-in-development\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: null,\r\n      role: null,\r\n      viewingCourse: null,\r\n      viewingAssignment: null,\r\n      seed : (new Date).getTime()\r\n    };\r\n    // Bind handle Login\r\n    this.handleLogin = this.updateLogin.bind(this);\r\n    this.checkIfLoggedIn();\r\n    // Remember to use this.setState({currentUser : something}); \r\n    //this.renderCommentWindow();\r\n  }\r\n  // / <Login  currentUser={this.state.currentUser}/>\r\n  checkIfLoggedIn() {//https://stackoverflow.com/questions/38742379/cors-why-my-browser-doesnt-send-options-preflight-request/38746674#38746674\r\n    fetch(\"/Account/GetCurrentUserRole\", {\r\n      method: 'GET',\r\n      credentials: 'same-origin',\r\n      cache: \"no-cache\",\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-PINGOVER': \"because\"\r\n      }\r\n    }).then(\r\n      res => {\r\n        let json = res.json();\r\n        return json;\r\n      }\r\n    )\r\n      .then(response => {\r\n        //console.log('Success:', JSON.stringify(response))\r\n        if (response.success) {\r\n          //console.log(\"show me \" +  JSON.stringify(response));\r\n          if ((response.data[0].role.length > 1) && (response.data[0].emailAddress.length > 1)) {\r\n            // Update the state and include the user\r\n            this.setState({ 'currentUser': response.data[0].emailAddress, 'role': response.data[0].role });\r\n          }\r\n        } else {\r\n          response.error.forEach(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n  }\r\n  redrawAll() {\r\n    console.log(\"REDRAW ALL TRIGGERED\");\r\n    this.setState({ seed: (new Date).getTime() });\r\n  }\r\n  handleCourseViewer(statechange) {\r\n    console.log(\"changing state\" + JSON.stringify(statechange));\r\n    this.setState(statechange);\r\n  }\r\n  renderPortal() {\r\n\r\n    if (this.state.currentUser != null) {\r\n      return <Portal\r\n        currentUser={this.state.currentUser}\r\n        role={this.state.role}\r\n        handleLogin={this.handleLogin}\r\n        viewingCourse={this.state.viewingCourse}\r\n        handleCourseViewer={this.handleCourseViewer.bind(this)}\r\n        redrawAll={this.redrawAll.bind(this)}\r\n        seed={this.state.seed}\r\n        viewingAssignment={this.state.viewingAssignment}\r\n\r\n      />\r\n    }\r\n  }\r\n  renderLogin() {\r\n\r\n    if (this.state.currentUser == null) {\r\n      return <Login handleLogin={this.handleLogin} />\r\n    }\r\n  }\r\n  \r\n  updateLogin(user, role) {\r\n    this.setState({ 'currentUser': user, 'role': role });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"appContainer\">\r\n      \r\n        {this.renderLogin()}\r\n        {this.renderPortal()}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}