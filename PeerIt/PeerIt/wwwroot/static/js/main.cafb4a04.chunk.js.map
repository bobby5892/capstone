{"version":3,"sources":["webix.js","containers/courses.js","widget/CreateCourse.js","widget/AdminToolbar.js","widget/InstructorToolbar.js","widget/StudentToolbar.js","widget/ManageUsers.js","widget/ManageCourses.js","widget/AdminSettings.js","widget/LiveFeed.js","containers/CourseContent.js","widget/ShowStudentAssignment.js","widget/ShowAssignment.js","containers/portal.js","containers/Login.js","App.js","widget/CommentForm.js","serviceWorker.js","index.js"],"names":["Webix","react_default","a","createElement","ref","data","ui","this","setValues","parse","setValue","destructor","props","setWebixData","select","window","webix","ReactDOM","findDOMNode","refs","root","componentWillUpdate","Component","Courses","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentUser","role","viewingCourse","handleCourseViewer","handleMenuClick","component","protoUI","name","defaults","borderless","$init","config","$ready","push","render","app","$view","view","loadCourses","setState","_this2","fetch","method","headers","Content-Type","credentials","mode","then","res","json","response","success","length","courses","drawCourses","catch","error","console","_this3","forEach","element","accord","header","id","padding","css","autoheight","body","cols","renderSubMenu","on","onItemClick","i","redraw","parseInt","nextChild","webixGetNextChild","stateChange","e","log","bind","collapsed","height","$$","index","addView","getChildViews","template","courseID","_ref","multiview","animate","cells","columns","width","url","defineProperty","JSON","stringify","getItem","viewingAssignment","label","type","src_webix","scroll","rows","gravity","multi","CreateCourse","seed","redrawAll","formData","getValues","CourseName","move","position","head","left","click","close","elements","labelWidth","invalidMessage","margin","value","createCourse","rules","isNotEmpty","show","scope","inputWidth","renderCreateCourseWindow","AdminToolbar","logout","showCreateCourse","handleCreateCourse","accountClick","containers_courses","widget_CreateCourse","innerHeight","responsive","ready","getFirstId","content","align","renderCreateCourseButton","renderCourses","InstructorToolbar","handleCreateCourseWindow","StudentToolbar","renderAccountWindow","uploadReview","statechange","ManageUsers","administrators","instructors","students","invitedguests","editUser","getData","src","stateName","formValues","req","FirstName","LastName","Email","Password","Role","isEnabled","renderEditWindow","firstName","lastName","email","options","saveEditWindow","isEmail","validate","newUser","password","newEditWindow","errors","description","newUserErrorLabel","createUser","fillspace","trg","renderOnData","ManageCourses","AdminSettings","SMTP_Enabled","SMTP_USERNAME","SMTP_Port","SMTP_HOST","renderWindow","loadSettings","getSetting","setting","column","numericValue","stringValue","serverName","portNum","usernameAdminLogin","IsEnabled","smtpUsername","smtpPassword","alert","LiveFeed","CourseContent","addingStudent","hasEvent","attachEvent","addStudent","studentID","courseGroupID","groupValue","_this4","inputName","upload","link","autosend","date","Date","weekHeader","events","isHoliday","FormVal","define","urlData","assignmentname","Assignment_Name","Course","dueDate","toUTCString","send","message","Due_Date","changeStudentGroup","studentGroup","assignmentID","_this5","load","renderUploadAssignmentWindow","sort","obj","onClick","webixtype_base","ev","html","confirm","assignment","deleteAssignment","map","renderChangeStudentGroupWindow","addStudentWindow","remove_button","row","removeStudent","ShowStudentAssignment","errorMsg","downloadLink","buildAssignmentLink","fetchStudentAssignmentByCourseAssignmentAndUser","assertThisInitialized","renderUploadStudentAssignmentWindow","renderAssignmentReviewButton","getStudentAssignmentSubmissionDetails","fK_PFile","courseAssignmentId","href","className","renderUploadStudentAssignmentButton","renderLink","ShowAssignment","courseName","fK_COURSE","assignmentName","pFile","target","renderAdminInstructorList","widget_ShowStudentAssignment","Portal","account","currentContentWidgets","handleLogin","fetchAccountFormData","includes","widget_LiveFeed","widget_AdminToolbar","widget_InstructorToolbar","widget_StudentToolbar","containers_CourseContent","widget_ManageUsers","widget_ManageCourses","widget_AdminSettings","widget_ShowAssignment","contentWidget","shouldRender","saveAccountChanges","newPassword","properties","Password1","Password2","isChanged","output","Length","innerWidth","studentAssignmentId","document","location","reload","toolbar","renderAdminToolbar","renderInstructorToolbar","renderStudentToolbar","renderLiveFeed","renderAdminManageUsers","renderAdminManageCourses","renderAdminSettings","renderCourseContent","renderShowAssignment","renderShowStudentAssignment","Login","updateLogin","passwordErrorLabel","userName","emailAddress","getValue","minWidth","minHeight","labelAlign","labelPosition","validateEvent","doLogin","hotkey","App","getTime","checkIfLoggedIn","cache","X-PINGOVER","portal","containers_Login","user","renderLogin","renderPortal","Boolean","hostname","match","src_App_0","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.cafb4a04.chunk.js","sourcesContent":["// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'webix/webix.js';\r\nimport 'webix/webix.css';\r\n\r\nclass Webix extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div ref=\"root\"></div>\r\n    );\r\n  }\r\n\r\n  setWebixData(data){\r\n    const ui = this.ui;\r\n    if (ui.setValues)\r\n      ui.setValues(data);\r\n    else if (ui.parse)\r\n      ui.parse(data)\r\n    else if (ui.setValue)\r\n      ui.setValue(data); \r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.ui.destructor();\r\n    this.ui = null;\r\n  }\r\n\r\n  componentWillUpdate(props){\r\n    if (props.data)\r\n      this.setWebixData(props.data);\r\n    if (props.select)\r\n      this.select(props.select);\r\n  }\r\n\r\n  componentDidMount(){\r\n  \tthis.ui = window.webix.ui(\r\n  \t  this.props.ui, \r\n  \t  ReactDOM.findDOMNode(this.refs.root)\r\n\t  );\r\n\r\n    this.componentWillUpdate(this.props);\r\n  }\r\n   \r\n  \r\n}\r\n\r\nexport default Webix;\r\n","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\nimport '../css/courses.css';\r\n\r\nclass Courses extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      data: null,\r\n      viewingCourse: props.viewingCourse,\r\n      Courses: []\r\n    };\r\n   \r\n    this.handleCourseViewer = props.handleCourseViewer;\r\n    this.handleMenuClick = props.handleMenuClick;\r\n    this.component = {};\r\n    window.webix.protoUI({\r\n      name: \"react\",\r\n      defaults: {\r\n        borderless: true\r\n      },\r\n      $init: function (config) {\r\n        this.$ready.push(function () {\r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view);\r\n    this.loadCourses();\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    this.setState(props);\r\n    this.loadCourses();\r\n    //console.log(\"reload courses\");\r\n    // Trigger Webix to Redraw the component\r\n    //window.webix.$$().setHTML(\"<h1>YEP</h1>\");\r\n  }\r\n  loadCourses() {\r\n    //let accord = [];\r\n    fetch(\"Course/GetCourses\", {\r\n      method: 'GET', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\",\r\n      mode: \"no-cors\"\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          if(response.data.length > 0){\r\n          \tthis.setState({ courses: response.data });\r\n          }\r\n          this.drawCourses();\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n\r\n  }\r\n\r\n  drawCourses() {\r\n  \r\n    if (this.state.courses != null && this.state.courses.length > 0) {\r\n\r\n      this.state.courses.forEach(element => {\r\n        //console.log(\"considered\" + window.webix.$$(\"courses\").index(element.id));\r\n\r\n        let accord = {\r\n          view: \"accordionitem\",\r\n          header: element.name,\r\n          id: element.id,\r\n          padding: 0,\r\n          css: \"courseMenuItem\",\r\n          autoheight:true,\r\n          body: {\r\n            cols: this.renderSubMenu(element.id)\r\n          },\r\n          on: {\r\n            'onItemClick': function (i) {\r\n              let redraw = false;\r\n              // Check if it should redraw\r\n              if (parseInt(i) !== parseInt(this.state.viewingCourse)) {\r\n                redraw = true;\r\n              }\r\n              else {\r\n                // They clicked on self\r\n                // Check and see if there is another view passed to change the active view to\r\n                try {\r\n                  //let index = window.webix.$$(\"courses\").index(i);\r\n                  let nextChild = this.webixGetNextChild(i);\r\n                  //console.log(\"next child is: \" + nextChild + \" compared to \" + i);\r\n                  if (nextChild !== false) {\r\n                    //console.log(\"setting view to next child\");\r\n                    let stateChange = { \"viewingCourse\": parseInt(nextChild) };\r\n                    this.handleCourseViewer(stateChange);\r\n                  }\r\n                  // Lets set the one we're viewing up to what the accordion is showing\r\n                }\r\n                catch (e) {\r\n                  console.log(\"error\" + e);\r\n                }\r\n              }\r\n\r\n              if (redraw) {\r\n                this.handleCourseViewer({ \"viewingCourse\": parseInt(i) });\r\n                this.drawCourses();\r\n              }\r\n            }.bind(this)\r\n          },\r\n          collapsed: true,\r\n          height: 200\r\n        };\r\n        // Lets try if it doesnt exisit\r\n        try {\r\n          if (window.webix.$$(\"courses\").index(element.id) === -1) {\r\n            window.webix.$$(\"courses\").addView(accord);\r\n          }\r\n        }\r\n        catch (e) {\r\n          console.log(\"error\" + e);\r\n        }\r\n      });\r\n    }\r\n    else{\r\n    \t// No Courses\r\n    \tif(window.webix.$$(\"courses\").getChildViews().length == 0){\r\n\t    \tlet ui = {\r\n\t    \t  view: \"accordionitem\",\r\n\t          header: \"No Courses\",\r\n\t          padding: 0,\r\n\t          css: \"courseMenuItem\",\r\n\t          autoheight:true,\r\n\t          body: {\r\n\t             view:\"template\",\r\n\t             template: \"No Courses\"\r\n\t          }\r\n\t        };\r\n\t    \t window.webix.$$(\"courses\").addView(ui);\r\n\t    }\r\n    \t\r\n    \t\r\n    }\r\n  }\r\n\r\n  renderSubMenu(courseID) {\r\n\r\n    if (this.state.role === \"Administrator\" || this.state.role === \"Instructor\") {\r\n      return (\r\n        [\r\n          {\r\n            id: \"coursesTabView\" + courseID,\r\n            view: \"tabview\",\r\n            css: \"subCourseTabMenu\",\r\n            multiview: {\r\n              animate: true\r\n            },\r\n            cells: [\r\n              {\r\n                css: \"subCourseMenu\",\r\n                header: \"Students\",\r\n                id: \"AdminInstructorSubListItem\",\r\n                autoheight:true,\r\n                body:  {\r\n                    autoheight: true,\r\n                    view: \"datatable\",\r\n                    columns: [\r\n                      { id: \"firstName\", header: \"First Name\", width: 100 },\r\n                      { id: \"lastName\", header: \"Last Name\", width: 80 },\r\n\r\n                    ],\r\n                    url: \"/Course/GetStudents?courseID=\" + courseID\r\n\r\n                    /* data: [\r\n                         { id:1, title:\"The Shawshank Redemption\", year:1994, votes:678790, rank:1},\r\n                         { id:2, title:\"The Godfather\", year:1972, votes:511495, rank:2}\r\n                     ]*/\r\n                  },\r\n                autoheight: true,\r\n                collapsed: true,\r\n                gravity: 1\r\n              },\r\n              {\r\n                css: \"subCourseMenu\",\r\n                header: \"Assignments\",\r\n                autoheight:true,\r\n                body:  {\r\n                    autoheight: true,\r\n                    view: \"datatable\",\r\n               \t\tid: \"Assignments\"+courseID,\r\n                    columns: [\r\n                      { id: \"name\", header: \"Name\", width:150 },\r\n                      { id: \"dueDate\", header: \"DueDate\", width:150 },\r\n\r\n                    ],\r\n                    url: \"/CourseAssignment/Assignments?courseID=\" + courseID,\r\n                    on : { 'onItemClick' : function(i){\r\n\t                    \tconsole.log(\"test\" + i);\t\r\n\t                    \tconsole.log(\"Data:\" + JSON.stringify(window.webix.$$(\"Assignments\" + courseID).getItem(i)));\r\n\t                    \tthis.handleCourseViewer({viewingAssignment:window.webix.$$(\"Assignments\" + courseID).getItem(i)});\r\n                        this.handleMenuClick(\"ShowAssignment\");\r\n                        \r\n\t                    }.bind(this) \r\n\t                }\r\n                  },\r\n                collapsed: true\r\n              },\r\n              {\r\n                css: \"subCourseMenu\",\r\n                header: \"Bulk\",\r\n                body: {\r\n                  view: \"template\",\r\n                  template: \"bulk\"\r\n                }\r\n              },\r\n              {\r\n                css: \"subCourseMenu\",\r\n                header: \"Settings\",\r\n                body: {\r\n                  view: \"button\",\r\n                  label: \"Settings\",\r\n                  type: \"standard\",\r\n                  on: {\r\n                    'onItemClick': function (i) {\r\n                      this.handleMenuClick(\"CourseContent\");\r\n                    }.bind(this)\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      );\r\n      //}\r\n    }\r\n    else if (this.state.role === \"Student\") {\r\n      return ([{\r\n        view: \"tabview\",\r\n        cells: [\r\n          {\r\n            header: \"Your Assignments\",\r\n            body: {\r\n              id: \"menuItemStudentYourAssignments\",\r\n              body: \"temp\"\r\n            }\r\n          },\r\n          {\r\n            header: \"Group Assignments\",\r\n            body: {\r\n              id: \"menuItemStudentGroupAssignments\",\r\n              body: \"temp\"\r\n            }\r\n          }\r\n        ]\r\n      }]);\r\n    }\r\n  }\r\n  render() {\r\n    let ui = {\r\n\r\n      view: \"scrollview\",\r\n      id: \"verses\",\r\n      scroll: \"y\", // vertical scrolling\r\n      height:500,\r\n      width: 320,\r\n      body: {\r\n        rows: [\r\n          {\r\n          \tautoheight:true,\r\n            \"view\": \"accordion\",\r\n            \"gravity\": 3,\r\n            \"scroll\": \"y\",\r\n            \"multi\": false,\r\n            \"css\": \"webix_dark\",\r\n            \"id\": \"courses\",\r\n            \"rows\": []\r\n          }\r\n        ]\r\n      }\r\n\r\n\r\n    };\r\n    let data = null;\r\n    return (\r\n      <div id=\"Courses\">\r\n\r\n        <Webix ui={ui} data={data} />\r\n\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Courses;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Webix from '../webix';\r\n\r\nclass CreateCourse extends Component {\r\n\r\n\tconstructor(props) {\r\n   super(props);\r\n    this.state = {\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      data: null,\r\n      seed: props.seed\r\n\r\n      \r\n    };\r\n    this.redrawAll = props.redrawAll;\r\n\r\n  }\r\n   createCourse() {\r\n    let formData = window.webix.$$(\"newCourseForm\").getValues();\r\n\r\n    fetch(\"Course/CreateCourse?courseName=\" + formData.CourseName, {\r\n      method: 'POST', // or 'PUT'\r\n\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\",\r\n      mode: \"no-cors\"\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          this.setState({\"data\" : 0});\r\n          this.redrawAll();\r\n        } else {\r\n       //   let errors = \"\";\r\n          //response.error.forEach(error => {\r\n       //  //   errors += error.description\r\n      //    });\r\n\r\n        }\r\n        console.log(response);\r\n\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n  }\r\n  renderCreateCourseWindow() {\r\n    \r\n    if (window.webix.$$(\"newCourseWindow\") == null) {\r\n       window.webix.ui({\r\n        view: \"window\",\r\n        id: \"newCourseWindow\",\r\n        width: 500,\r\n        height: 500,\r\n        move: true,\r\n        position: \"center\",\r\n        head: {\r\n          type: \"space\",\r\n          cols: [\r\n            { view: \"label\", label: \"Create New Course\" },\r\n            {\r\n              view: \"button\", label: \"Close\", width: 70, left: 250,\r\n              click: function () {\r\n                window.webix.$$(\"newCourseWindow\").close();\r\n                //temp fix - if more time add a cleaner reload\r\n                \r\n              }\r\n            }\r\n          ]\r\n        },\r\n        body: {\r\n          type: \"space\",\r\n          rows: [\r\n            {\r\n              view: \"form\",\r\n              id: \"newCourseForm\",\r\n              width: 400,\r\n              elements: [\r\n\r\n                { view: \"text\", label: \"Course Name\", name: \"CourseName\", labelWidth: 100, invalidMessage: \"Course Name can not be empty\" },\r\n               \r\n                {\r\n                  margin: 5, cols: [\r\n                    {\r\n                      view: \"button\", value: \"Create Course\", type: \"form\", click: function () {\r\n                        this.createCourse();\r\n                        window.webix.$$(\"newCourseWindow\").close();\r\n                      }.bind(this)\r\n                    }\r\n                  ]\r\n                }\r\n              ],\r\n              rules: {\r\n                \"CourseName\": window.webix.rules.isNotEmpty\r\n              }\r\n            }\r\n          ]\r\n        }\r\n\r\n      }).show();\r\n    }\r\n  }\r\n\r\n  \r\n\trender(){\r\n    let scope = this;\r\n    let ui = {\r\n        view: \"button\",\r\n        gravity: 1,\r\n        label: \"Create Course\",\r\n        id: \"createCourse_button\",\r\n        value: \"Create Course\",\r\n\r\n        inputWidth: 100,\r\n        click: function () {  \r\n          scope.renderCreateCourseWindow();\r\n        }\r\n      };\r\n    let data = null;\r\n\t\r\n\t\t return(<div  id=\"CreateCourse\">\r\n        <Webix ui={ui} data={data}/>\r\n      </div>\r\n      );\r\n\t}\r\n}\r\nexport default CreateCourse;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Webix from '../webix';\r\nimport Courses from '../containers/courses.js';\r\nimport CreateCourse from '../widget/CreateCourse.js';\r\nclass AdminToolbar extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentUser: props.currentUser,\r\n\t\t\trole: props.role,\r\n\t\t\tviewingCourse: props.viewingCourse,\r\n\t\t\tviewingAssignment:props.viewingAssignment,\r\n\t\t\tdata: null,\r\n\t\t\tseed : props.seed\r\n\t\t\t\r\n\t\t};\r\n\t\tthis.logout = props.logout;\r\n\t\t// Receive the function handle for handleManageUsersMenuClick\r\n\t\tthis.handleMenuClick = props.handleMenuClick;\r\n\t\tthis.showCreateCourse = props.handleCreateCourse;\r\n\t    this.accountClick = props.accountClick;\r\n\t    this.handleCourseViewer = props.handleCourseViewer;\r\n\t    this.redrawAll = props.redrawAll;\r\n\t}\r\n    componentWillReceiveProps(props) {\r\n    \tthis.setState(props);\r\n    }\r\n\trenderCourses() {\r\n       return <Courses \r\n       currentUser={this.state.currentUser} \r\n       role={this.state.role}  \r\n       handleCourseViewer={this.handleCourseViewer.bind(this)} \r\n       viewingCourse={this.state.viewingCourse}\r\n       handleMenuClick={this.handleMenuClick}\r\n       accountClick={this.accountClick.bind(this)}\r\n       redrawAll={this.redrawAll} seed={this.state.seed}\r\n       viewingAssignment={this.state.viewingAssignment}\r\n       />\r\n\t}\r\n\trenderCreateCourseButton() {\r\n       return <CreateCourse currentUser={this.state.currentUser} role={this.state.role} showCreateCourse={this.showCreateCourse}\r\n       redrawAll={this.redrawAll} seed={this.state.seed} />\r\n\t}\t\t\t\r\n\trender() {\r\n\t\t//let scope = this;\r\n\t\tlet data = null;\r\n\t\tlet ui =\r\n\t\t{\r\n\t\t\ttype: \"space\",\r\n            scroll: \"false\",\r\n            height: window.innerHeight,\r\n            \r\n            padding: 0,\r\n            responsive: \"a1\",\r\n\t\t\trows: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tview: \"list\",\r\n\t\t\t\t\t\tgravity: 1,\r\n\t\t\t\t\t\tpadding:0,\r\n\t\t\t\t\t\tscroll: false,\r\n\t\t\t\t\t\tmargin:0,\r\n\t\t\t\t\t\theight:225,\r\n\t\t\t\t\t\tdata: [\"Admin\", \"My Account\", \"Manage Users\", \"Settings\", \"Logout\"],\r\n\t\t\t\t\t\tready: function () {\r\n\t\t\t\t\t\t\t// Highlight the first one\r\n\t\t\t\t\t\t\tthis.select(this.getFirstId());\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclick: function (a) {\r\n\t\t\t\t\t\t\tif (a === \"Logout\") {\r\n\t\t\t\t\t\t\t\t//Attempt to call the logout chain\r\n\t\t\t\t\t\t\t\tthis.logout();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (a === \"Manage Users\") {\r\n\t\t\t\t\t\t\t\tthis.handleMenuClick(\"ManageUsers\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (a === \"Manage Courses\") {\r\n\t\t\t\t\t\t\t\tthis.handleMenuClick(\"ManageCourses\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (a === \"Settings\") {\r\n\t\t\t\t\t\t\t\tthis.handleMenuClick(\"AdminSettings\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (a === \"Admin\") {\r\n\t\t\t\t\t\t\t\tthis.handleMenuClick(\"LiveFeed\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t            else if( a === \"My Account\"){\r\n\t\t\t\t\t\t\t\tthis.accountClick();\r\n\t\t\t\t            \r\n\t\t\t\t            }    \r\n\r\n\t\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\t\tselect: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t    {\r\n\t\t\t\t\t \tview: \"template\",\r\n\t             \t\ttemplate: \"right\",\r\n\t             \t\tcontent: \"Courses\",\r\n\t             \t\talign:\"right\"\r\n                \t},\r\n                \t{\r\n\t\t\t\t\t\tgravity: 1,\r\n\t\t\t\t\t \tview: \"template\",\r\n                 \t\tscroll: false,\r\n                 \t\ttemplate: \"right\",\r\n                 \t\tcontent: \"CreateCourse\",\r\n                 \t\talign:\"right\"\r\n                \t},\r\n\t\t\t\t\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div id=\"AdminToolbar\" >\r\n\t\t\t\t{this.renderCreateCourseButton()}\r\n\t\t\t\t{this.renderCourses()}\r\n\t\t\t\t<Webix ui={ui} data={data} />\r\n\t\t\t\t\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default AdminToolbar;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Webix from '../webix';\r\nimport Courses from '../containers/courses.js';\r\nimport CreateCourse from '../widget/CreateCourse.js';\r\n\r\nclass InstructorToolbar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewingCourse: props.viewingCourse,\r\n      currentUser: props.currentUser,\r\n      viewingAssignment:props.viewingAssignment,\r\n      role: props.role,\r\n      data: null,\r\n      seed : props.seed\r\n    };\r\n    this.logout = props.logout;\r\n    this.handleCreateCourseWindow = props.handleCreateCourse;\r\n    this.handleMenuClick = props.handleMenuClick;\r\n    this.showCreateCourse = props.handleCreateCourse;\r\n    this.accountClick = props.accountClick;\r\n    this.handleCourseViewer = props.handleCourseViewer;\r\n    this.redrawAll = props.redrawAll;\r\n  }\r\n  componentWillReceiveProps(props) {\r\n      this.setState(props);\r\n  }\r\n  renderCourses() {\r\n    return <Courses\r\n      currentUser={this.state.currentUser}\r\n      role={this.state.role}\r\n      handleCourseViewer={this.handleCourseViewer}\r\n      viewingCourse={this.state.viewingCourse}\r\n      handleMenuClick={this.handleMenuClick}\r\n      accountClick={this.accountClick.bind(this)}\r\n      redrawAll={this.redrawAll} seed={this.state.seed}\r\n      viewingAssignment={this.state.viewingAssignment}\r\n    />\r\n  }\r\n  renderCreateCourseButton() {\r\n    return <CreateCourse \r\n    currentUser={this.state.currentUser} \r\n    role={this.state.role} \r\n    showCreateCourse={this.showCreateCourse} \r\n    accountClick={this.accountClick.bind(this)}\r\n    redrawAll={this.redrawAll} seed={this.state.seed}\r\n    />\r\n  }\r\n\r\n  render() {\r\n    //let scope = this;\r\n    let data = null;\r\n    let ui =\r\n    {\r\n      type: \"space\",\r\n      padding: 0,\r\n      //responsive: \"a1\",\r\n      height: window.innerHeight,\r\n      width: 350,\r\n      rows:\r\n        [\r\n          {\r\n            view: \"list\",\r\n            data: [\"Instructor\", \"My Account\", \"Logout\"],\r\n            ready: function () {\r\n              this.select(this.getFirstId());\r\n            },\r\n            click: function (a) {\r\n              if(a == \"My Account\"){\r\n                this.accountClick();\r\n              }\r\n              else if (a === \"Logout\") {\r\n                //Attempt to call the logout chain\r\n                this.logout();\r\n              }\r\n            }.bind(this),\r\n            select: true,\r\n            scroll: false,\r\n            //width: 350,\r\n            height: 150\r\n          },\r\n          // This is where we would render courses        \r\n          {\r\n\r\n            view: \"template\",\r\n            scroll: true,\r\n            template: \"right\",\r\n            content: \"Courses\",\r\n            align: \"right\"\r\n          },\r\n          {\r\n            gravity: 1,\r\n            view: \"template\",\r\n            scroll: true,\r\n            template: \"right\",\r\n            content: \"CreateCourse\",\r\n            align: \"right\"\r\n          }\r\n        ]\r\n    };\r\n    return (<div id=\"InstructorToolbar\" >\r\n      {this.renderCreateCourseButton()}\r\n      {this.renderCourses()}\r\n      <Webix ui={ui} data={data} />\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default InstructorToolbar;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Webix from '../webix';\r\nimport Courses from '../containers/courses.js';\r\nclass StudentToolbar extends Component {\r\n\r\n\r\n\tconstructor(props) {\r\n\t      super(props);\r\n\t      this.state = {\r\n          currentUser: props.currentUser,\r\n          role: props.role,\r\n          viewingAssignment:props.viewingAssignment,\r\n\t        data : null,\r\n          seed : props.seed\r\n\t      };\r\n    this.logout = props.logout;\r\n    this.handleMenuClick = props.handleMenuClick;\r\n    this.renderAccountWindow = props.renderAccountWindow;\r\n    this.uploadReview = props.uploadReview;\r\n    this.accountClick = props.accountClick;\r\n    this.redrawAll = props.redrawAll;\r\n  }\r\n  componentWillReceiveProps(props) {\r\n      this.setState(props);\r\n  }\r\n  handleCourseViewer(statechange) {\r\n    this.setState(statechange);\r\n  }\r\n  renderCourses() {\r\n    return <Courses\r\n      currentUser={this.state.currentUser}\r\n      role={this.state.role}\r\n      handleCourseViewer={this.handleCourseViewer.bind(this)}\r\n      viewingCourse={this.state.viewingCourse}\r\n      handleMenuClick={this.handleMenuClick}\r\n      accountClick={this.accountClick.bind(this)}\r\n      redrawAll={this.redrawAll} seed={this.state.seed}\r\n       viewingAssignment={this.state.viewingAssignment}\r\n    />\r\n  }\r\n  render() {\r\n    let data = null;\r\n    let ui =\r\n    {\r\n      type: \"space\",\r\n      scroll: \"auto\",\r\n      height: window.innerHeight,\r\n      width: 350,\r\n      padding: 0,\r\n      responsive: \"a1\",\r\n      rows: [\r\n        {\r\n          view: \"list\",\r\n          data: [\"Student\", \"My Account\",\"Upload an Assignment\", \"Logout\"],\r\n          ready: function () {\r\n            this.select(this.getFirstId());\r\n          },\r\n          click: function (a) {\r\n            if( a === \"My Account\"){\r\n              this.accountClick();\r\n            }\r\n            else if (a === \"Logout\") {\r\n              //Attempt to call the logout chain\r\n              this.logout();\r\n            }\r\n          }.bind(this),\r\n          select: true,\r\n          scroll: false,\r\n          height: 200\r\n        },\r\n        {\r\n          view: \"template\",\r\n          scroll: true,\r\n          template: \"right\",\r\n          content: \"Courses\",\r\n          align: \"right\"\r\n        }\r\n      ]\r\n    }\r\n    \r\n    return (<div id=\"StudentToolbar\">\r\n      <Webix ui={ui} data={data} />\r\n      {this.renderCourses()}\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default StudentToolbar;\r\n\r\n","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\n\r\nclass ManageUsers extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      // Lists of users\r\n      administrators: null,\r\n      instructors: null,\r\n      students: null,\r\n      invitedguests: null,\r\n      // If editing a user\r\n      editUser: null\r\n    };\r\n    // Start Data Load \r\n    if (this.state.administrators === null) { this.getData(\"/Admin/GetAdministrators\", \"administrators\"); }\r\n    if (this.state.instructors === null) { this.getData(\"/Admin/GetInstructors\", \"instructors\"); }\r\n    if (this.state.students === null) { this.getData(\"/Admin/GetStudents\", \"students\"); }\r\n    if (this.state.invitedguests === null) { this.getData(\"/Admin/GetInvitedGuests\", \"invitedguests\"); }\r\n\r\n    window.webix.protoUI({\r\n      name: \"react\",\r\n      defaults: {\r\n        borderless: true\r\n      },\r\n      $init: function (config) {\r\n        this.$ready.push(function () {\r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view)\r\n\r\n  }\r\n  getData(src, stateName) {\r\n    let scope = this;\r\n    fetch(src, {\r\n      method: 'GET', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\",\r\n      mode: \"no-cors\"\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          // This would cause a re-render\r\n          scope.setState({ [stateName]: response.data });\r\n\r\n        }\r\n\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n  }\r\n  saveEditWindow() {\r\n    let scope = this;\r\n    let formValues = window.webix.$$(\"editUserForm\").getValues();\r\n    let isEnabled = function () {\r\n      if (scope.state.editUser.isEnabled === 1) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n    // Save the edit window\r\n    let req = \"/Admin/Edit?ID=\" + this.state.editUser.id + \"&FirstName=\" + formValues.FirstName + \"&LastName=\" +\r\n      formValues.LastName + \"&Email=\" + formValues.Email + \"&Password=\" + formValues.Password +\r\n      \"&Role=\" + formValues.Role + \"&IsEnabled=\" + isEnabled();\r\n    console.log(\"Making Request: \" + req);\r\n    fetch(req, {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\",\r\n      mode: \"no-cors\"\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          // This would cause a re-render\r\n          scope.setState({ \"editUser\": null, \"administrators\": null, \"instructors\": null, \"students\": null, \"invitedguests\": null });\r\n          // States no longer empty\r\n          window.webix.$$(\"editUserWindow\").close();\r\n          //console.log(\"attempting to open render window\");\r\n          //Dirt Reload Data\r\n          // Start Data Load \r\n          if (this.state.administrators === null) { this.getData(\"/Admin/GetAdministrators\", \"administrators\"); }\r\n          if (this.state.instructors === null) { this.getData(\"/Admin/GetInstructors\", \"instructors\"); }\r\n          if (this.state.students === null) { this.getData(\"/Admin/GetStudents\", \"students\"); }\r\n          if (this.state.invitedguests === null) { this.getData(\"/Admin/GetInvitedGuests\", \"invitedguests\"); }\r\n\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n\r\n  }\r\n  newEditWindow(id) {\r\n    // console.log(\"open a window for\" + id);\r\n    // Lets do a request that will cause this to reload\r\n    let scope = this;\r\n    if (this.state.editUser === null) {\r\n      fetch(\"/Admin/GetUser?id=\" + id, {\r\n        method: 'GET', // or 'PUT'\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: \"include\",\r\n        mode: \"no-cors\"\r\n      }).then(res => res.json())\r\n        .then(response => {\r\n          if (response.success) {\r\n            // This would cause a re-render\r\n            scope.setState({ \"editUser\": response.data[0] });\r\n            // States no longer empty\r\n            scope.renderEditWindow();\r\n            //console.log(\"attempting to open render window\");\r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n\r\n  }\r\n  renderEditWindow() {\r\n    console.log(\"rendering\" + JSON.stringify(this.state.editUser));\r\n    let scope = this;\r\n    let isEnabled = function () {\r\n      if (scope.state.editUser.isEnabled) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    };\r\n    window.webix.ui({\r\n      view: \"window\",\r\n      id: \"editUserWindow\",\r\n      width: 500,\r\n      height: 500,\r\n      move: true,\r\n      position: \"center\",\r\n      head: {\r\n        type: \"space\",\r\n        cols: [\r\n          { view: \"label\", label: \"Edit User\" },\r\n          {\r\n            view: \"button\", label: \"Close\", width: 70, left: 250,\r\n            click: function () {\r\n              scope.setState({ \"editUser\": null });\r\n              window.webix.$$(\"editUserWindow\").close();\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"editUserForm\",\r\n            width: 400,\r\n            elements: [\r\n              { view: \"checkbox\", label: \"Active\", name: \"IsEnabled\", value: isEnabled() },\r\n              { view: \"text\", label: \"First Name\", name: \"FirstName\", labelWidth: 100, invalidMessage: \"First Name can not be empty\", value: this.state.editUser.firstName },\r\n              { view: \"text\", label: \"Last Name\", name: \"LastName\", labelWidth: 100, invalidMessage: \"Last Name can not be empty\", value: this.state.editUser.lastName },\r\n              { view: \"text\", label: \"Email\", name: \"Email\", labelWidth: 100, invalidMessage: \"Must be valid email address\", value: this.state.editUser.email },\r\n              { view: \"text\", type: \"password\", label: \"Password\", name: \"Password\", labelWidth: 100, invalidMessage: \"Password can not be empty\" },\r\n              {\r\n                view: \"select\", label: \"Role\", name: \"Role\", labelWidth: 100, value: this.state.editUser.role, options: [\r\n                  { \"id\": \"Administrator\", \"value\": \"Administrator\" },\r\n                  { \"id\": \"Student\", \"value\": \"Student\" },\r\n                  { \"id\": \"Instructor\", \"value\": \"Instructor\" },\r\n                  { \"id\": \"InvitedGuest\", \"value\": \"InvitedGuest\" }\r\n                ]\r\n              },\r\n              {\r\n                margin: 5, cols: [\r\n                  {\r\n                    view: \"button\", value: \"Edit User\", type: \"form\", click: function () {\r\n                      scope.saveEditWindow();\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            rules: {\r\n              \"Email\": window.webix.rules.isEmail,\r\n              \"LastName\": window.webix.rules.isNotEmpty,\r\n              \"FirstName\": window.webix.rules.isNotEmpty,\r\n              \"Password\": window.webix.rules.isNotEmpty\r\n            }\r\n          }\r\n        ]\r\n      }\r\n\r\n    }).show();\r\n  }\r\n  createUser() {\r\n    // check for valid response\r\n    let scope = this;\r\n    let validResponse = window.webix.$$(\"newUserForm\").validate();\r\n    if (validResponse) {\r\n      let newUser = window.webix.$$(\"newUserForm\").getValues();\r\n      fetch(\"/Admin/Create?FirstName=\" + newUser.FirstName\r\n        + \"&LastName= \" + newUser.LastName + \"&Email=\" + newUser.Email + \"&Password=\" + newUser.password, {\r\n          method: 'POST', // or 'PUT'\r\n          //body: JSON.stringify({\"FirstName\":newUser.FirstName,\"LastName\":newUser.LastName,\"Email\":newUser.Email,\"Password\":newUser.password}), // data can be `string` or {object}!\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\",\r\n          mode: \"no-cors\"\r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if (response.success) {\r\n            //console.log(\"Attempted to Create UseR: \" + JSON.stringify(response));\r\n            // If the new user window is open close it\r\n            if (window.webix.$$(\"newUserWindow\") != null) {\r\n              window.webix.$$(\"newUserWindow\").close()\r\n            }\r\n            console.log(\"open new window to:  \" + response.data[0].id);\r\n            scope.newEditWindow(response.data[0].id);\r\n          } else {\r\n            let errors = \"\";\r\n            response.error.forEach(error => {\r\n              errors += error.description\r\n            });\r\n            window.webix.$$(\"newUserForm\").elements.newUserErrorLabel.setValue(errors);\r\n          }\r\n\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n\r\n  }\r\n  renderOnData() {\r\n    // By doing it like this - it skips the first render and only loads webix if data\r\n    /* {\r\n                          view:\"button\", \r\n                          id:\"my_button\", \r\n                          value:\"Button\", \r\n                          type:\"form\", \r\n                          inputWidth:100 \r\n                     },   \r\n                     */\r\n    if (\r\n      (this.state.administrators != null) &&\r\n      (this.state.instructors != null) &&\r\n      (this.state.students != null) &&\r\n      (this.state.invitedguests != null)) {\r\n      let scope = this;\r\n      let ui =\r\n      {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"button\",\r\n            id: \"createUser_button\",\r\n            value: \"Create User\",\r\n\r\n            inputWidth: 100,\r\n            click: function () {\r\n              // Lets only allow once\r\n              if (window.webix.$$(\"newUserWindow\") == null) {\r\n                window.webix.ui({\r\n                  view: \"window\",\r\n                  id: \"newUserWindow\",\r\n                  width: 500,\r\n                  height: 500,\r\n                  move: true,\r\n                  position: \"center\",\r\n                  head: {\r\n                    type: \"space\",\r\n                    cols: [\r\n                      { view: \"label\", label: \"Create New User\" },\r\n                      {\r\n                        view: \"button\", label: \"Close\", width: 70, left: 250,\r\n                        click: function () {\r\n                          window.webix.$$(\"newUserWindow\").close();\r\n                        }\r\n                      }\r\n                    ]\r\n                  },\r\n                  body: {\r\n                    type: \"space\",\r\n                    rows: [\r\n                      {\r\n                        view: \"form\",\r\n                        id: \"newUserForm\",\r\n                        width: 400,\r\n                        elements: [\r\n\r\n                          { view: \"text\", label: \"First Name\", name: \"FirstName\", labelWidth: 100, invalidMessage: \"First Name can not be empty\" },\r\n                          { view: \"text\", label: \"Last Name\", name: \"LastName\", labelWidth: 100, invalidMessage: \"Last Name can not be empty\" },\r\n                          { view: \"text\", label: \"Email\", name: \"Email\", labelWidth: 100, invalidMessage: \"Must be valid email address\" },\r\n                          { view: \"text\", type: \"password\", label: \"Password\", name: \"Password\", labelWidth: 100, invalidMessage: \"Password can not be empty\" },\r\n                          { view: \"label\", label: \"\", name: \"newUserErrorLabel\", labelWidth: 100 },\r\n                          {\r\n                            margin: 5, cols: [\r\n                              {\r\n                                view: \"button\", value: \"Create User\", type: \"form\", click: function () {\r\n                                  scope.createUser();\r\n                                }\r\n                              }\r\n                            ]\r\n                          }\r\n                        ],\r\n                        rules: {\r\n                          \"Email\": window.webix.rules.isEmail,\r\n                          \"LastName\": window.webix.rules.isNotEmpty,\r\n                          \"FirstName\": window.webix.rules.isNotEmpty,\r\n                          \"Password\": window.webix.rules.isNotEmpty\r\n                        }\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                }).show();\r\n              }\r\n            }\r\n          },\r\n          {\r\n            id: \"ManageUsers\",\r\n            view: \"tabview\",\r\n            fillspace: true,\r\n            cells:\r\n              [\r\n                {\r\n                  header: \"Administrators\",\r\n                  view: \"datatable\",\r\n                  columns:\r\n                    [\r\n                      { id: \"firstName\", header: \"First Name\" },\r\n                      { id: \"lastName\", header: \"Last Name\" },\r\n                      { id: \"email\", header: \"Email\", fillspace: true }\r\n                    ],\r\n                  data: this.state.administrators,\r\n                  autoheight: true,\r\n                  scroll: false,\r\n                  on: { //https://docs.webix.com/api__link__ui.datatable_onclick_config.html\r\n                    // the default click behavior that is true for any datatable cell\r\n                    \"onItemClick\": function (id, e, trg) {\r\n                      scope.newEditWindow(id);\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  header: \"Instructors\",\r\n                  view: \"datatable\",\r\n                  columns:\r\n                    [\r\n                      { id: \"firstName\", header: \"First Name\" },\r\n                      { id: \"lastName\", header: \"Last Name\" },\r\n                      { id: \"email\", header: \"Email\", fillspace: true }\r\n                    ],\r\n                  data: this.state.instructors,\r\n                  autoheight: true,\r\n                  scroll: false,\r\n                  on: { //https://docs.webix.com/api__link__ui.datatable_onclick_config.html\r\n                    // the default click behavior that is true for any datatable cell\r\n                    \"onItemClick\": function (id, e, trg) {\r\n                      scope.newEditWindow(id);\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  header: \"Students\",\r\n                  view: \"datatable\",\r\n                  columns:\r\n                    [\r\n                      { id: \"firstName\", header: \"First Name\" },\r\n                      { id: \"lastName\", header: \"Last Name\" },\r\n                      { id: \"email\", header: \"Email\", fillspace: true }\r\n                    ],\r\n                  data: this.state.students,\r\n                  autoheight: true,\r\n                  scroll: false,\r\n                  on: { //https://docs.webix.com/api__link__ui.datatable_onclick_config.html\r\n                    // the default click behavior that is true for any datatable cell\r\n                    \"onItemClick\": function (id, e, trg) {\r\n                      scope.newEditWindow(id);\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  header: \"Invited Guests\",\r\n                  view: \"datatable\",\r\n                  columns:\r\n                    [\r\n                      { id: \"firstName\", header: \"First Name\" },\r\n                      { id: \"lastName\", header: \"Last Name\" },\r\n                      { id: \"email\", header: \"Email\", fillspace: true }\r\n                    ],\r\n                  data: this.state.invitedguests,\r\n                  autoheight: true,\r\n                  scroll: false,\r\n                  on: { //https://docs.webix.com/api__link__ui.datatable_onclick_config.html\r\n                    // the default click behavior that is true for any datatable cell\r\n                    \"onItemClick\": function (id, e, trg) {\r\n                      scope.newEditWindow(id);\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n          }\r\n        ]\r\n\r\n      };\r\n\r\n      return <Webix ui={ui} />\r\n    }\r\n  }\r\n  render() {\r\n    // console.log(JSON.stringify(this.state.administrators));\r\n\r\n    return (\r\n      <div id=\"ManageUsers\">\r\n        {this.renderOnData()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ManageUsers;\r\n\r\n","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import Webix from '../webix';\r\n\r\nclass ManageCourses extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        currentUser : props.currentUser,\r\n        role : props.role,\r\n     \r\n      };\r\n\r\n    window.webix.protoUI({\r\n      name:\"react\",\r\n      defaults:{\r\n        borderless:true\r\n      },\r\n      $init:function(config){\r\n        this.$ready.push(function(){    \r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view)\r\n  }\r\n  Createcourse(){\r\n  let scope = this;\r\n      let validResponse = window.webix.$$(\"newCourseForm\").validate();\r\n      if(validResponse){\r\n        let newCourse = window.webix.$$(\"newCourseForm\").getValues();\r\n        fetch(\"/Course/CreateCourse?courseName=\", {\r\n          method: 'POST', // or 'PUT'\r\n          //body: JSON.stringify({\"FirstName\":newUser.FirstName,\"LastName\":newUser.LastName,\"Email\":newUser.Email,\"Password\":newUser.password}), // data can be `string` or {object}!\r\n          headers:{\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\",\r\n          mode:\"no-cors\"\r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if(response.success){\r\n            //console.log(\"Attempted to Create UseR: \" + JSON.stringify(response));\r\n            // If the new user window is open close it\r\n            if(window.webix.$$(\"newCourseWindow\") != null){\r\n              window.webix.$$(\"newCourseWindow\").close()\r\n            }\r\n            console.log(\"open new window to:  \" + response.data[0].id);\r\n            scope.newEditWindow( response.data[0].id);\r\n          }else{\r\n            let errors = \"\";\r\n            response.error.forEach( error => {\r\n              errors += error.description\r\n            }); \r\n            window.webix.$$(\"newCourseForm\").elements.newUserErrorLabel.setValue(errors);\r\n          }\r\n\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n      }\r\n\r\n      \r\n  }\r\n  render(){\r\n\r\n   // let data = null;\r\n\r\n     return(\r\n      <div id=\"ManageCourses\">\r\n   manage courses \r\n   \r\n      \r\n      </div>\r\n               \r\n             \r\n      );\r\n  }\r\n}\r\n\r\nexport default ManageCourses;\r\n\r\n","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import Webix from '../webix';\r\n\r\nclass AdminSettings extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        currentUser : props.currentUser,\r\n        role : props.role,\r\n        SMTP_Enabled :null,\r\n        SMTP_USERNAME :null,\r\n        SMTP_Port : null,\r\n        SMTP_HOST : null\r\n     \r\n      };\r\n      this.renderWindow = false;\r\n    window.webix.protoUI({\r\n      name:\"react\",\r\n      defaults:{\r\n        borderless:true\r\n      },\r\n      $init:function(config){\r\n        this.$ready.push(function(){    \r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view);\r\n    //load the content\r\n    this.loadSettings();\r\n  }\r\n\r\n\r\n  loadSettings(){\r\n    // This reaches out and grabs the settings\r\n    // in the final then - it sets this.renderWindow = true\r\n    if (this.state.SMTP_Enabled == null){\r\n      this.getData(\"Settings/GetSettings\");\r\n    }\r\n  }\r\n\r\n\r\n  getData(src){\r\n    let scope = this;\r\n       fetch(src, {\r\n            method: 'GET', // or 'PUT'\r\n            headers:{\r\n              'Content-Type': 'application/json'\r\n            },\r\n            credentials: \"include\",\r\n            mode:\"no-cors\"\r\n          }).then(res => res.json())\r\n          .then(response => {\r\n            if(response.success){\r\n              // This would cause a re-render\r\n              return response;\r\n            }\r\n          }).then(response => {\r\n              this.renderWindow = true;\r\n              let stateChange  = {\r\n                   \"SMTP_Enabled\" :\"\"+ scope.getSetting(\"SMTP_Enabled\",response.data,\"numeric\"),\r\n                   \"SMTP_USERNAME\" :\"\"+ scope.getSetting(\"SMTP_USERNAME\",response.data,\"string\"),\r\n                   \"SMTP_Port\" :\"\"+ scope.getSetting(\"SMTP_Port\",response.data,\"numeric\"),\r\n                   \"SMTP_HOST\" :\"\"+ scope.getSetting(\"SMTP_HOST\",response.data,\"string\")\r\n                  };\r\n              this.setState( stateChange );\r\n          })\r\n          .catch(error => console.error('Error:', error));\r\n  }\r\n  getSetting(setting,data,column){\r\n    for(let i = 0;i<data.length;i++)\r\n    {\r\n        if(data[i].id === setting){\r\n            if(column === \"numeric\"){\r\n                return data[i].numericValue;\r\n            }\r\n            else{\r\n                return data[i].stringValue;\r\n            }\r\n        }\r\n    }\r\n  }\r\n  renderEditWindow(){\r\n    if(this.renderWindow){\r\n      window.webix.ui({\r\n              view:\"window\",\r\n              id:\"settingsWindow\",\r\n              width: 500,\r\n              height: 500,\r\n              move:true,\r\n              position:\"center\",\r\n              head:{\r\n                  type:\"space\",\r\n                  cols:[\r\n                      { view:\"label\", label: \"Settings\" },\r\n                      {\r\n                        view:\"button\", label:\"Close\", width:70,left:250,\r\n                        click:function(){\r\n                          //scope.setState({\"editUser\" : null });\r\n                          window.webix.$$(\"settingsWindow\").close();\r\n                        } \r\n                      }\r\n                   ]   \r\n              },\r\n              body:{\r\n                  type:\"space\",\r\n                  rows:[\r\n                      { \r\n                        view:\"form\", \r\n                        id:\"configurationForm\",\r\n                        width:400,\r\n                        elements:[\r\n                            { view:\"checkbox\", value: this.state.SMTP_Enabled, label:\"Send Emails\", name: \"IsEnabled\", labelWidth:100 },\r\n                            { view:\"text\", label:\"SMTP Server\", name:\"serverName\", labelWidth:100,invalidMessage: \"Server cannot be empty\", value:this.state.SMTP_HOST},\r\n                            { view:\"text\", label:\"SMTP Port\", name:\"portNum\", width:150, labelWidth:100, invalidMessage:\"Port cannot be empty\", value:this.state.SMTP_Port},\r\n                            { view:\"text\", label:\"SMTP Login\", name:\"smtpUsername\", labelWidth:100,invalidMessage: \"Please login to confirm changes\",value: this.state.SMTP_USERNAME},\r\n                            { view:\"text\", type:\"password\", label:\"SMTP Password\", name:\"smtpPassword\", labelWidth:125, invalidMessage: \"Password can not be empty\" },\r\n                            { margin:5, cols:[\r\n                                { view:\"button\", value:\"Save Settings\" , type:\"form\", click:function(){\r\n                                  this.saveEditWindow();\r\n                                }.bind(this)\r\n                              }\r\n                            ]}\r\n                        ],\r\n                        rules:{\r\n                            \"serverName\": window.webix.rules.isNotEmpty,\r\n                            \"portNum\": window.webix.rules.isNotEmpty,\r\n                            \"usernameAdminLogin\": window.webix.rules.isEmail,\r\n                            \"Password\" :  window.webix.rules.isNotEmpty\r\n                        }\r\n                      }\r\n                  ]\r\n              }\r\n          }).show();\r\n    }\r\n  }\r\n\r\n  saveEditWindow(){\r\n    \r\n    let formValues = window.webix.$$(\"configurationForm\").getValues();\r\n      // Save the edit window\r\n      let req = (\"/Settings/EditSettings?isEnabledId=SMTP_Enabled&isEnabledValue=\" + formValues.IsEnabled +\r\n                \"&serverId=SMTP_HOST&serverValue=\" + formValues.serverName +\r\n                \"&portId=SMTP_Port&portValue=\" + formValues.portNum +\r\n                \"&usernameId=SMTP_USERNAME&usernameValue=\" + formValues.smtpUsername +\r\n                \"&passwordId=SMTP_Password&passwordValue=\" + formValues.smtpPassword);\r\n          console.log(\"Making Request: \" + req);\r\n        fetch(req, {\r\n            method: 'POST', // or 'PUT'\r\n            headers:{\r\n              'Content-Type': 'application/json'\r\n            },\r\n            credentials: \"include\",\r\n            mode:\"no-cors\"\r\n          }).then(res => res.json())\r\n          .then(response => {\r\n            if(response.success){\r\n              alert(\"All Changes Saved Successfully.\")\r\n              console.log(\"We did it!\");\r\n            }\r\n          })\r\n          .catch(error => console.error('Error:', error));\r\n  }\r\n  render(){\r\n     return(\r\n      <div id=\"AdminSettings\">\r\n        {this.renderEditWindow()}\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default AdminSettings;","\r\nimport React, { Component } from 'react';\r\n//import Webix from '../webix';\r\n\r\nclass LiveFeed extends Component {\r\n\r\n\tconstructor(props) {\r\n\t      super(props);\r\n\t      this.state = {\r\n\t        data : null\r\n\t      };\r\n  }\r\n\r\n\trender(){\r\n\t\t return(<div  id=\"LiveFeed\">\r\n        LiveFeed\r\n      </div>\r\n      );\r\n\t}\r\n}\r\nexport default LiveFeed;\r\n\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\n\r\nclass CourseContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      viewingCourse: props.viewingCourse,\r\n      addingStudent: false,\r\n      seed : props.seed\r\n\r\n    }\r\n    this.redrawAll = props.redrawAll;\r\n    this.handleCourseViewer = props.handleCourseViewer;\r\n    this.handleMenuClick = props.handleMenuClick;\r\n    window.webix.protoUI({\r\n      name: \"react\",\r\n      defaults: {\r\n        borderless: true\r\n      },\r\n      $init: function (config) {\r\n        this.$ready.push(function () {\r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view)\r\n  }\r\n  addStudentWindow() {\r\n    window.webix.ui({\r\n      view: \"window\",\r\n      id: \"addStudentWindow\",\r\n      width: 500,\r\n      height: 500,\r\n      move: true,\r\n      position: \"center\",\r\n      head: {\r\n        type: \"space\",\r\n        cols: [\r\n          { view: \"label\", label: \"Add Student to Course\" },\r\n          {\r\n            view: \"button\", id: \"addStudentButton\", label: \"Close\", width: 70, left: 250,\r\n            click: function () {\r\n              this.setState({ addingStudent: false });\r\n              window.webix.$$(\"addStudentWindow\").close();\r\n            }.bind(this)\r\n          }\r\n        ]\r\n      },\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"addStudentForm\",\r\n            width: 400,\r\n            elements: [\r\n              { view: \"text\", label: \"Email\", name: \"Email\", labelWidth: 100, invalidMessage: \"Must be valid email address\" },\r\n              {\r\n                margin: 5,\r\n                cols: [\r\n                  {\r\n                    view: \"button\",\r\n                    value: \"Add Student\",\r\n                    type: \"form\",\r\n                    id: \"AddStudentFormButton\"\r\n                  }\r\n                ]\r\n              }\r\n            ],\r\n            rules: {\r\n              \"Email\": window.webix.rules.isEmail\r\n            }\r\n          }\r\n        ]\r\n      }\r\n\r\n    }).show();\r\n\r\n    console.log(\"Does button have click: \" + window.webix.$$(\"AddStudentFormButton\").hasEvent(\"onItemClick\"));\r\n    // If its not already bound lets do it\r\n    if (window.webix.$$(\"AddStudentFormButton\").hasEvent(\"onItemClick\")=== false) {\r\n      console.log(\"binding function to button\");\r\n      window.webix.$$(\"AddStudentFormButton\").attachEvent(\"onItemClick\", function (i) {\r\n\r\n        let validResponse = window.webix.$$(\"addStudentForm\").validate();\r\n        if (validResponse) {\r\n            let email = window.webix.$$(\"addStudentForm\").elements[\"Email\"].config.value;\r\n            this.addStudent(email,this.state.viewingCourse);\r\n        }\r\n      }.bind(this));\r\n    }\r\n\r\n  }\r\n  addStudent(email,courseID) {\r\n        fetch(\"/Course/AddStudentToCourse?courseID=\" + courseID + \"&studentEmail=\" + email, {\r\n          method: 'POST', // or 'PUT'\r\n          headers:{\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\",\r\n          mode:\"no-cors\"\r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if(response.success){\r\n            // Should reload student list\r\n            console.log(\"Added Student\");\r\n            window.webix.$$(\"addStudentWindow\").close();\r\n            //this.handleMenuClick(\"LiveFeed\");\r\n             this.redrawAll();\r\n\r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState(props);\r\n  }\r\n  removeStudent(studentID){\r\n     fetch(\"/Course/RemoveStudentToCourse?courseID=\" + this.state.viewingCourse + \"&studentID=\" + studentID, {\r\n          method: 'DELETE', // or 'PUT'\r\n          headers:{\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\"\r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if(response.success){\r\n            // Should reload student list\r\n            // this.handleMenuClick(\"LiveFeed\");\r\n             this.redrawAll();\r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n  }\r\n  getStudentGroup(studentID, courseID) {\r\n    fetch(\"/Course/GetStudentGroup?studentID=\" + studentID + \"&courseID=\" + courseID, \r\n    {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\"\r\n    })\r\n    .then(response => {\r\n      if (response.success) {\r\n        return response;\r\n      }\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n  }\r\n  changeStudentGroup(courseGroupID, groupValue) {\r\n    fetch(\"/Course/ChangeStudentGroup?&courseGroupID=\" + courseGroupID + \"&reviewGroupID=\" + groupValue,\r\n    {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\"\r\n    })\r\n    .then(response => {\r\n      if (response.success) {\r\n        this.redrawAll();\r\n      }\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n  }\r\n  renderUploadAssignmentWindow() {\r\n    let scope = this;\r\n\r\n    var newWindow = window.webix.ui({\r\n      view: \"window\",\r\n      id: \"uploadAssignmentWindow\",\r\n      width:600,\r\n      //height: 600,\r\n      move: true,\r\n      position: \"center\",\r\n      head: {\r\n        type: \"space\",\r\n        cols: [\r\n          { view: \"label\", label: \"Upload an Assignment\" },\r\n          {\r\n            view: \"button\", label: \"Close\", \r\n            width: 70, \r\n            left: 250,\r\n            click: function () {\r\n              //scope.setState({\"editUser\" : null });\r\n              window.webix.$$(\"uploadAssignmentWindow\").close();\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"uploadAssignmentForm\",\r\n            //width: \"auto\",\r\n            elements: [\r\n              { view: \"label\", label: \"Upload your Assignment form here: \", name: \"\", labelWidth: \"auto\", value: \"\" },\r\n              {\r\n                \r\n                view: \"uploader\", inputName: \"files\", upload: \"/CourseAssignment/CreateAssignment\", \r\n                //urlData:{assignmentname:\"new assignment\",courseID:13,dueDate:\"07/08/2019\"} ,\r\n                id: \"AssignmentFile\", link: \"mylist\", value: \"Upload File\", autosend: false\r\n              },\r\n              {\r\n                view: \"list\", id: \"mylist\", type: \"uploader\",\r\n                autoheight: true, borderless: true\r\n              },\r\n              \r\n              { view: \"text\", label: \"Assignment Name\", name: \"Assignment_Name\",labelWidth: 200,invalidMessage:\"Please enter Assignment Name\" },\r\n              /*{ view: \"text\", label: \"Course\", name: \"Course\", labelWidth: 200,invalidMessage:\"What Course is this? \",value:this.state.viewingCourse },*/\r\n              {view:\"calendar\",\r\n              id:\"my_calendar\",\r\n              name:\"Due_Date\",\r\n              date:new Date(\r\n                ),\r\n              weekHeader:true,\r\n              events:window.webix.Date.isHoliday,\r\n              width:300,\r\n              height:250},\r\n              \r\n              //{ view: \"text\", label: \"Due Date\", name: \"Due_Date\", labelWidth: 200,invalidMessage:\"Please enter Valid Date\" }, \r\n              {\r\n                view: \"button\",value:\"Upload\", type:\"form\", \r\n                click: function () {\r\n                  let validResponse = window.webix.$$(\"uploadAssignmentForm\").validate();\r\n                  let FormVal = window.webix.$$(\"uploadAssignmentForm\").getValues();\r\n                  window.webix.$$(\"AssignmentFile\").define({\r\n                    urlData:{assignmentname:FormVal.Assignment_Name,\r\n                    courseID:FormVal.Course,\r\n                    dueDate:(window.webix.$$(\"my_calendar\").config.date).toUTCString()\r\n                    }\r\n                  });\r\n                  window.webix.$$(\"AssignmentFile\").send(function(response) {\r\n                    console.log(\"upload send: \" + JSON.stringify(response));\r\n                    if (response != null){\r\n                      console.log(Date(\"07/08/2019\"));\r\n                      window.webix.message(\"Succsess\");\r\n                      //window.webix.$$(\"uploadAssignmentWindow\").attachEvent(\"onUploadComplete\", function(response){\r\n                        window.webix.$$(\"uploadAssignmentWindow\").close();\r\n                        //window.webix.message(\"done\");\r\n                    //}); \r\n                    }\r\n                    else {\r\n                    //console.log(Date(\"07/08/2019\"));\r\n                    alert(\"Nothing to Submit\");\r\n                  }})\r\n                }\r\n              }\r\n            ],\r\n            rules: {\r\n              \"Course\": window.webix.rules.isNotEmpty,\r\n              \"Due_Date\": window.webix.rules.isNotEmpty,\r\n              \"Assignment_Name\":window.webix.rules.isNotEmpty\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }).show();\r\n    window.webix.$$(\"uploadAssignmentForm\").setValues(\r\n         { Course:this.state.viewingCourse}\r\n     );\r\n  }\r\n  renderChangeStudentGroupWindow(courseGroupID) {\r\n    let scope = this;\r\n\r\n    var newWindow = window.webix.ui({\r\n      view: \"window\",\r\n      id: \"changeStudentGroupWindow\",\r\n      width:600,\r\n      //height: 600,\r\n      move: true,\r\n      position: \"center\",\r\n      head: {\r\n        type: \"space\",\r\n        cols: [\r\n          { view: \"label\", label: \"Change Student Group\" },\r\n          {\r\n            view: \"button\", label: \"Close\", \r\n            width: 70, \r\n            left: 250,\r\n            click: function () {\r\n              //scope.setState({\"editUser\" : null });\r\n              window.webix.$$(\"changeStudentGroupWindow\").close();\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"changeStudentGroupForm\",\r\n            //width: \"auto\",\r\n            elements: [\r\n              { id: courseGroupID, view: \"text\", label: \"CourseGroup Record ID: \" + courseGroupID, name: \"studentGroup\",labelWidth: 200,\r\n               invalidMessage:\"Please Enter a Valid Student Group ID\" },\r\n              {\r\n                view: \"button\",value:\"Change\", type:\"form\", \r\n                click: function () {\r\n                  console.log(\"I was clicked\");\r\n                  let validResponse = window.webix.$$(\"changeStudentGroupForm\").validate();\r\n                  let FormVal = window.webix.$$(\"changeStudentGroupForm\").getValues();\r\n                  this.changeStudentGroup(courseGroupID, FormVal.studentGroup);\r\n                }.bind(this)\r\n              }\r\n            ],\r\n            rules: {\r\n              \"studentGroup\": window.webix.rules.isNotEmpty\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }).show();\r\n /*   window.webix.$$(\"uploadAssignmentForm\").setValues(\r\n         { Course:this.state.viewingCourse}\r\n     );\r\n     */\r\n  }\r\n  deleteAssignment(assignmentID){\r\n    fetch(\"/CourseAssignment/DeleteAssignment?assignmentID=\" + assignmentID, {\r\n          method: 'DELETE', // or 'PUT'\r\n          headers:{\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\"\r\n          \r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if(response.success){\r\n            \r\n            this.redrawAll();\r\n\r\n            window.webix.$$(\"AssignmentsContent\").load(\"/CourseAssignment/Assignments?courseID=\" +this.state.viewingCourse);\r\n\r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n  }\r\n  render() {\r\n    console.log(\"render course content\");\r\n    let reviewGroupOptions = function() {\r\n      let optionString = \"\"\r\n      for (let i = 1; i <= 20; i ++) {\r\n        optionString += \"<option id='\" + i + \"'>Group \" + i + \"</option>\";\r\n      }\r\n      return optionString;\r\n    }\r\n    let putGroupID = function() {\r\n      fetch()\r\n    }\r\n    let ui = {\r\n      rows: [\r\n        {\r\n          header: \"Course Settings (ID: \" + this.state.viewingCourse + \")\", body: \" \"\r\n        },\r\n       \r\n        {\r\n          view: \"tabview\",\r\n          autoheight: true,\r\n          header: \"Course\",\r\n          cells: [\r\n            {\r\n              autoheight: true,\r\n              header: \"Assignments\",\r\n              body: {\r\n                autoheight: true,\r\n                rows: [\r\n                  {\r\n                    view: \"button\",\r\n                    value: \"Add Assignment\",\r\n                    type: \"form\",\r\n                    id: \"AddAssignmnetButton\",\r\n                    on: {\r\n                          'onItemClick' : function(i){\r\n                              this.renderUploadAssignmentWindow();\r\n                            }.bind(this)\r\n                    }\r\n                  },\r\n                  {\r\n                    css: \"subCourseMenu\",\r\n                    header: \"Assignments\",\r\n                    autoheight:true,\r\n                    body:  {\r\n                        autoheight: true,\r\n                        view: \"datatable\",\r\n                      id: \"AssignmentsContent\",\r\n                        columns: [\r\n                          { id: \"name\", header: \"Name\",  width:150, sort:\"string\"},\r\n                          { id: \"dueDate\", header: \"DueDate\", width:150, sort:\"string\"},\r\n                          { header: \"Manage\",  gravity:2,template:function(obj){ \r\n                             return \"<div class='webix_el_button'><button class='webixtype_base'>Remove</button></div>\";\r\n                           }}\r\n                        ],\r\n                        url: \"/CourseAssignment/Assignments?courseID=\" + this.state.viewingCourse,\r\n                        onClick : {\r\n                            webixtype_base:function(ev, id, html){\r\n                            //eslint-disable-next-line\r\n                            if(confirm(\"Are you sure you want to delete this assignment?\")){\r\n                               // window.webix.alert(\"Clicked row \"+id);\r\n                              let assignment =  window.webix.$$(\"AssignmentsContent\").getItem(id);\r\n                            \r\n                              this.deleteAssignment(assignment.id);\r\n                            }\r\n                            \r\n                          }.bind(this) \r\n                        }   \r\n                      }\r\n                    }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              header: \"Groups\",\r\n              body: {\r\n                autoheight: true,\r\n                rows: [\r\n                  {\r\n                    autoheight: true,\r\n                    view: \"datatable\",\r\n                    columns: [\r\n                      { id: \"id\", map: \"#fK_AppUser.id#\", header: \"\", width: 50 },\r\n                      { id: \"firstName\", map: \"#fK_AppUser.firstName#\", header: \"First Name\", width: 200 },\r\n                      { id: \"lastName\", map: \"#fK_AppUser.lastName#\", header: \"Last Name\", width: 200 },\r\n                    //  { id: \"groupID\", header: \"Review Group\", width: 200 },\r\n                      //{ header: \"Change Group\", width: 100, template: \"{common.checkbox()}\" /*{view:\"select\", value:1, options:[{\"id\": 1, \"value\": 1}]} */ }\r\n                      {\r\n                        id: \"reviewGroup\", header: \"Review Group\", width: 400/*,\r\n                        template:function(obj){ \r\n                           console.log(obj);\r\n                           return \"<select id='\" + obj.id +\"' class='webixtype_base'>\" + reviewGroupOptions() + \"</select>\";\r\n                        },\r\n                        \r\n                        onClick:{'webixtype_base': function(i){\r\n                          console.log(i);\r\n                          alert(\"you have selected item \" + i);\r\n                          }\r\n                        }\r\n                        */\r\n                      }\r\n                    ],\r\n                    /*\r\n                    on:{'onBlur': function(i){\r\n                      console.log(i);\r\n                      alert(\"you have selected item \" + i.data.order[0]);\r\n                      }\r\n                    },*/\r\n                    on:{\r\n                      onItemClick:function(id, ev, html){\r\n                        console.log(id[\"row\"]);\r\n                        // Not currently working - throws that this is not a function.\r\n                        this.renderChangeStudentGroupWindow(id[\"row\"]);\r\n                      }.bind(this)\r\n                    },\r\n                    url: \"/Course/GetStudentGroups?courseID=\" + this.state.viewingCourse\r\n\r\n                    /* data: [\r\n                         { id:1, title:\"The Shawshank Redemption\", year:1994, votes:678790, rank:1},\r\n                         { id:2, title:\"The Godfather\", year:1972, votes:511495, rank:2}\r\n                     ]*/\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              header: \"Students\",\r\n              body: {\r\n                autoheight: true,\r\n                rows: [\r\n                  {\r\n                    view: \"button\",\r\n                    value: \"Add Student\",\r\n                    css: \"webix_primary\",\r\n                    inputWidth: 100,\r\n                    on: {\r\n                      'onItemClick': function (i) {\r\n                        if (!this.state.addingStudent) {\r\n                          this.setState({ addingStudent: true });\r\n                          this.addStudentWindow();\r\n                        }\r\n                      }.bind(this)\r\n                    }\r\n                  },\r\n                  {\r\n                    autoheight: true,\r\n                    view: \"datatable\",\r\n                    columns: [\r\n                      { id: \"rank\", header: \"\", width: 50 },\r\n                      { id: \"firstName\", header: \"First Name\", width: 200 },\r\n                      { id: \"lastName\", header: \"Last Name\", width: 80 },\r\n                      { header: \"Enrollment\", width: 100 ,   template:\"<input type='button' value='Remove' class='remove_button'>\"}\r\n                        \r\n                      \r\n                    ],\r\n                    onClick : {\r\n                      remove_button:function (i,ev){\r\n                             // Don't remove the comment below - its actually functional.\r\n                             //eslint-disable-next-line\r\n                             let confirmCheck = confirm(\"Are you sure you want to remove this student?\");\r\n                             if(confirmCheck){\r\n                                console.log(\"I want to remove \" + ev.row);\r\n                                this.removeStudent(ev.row);\r\n                             }\r\n                          }.bind(this)\r\n                    },\r\n                    url: \"/Course/GetStudents?courseID=\" + this.state.viewingCourse\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n    let data = null;\r\n\r\n    return (\r\n      <div id=\"CourseContent\">\r\n        <Webix ui={ui} data={data} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CourseContent;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\nimport { format } from 'url';\r\n\r\nclass ShowStudentAssignment extends Component {\r\n constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMsg : null,\r\n      assignment: null,\r\n      assignmentID: null,\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      viewingCourse: props.viewingCourse,\r\n      viewingAssignment: props.viewingAssignment,\r\n      downloadLink: props.buildAssignmentLink,\r\n    };\r\n    this.uploadReview = props.uploadReview;\r\n    this.fetchStudentAssignmentByCourseAssignmentAndUser.bind(this);\r\n    this.renderUploadStudentAssignmentWindow.bind(this);\r\n    this.renderAssignmentReviewButton.bind(this);\r\n    this.getStudentAssignmentSubmissionDetails(props);\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    console.log(\"Received Props\");\r\n    this.setState(props);\r\n  }\r\n  fetchStudentAssignmentByCourseAssignmentAndUser(props){\r\n    console.log(\"VIEWING ASSIGNMENT \"+JSON.stringify(props));\r\n    fetch(\"/StudentAssignment/GetStudentAssignmentsByCourseAssignmentAndUser?courseAssignmentId=\"+this.state.viewingAssignment.id,{\r\n      method: 'GET',\r\n      headers:{'Content-Type': 'application/json'},\r\n      credentials: \"include\",\r\n      mode:\"no-cors\"\r\n    }).then(response => response.json())\r\n      .then(response => {\r\n        console.log(\"THE RESPONSE = \"+JSON.stringify(response));\r\n        if(response.success){\r\n          if(response.data.length > 0) {\r\n            this.setState({\r\n              assignment : response.data[0].fK_PFile.name,\r\n              assignmentID : response.data[0].fK_PFile.id\r\n            });\r\n            console.log(\"NAME OF ASSIGNMENT:\" + response.data[0].fK_PFile.name);\r\n            console.log(\"ID OF ASSIGNMENT:\" + response.data[0].fK_PFile.id);\r\n          }\r\n        }else {\r\n          this.setState({errorMsg : response.error[0].description});\r\n        }\r\n      })\r\n  }\r\n  getStudentAssignmentSubmissionDetails(props){\r\n    this.fetchStudentAssignmentByCourseAssignmentAndUser(props);\r\n  }\r\n  renderAssignmentReviewButton(){\r\n  let ui = {\r\n        view:\"button\", \r\n        id:\"uploadReviewButton\", \r\n        value:\"Upload Review\", \r\n        css:\"webix_primary\", \r\n        inputWidth:175,\r\n        click:function(){\r\n            this.uploadReview();\r\n        }.bind(this)\r\n      };\r\n      return  <Webix ui={ui} data={null} />\r\n  }\r\n  renderUploadStudentAssignmentButton(){\r\n    let ui = {\r\n          view:\"button\", \r\n          id:\"uploadStudentAssignmentButton\", \r\n          value:\"Upload Assignment\", \r\n          css:\"webix_primary\", \r\n          inputWidth:175,\r\n          click:function(){\r\n              this.renderUploadStudentAssignmentWindow();\r\n          }.bind(this)\r\n        };\r\n        return  <Webix ui={ui} data={null} />\r\n    }\r\n  renderUploadStudentAssignmentWindow(props) {\r\n    let scope = this;\r\n    console.log(\"VIEWING ASSIGNMENT ID = \"+this.state.viewingAssignment.id);\r\n    var newWindow = window.webix.ui({\r\n      view: \"window\",\r\n      id: \"uploadStudentAssignmentWindow\",\r\n      width:600,\r\n      //height: 600,\r\n      move: true,\r\n      position: \"center\",\r\n      head: {\r\n        type: \"space\",\r\n        cols: [\r\n          { view: \"label\", label: \"Upload a student Assignment\" },\r\n          {\r\n            view: \"button\", label: \"Close\", \r\n            width: 70, \r\n            left: 250,\r\n            click: function () {\r\n              window.webix.$$(\"uploadStudentAssignmentWindow\").close();\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"uploadStudentAssignmentForm\",\r\n            elements: [\r\n              { view: \"label\", label: \"Upload your student assignment here: \", name: \"\", labelWidth: \"auto\", value: \"\" },\r\n              {  \r\n                view: \"uploader\", inputName: \"files\", upload: \"/StudentAssignment/UploadStudentAssignment\", \r\n                id: \"studentAssignmentFile\", link: \"mylist\", value: \"Upload File\", autosend: false\r\n              },\r\n              {\r\n                view: \"list\", id: \"mylist\", type: \"uploader\",\r\n                autoheight: true, borderless: true\r\n              },  \r\n              //{ view: \"text\", label: \"Assignment Name\", name: \"Assignment_Name\",labelWidth: 200,invalidMessage:\"Please enter Assignment Name\" },\r\n              {\r\n                view: \"button\",value:\"Upload\", type:\"form\", \r\n                click: function (props) {\r\n                  console.log(\"VIEWING ASSIGNMENT ID = \"+this.state.viewingAssignment.id);\r\n                  let validResponse = window.webix.$$(\"uploadStudentAssignmentForm\").validate();\r\n                  let FormVal = window.webix.$$(\"uploadStudentAssignmentForm\").getValues();\r\n                  window.webix.$$(\"studentAssignmentFile\").define({\r\n                    urlData:{courseAssignmentId: this.state.viewingAssignment.id}\r\n                  });\r\n                  window.webix.$$(\"studentAssignmentFile\").send(function(response) {\r\n                    if (response != null){\r\n                      window.webix.message(\"Succsess\");\r\n                        window.webix.$$(\"uploadAssignmentWindow\").close();\r\n                    }\r\n                    else {\r\n                    alert(\"Nothing to Submit\");\r\n                  }})\r\n                }.bind(this)\r\n              }\r\n            ],\r\n            rules: {\r\n              //No rules defined yet!!!\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }).show();\r\n    window.webix.$$(\"uploadStudentAssignmentForm\").setValues(\r\n         { Course:this.state.viewingCourse}\r\n     );\r\n  }\r\n  renderLink(){\r\n    if(this.state.assignmentID != null){\r\n      console.log(\"render the link\");\r\n      return  (<div><a href={'/PFile/Download?pFileId='+ this.state.assignmentID}>Download Student Assignment </a></div>);\r\n    }\r\n    console.log(\"no render\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"ShowStudentAssignment\" className=\"showStudentAss\">\r\n      \t<h1>Your Submission Information for {this.state.viewingAssignment.name}</h1>\r\n        <h3>{this.state.assignment}</h3>\r\n        <h3>{this.state.assignmentID}</h3>\r\n        <h3>{this.state.errorMsg}</h3>\r\n        {this.renderUploadStudentAssignmentButton()}\r\n        {this.renderAssignmentReviewButton()}\r\n        {this.renderLink()}\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ShowStudentAssignment;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\nimport ShowStudentAssignment from '../widget/ShowStudentAssignment';\r\nclass ShowAssignment extends Component {\r\n constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      currentUser: props.currentUser,\r\n      role: props.role,\r\n      viewingCourse: props.viewingCourse,\r\n      viewingAssignment: props.viewingAssignment,\r\n      downloadLink : this.buildAssignmentLink(props),\r\n      courseName : props.viewingAssignment.fK_COURSE.name,\r\n      assignmentName : props.viewingAssignment.name\r\n     \r\n    };\r\n    this.uploadReview = props.uploadReview;\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState(props);\r\n  }\r\n  buildAssignmentLink(props){\r\n  \t\ttry{\r\n  \t\t\treturn  <div><a href={'/PFile/Download?pFileId='+props.viewingAssignment.pFile.id }   target='new'>Download Instructions</a><b></b></div>\r\n  \t\t}\r\n  \t\tcatch(e){\r\n  \t\t\tconsole.log(\"Failed: \" + e);\r\n\t\t\treturn  `No Assignment Instructions Available`;\r\n  \t\t}\r\n  \t\treturn null;\r\n  }\r\n\r\n  renderAdminInstructorList(){\r\n  \t\treturn (\r\n  \t\t\t<div>\r\n  \t\t\t<h2>{this.state.courseName}</h2>\r\n  \t\t\t<h3>{this.state.assignmentName}</h3>\r\n  \t\t\t\r\n  \t\t\t<div id=\"downloadLink\">{this.state.downloadLink}</div>\r\n  \t\t\t\t\t\r\n  \t\t\t\t\t\r\n\r\n  \t\t\t</div>\r\n  \t\t\t);\r\n  \t\t\r\n  }\r\n  render() {\r\n  \tlet data = null;\r\n\tlet ui = null;\r\n\r\n    return (\r\n      <div id=\"ShowAssignment\">\r\n      \t\r\n     {this.renderAdminInstructorList()}\r\n     <ShowStudentAssignment currentUser={this.state.currentUser} role={this.state.role} viewingAssignment={this.state.viewingAssignment} viewingCourse={this.state.viewingCourse} uploadReview={this.uploadReview}></ShowStudentAssignment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// <Webix ui={ui} data={data} />\r\nexport default ShowAssignment;","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\nimport AdminToolbar from '../widget/AdminToolbar';\r\nimport InstructorToolbar from '../widget/InstructorToolbar';\r\nimport StudentToolbar from '../widget/StudentToolbar';\r\nimport ManageUsers from '../widget/ManageUsers';\r\nimport ManageCourses from '../widget/ManageCourses';\r\nimport AdminSettings from '../widget/AdminSettings';\r\nimport LiveFeed from '../widget/LiveFeed';\r\nimport CourseContent from '../containers/CourseContent';\r\nimport ShowAssignment  from '../widget/ShowAssignment';\r\nimport ShowStudentAssignment  from '../widget/ShowStudentAssignment';\r\nclass Portal extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        currentUser : props.currentUser,\r\n        role : props.role,\r\n        data : null,\r\n        account : null,\r\n        viewingCourse: props.viewingCourse,\r\n        viewingAssignment: props.viewingAssignment,\r\n        currentContentWidgets : [\"LiveFeed\"],\r\n        seed : props.seed\r\n      };\r\n    this.redrawAll = props.redrawAll;\r\n    this.handleCourseViewer = props.handleCourseViewer;\r\n    // Used to change user state from App.js\r\n    this.handleLogin = props.handleLogin;\r\n    // Logout Function\r\n    this.logout.bind(this);\r\n\r\n      //Account menu click\r\n      this.accountClick.bind(this);\r\n      this.fetchAccountFormData.bind(this);\r\n\r\n      //Upload a review\r\n      this.uploadReview.bind(this);\r\n  \r\n    // Handle Menu Users Click\r\n    this.handleMenuClick.bind(this);\r\n   \r\n  }\r\n  renderPortal() {\r\n    //https://forum.webix.com/discussion/31137/reactjs-layout-components\r\n    window.webix.protoUI({\r\n      name: \"portal\",\r\n      defaults: {\r\n        borderless: true\r\n      },\r\n      $init: function (config) {\r\n        this.$ready.push(function () {\r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view)\r\n\r\n  }\r\n\r\n componentWillReceiveProps(props){\r\n  this.setState(props);\r\n }\r\n  /* Listed Render - this is so we can control what gets passed to what widget/container */\r\n  renderLiveFeed() {\r\n    if (this.state.currentContentWidgets.includes(\"LiveFeed\")) {\r\n      return <LiveFeed currentUser={this.state.currentUser} role={this.state.role} logout={this.logout.bind(this)}  redrawAll={this.redrawAll} seed={this.state.seed}/>\r\n\r\n    }\r\n  }\r\n  renderAdminToolbar() {\r\n    if (this.state.role === \"Administrator\") {\r\n      return <AdminToolbar currentUser={this.state.currentUser}\r\n        role={this.state.role}\r\n        logout={this.logout.bind(this)}\r\n        handleMenuClick={this.handleMenuClick.bind(this)}\r\n        viewingCourse={this.state.viewingCourse}\r\n        handleCourseViewer={this.handleCourseViewer.bind(this)}\r\n        accountClick={this.accountClick.bind(this)}\r\n        redrawAll={this.redrawAll} seed={this.state.seed}\r\n        viewingAssignment={this.state.viewingAssignment}\r\n        />\r\n    }\r\n  }\r\n  renderInstructorToolbar() {\r\n    if (this.state.role === \"Instructor\") {\r\n      return <InstructorToolbar currentUser={this.state.currentUser}\r\n        role={this.state.role}\r\n        logout={this.logout.bind(this)}\r\n        handleCourseViewer={this.handleCourseViewer.bind(this)}\r\n        handleMenuClick={this.handleMenuClick.bind(this)}\r\n        viewingCourse={this.state.viewingCourse}\r\n        accountClick={this.accountClick.bind(this)}\r\n        redrawAll={this.redrawAll} seed={this.state.seed}\r\n        viewingAssignment={this.state.viewingAssignment}\r\n        />\r\n    }\r\n  }\r\n  renderStudentToolbar() {\r\n    if (this.state.role === \"Student\") {\r\n      return <StudentToolbar \r\n      currentUser={this.state.currentUser} \r\n      role={this.state.role} \r\n      logout={this.logout.bind(this)}  \r\n      handleMenuClick={this.handleMenuClick.bind(this)} \r\n      viewingCourse={this.state.viewingCourse}\r\n      accountClick={this.accountClick.bind(this)}\r\n      redrawAll={this.redrawAll} seed={this.state.seed}\r\n      viewingAssignment={this.state.viewingAssignment}\r\n      />\r\n    }\r\n  }\r\n  renderCourseContent() {\r\n    if (\r\n        ((this.state.role === \"Instructor\") ||  (this.state.role === \"Administrator\")) \r\n        && (this.state.currentContentWidgets.includes(\"CourseContent\"))\r\n      )\r\n      {\r\n        return <CourseContent \r\n        currentUser={this.state.currentUser} \r\n        role={this.state.role} \r\n        handleMenuClick={this.handleMenuClick.bind(this)} \r\n        viewingCourse={this.state.viewingCourse}\r\n        handleCourseViewer={this.handleCourseViewer.bind(this)}\r\n        redrawAll={this.redrawAll} seed={this.state.seed}\r\n        />\r\n    }\r\n  }\r\n  renderAdminManageUsers() {\r\n    if ((this.state.role === \"Administrator\") && (this.state.currentContentWidgets.includes(\"ManageUsers\"))) {\r\n      return <ManageUsers currentUser={this.state.currentUser} role={this.state.role} />\r\n    }\r\n  }\r\n  renderAdminManageCourses() {\r\n    if ((this.state.role === \"Administrator\") && (this.state.currentContentWidgets.includes(\"ManageCourses\"))) {\r\n      return <ManageCourses currentUser={this.state.currentUser} role={this.state.role} />\r\n    }\r\n  }\r\n  renderAdminSettings() {\r\n    if ((this.state.role === \"Administrator\") && (this.state.currentContentWidgets.includes(\"AdminSettings\"))) {\r\n      return <AdminSettings currentUser={this.state.currentUser} role={this.state.role} />\r\n    }\r\n  }\r\n  renderShowAssignment () {\r\n    if (this.state.currentContentWidgets.includes(\"ShowAssignment\")) {\r\n      return <ShowAssignment currentUser={this.state.currentUser} role={this.state.role}  viewingCourse={this.state.viewingCourse}\r\n        viewingAssignment={this.state.viewingAssignment} uploadReview={this.uploadReview}/>\r\n    }\r\n  }\r\n  renderShowStudentAssignment () {\r\n    if (this.state.currentContentWidgets.includes(\"ShowStudentAssignment\")) {\r\n      return <ShowStudentAssignment currentUser={this.state.currentUser} role={this.state.role}  viewingCourse={this.state.viewingCourse}\r\n        viewingAssignment={this.state.viewingAssignment}/>\r\n    }\r\n  }\r\n    handleMenuClick(contentWidget){\r\n      this.setState({'currentContentWidgets' : contentWidget});\r\n    }\r\n    fetchAccountFormData(){\r\n      fetch(\"/Account/PopulateFormData\", {\r\n        method: 'GET',\r\n        headers:{\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: \"include\",\r\n        mode:\"no-cors\"\r\n      }).then(res => res.json())\r\n        .then(response => {\r\n        //create an account object and assign its value to the \"account\" property of the state object.\r\n        if(response.success){\r\n          let account = {\r\n            \"FirstName\" : response.data[0].firstName,\r\n            \"LastName\" : response.data[0].lastName,\r\n            \"Email\" : response.data[0].email\r\n          }\r\n          this.setState({\"account\":account});\r\n            return true;\r\n        }else{\r\n    \r\n          return false;\r\n        }\r\n      }).then(shouldRender => {\r\n        if(shouldRender){\r\n          this.renderAccountWindow();\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n    }\r\n    //Click event for the \"Account\" link in the toolbar.\r\n    accountClick(){\r\n      this.fetchAccountFormData();\r\n    }\r\n    renderAccountWindow(){\r\n       window.webix.ui({\r\n               view:\"window\",\r\n               id:\"accountWindow\",\r\n               width: 900,\r\n               height: 600,\r\n               move:true,\r\n               position:\"center\",\r\n               head:{\r\n                   type:\"space\",\r\n                   cols:[\r\n                       { view:\"label\", label: \"Edit My Account\" },\r\n                       {\r\n                         view:\"button\", label:\"Close\", width:70,left:250,\r\n                         click:function(){\r\n                           this.setState({\"editUser\" : null });\r\n                           window.webix.$$(\"accountWindow\").close();\r\n                         }.bind(this)\r\n                       }\r\n                    ]   \r\n               },\r\n               body:{\r\n                   type:\"space\",\r\n                   rows:[\r\n                       { \r\n                         view:\"form\", \r\n                         id:\"editAccountForm\",\r\n                         width:900,\r\n                         elements:[\r\n                           { view:\"label\", label:\"Your Email: \"+this.state.account.Email, name:\"Email\", labelWidth:100,invalidMessage: \"Must be valid email address\",value:this.state.account.Email },\r\n                             { view:\"text\", label:\"First Name\", name:\"FirstName\", labelWidth:100,invalidMessage: \"First Name can not be empty\", value:this.state.account.FirstName }, \r\n                             { view:\"text\", label:\"Last Name\", name:\"LastName\", labelWidth:100,invalidMessage: \"Last Name can not be empty\",value:this.state.account.LastName},\r\n                             { view:\"text\", type:\"password\", label:\"New Password\", name:\"Password1\", labelWidth:160, invalidMessage: \"Password can not be empty\" },\r\n                             { view:\"text\", type:\"password\", label:\"Confirm Password\", name:\"Password2\", labelWidth:160, invalidMessage: \"Password can not be empty\" },\r\n                             \r\n                             { margin:5, cols:[\r\n                                 { view:\"button\", value:\"Save Changes\" , type:\"form\", click:function(){\r\n                                   this.saveAccountChanges();\r\n                                 }.bind(this)\r\n                               }\r\n                             ]}\r\n                         ],\r\n                         rules:{\r\n                             \"Email\": window.webix.rules.isEmail,\r\n                             \"LastName\": window.webix.rules.isNotEmpty,\r\n                             \"FirstName\": window.webix.rules.isNotEmpty,\r\n                             \"Password\" :  window.webix.rules.isNotEmpty\r\n                         }\r\n                       }\r\n                   ]\r\n               }\r\n      }).show();\r\n    }\r\n    saveAccountChanges(){\r\n      let properties = window.webix.$$(\"editAccountForm\").getValues();\r\n      let newPassword;\r\n      if(properties.Password1 !== \"\" && properties.Password1 === properties.Password2)\r\n      {\r\n        newPassword = properties.Password2;\r\n      }\r\n      else{\r\n        newPassword = \"\";\r\n      }\r\n\r\n      fetch(\"/Account/UpdateAccountInfo?email=\"+properties.Email+\"&firstName=\"+properties.FirstName+\r\n          \"&lastName=\"+properties.LastName+\"&password=\"+newPassword, {\r\n        method: 'POST',\r\n        headers:{\r\n        'Content-Type': 'application/json'\r\n        },\r\n        credentials: \"include\",\r\n        mode:\"no-cors\"\r\n        }).then(res => res.json())\r\n        .then(response => {\r\n          if(response.success){\r\n            let account = {\r\n              \"FirstName\" : response.data[0].firstName,\r\n              \"LastName\" : response.data[0].lastName,\r\n              \"Email\" : response.data[0].email,\r\n            }\r\n            this.setState({\"account\":account});\r\n              return true;\r\n          }else\r\n          {\r\n            return false;\r\n          }\r\n        }).then(isChanged => {\r\n          if(isChanged){\r\n            window.webix.$$(\"accountWindow\").close();\r\n            this.logout();\r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n    // Handles the sub content Widgts \r\n    renderMultipleContentWidgets(){\r\n      if(this.state.currentContentWidgets != null){\r\n        let output = [];\r\n    // Lets go thru each of the requested widgets\r\n        for(let i=0; i<= this.state.currentContentWidgets.Length; i++){\r\n          // lets build the webix template that will get stacked in the portal\r\n          output.push( \r\n              {  \r\n                view:\"template\", \r\n                scroll:false,\r\n                content: this.state.currentContentWidgets[i]\r\n              });\r\n          }\r\n          let ui =\r\n          {\r\n            type: \"space\", id: \"a2\", rows:\r\n              [\r\n                {\r\n                  type: \"space\",\r\n                  padding: 0,\r\n                  responsive: \"a2\",\r\n                  height: window.innerHeight,\r\n                  width: window.innerWidth * .7,\r\n                  cols:\r\n                    [\r\n                      output\r\n                    ]\r\n                }\r\n              ]\r\n          };\r\n          return ui;\r\n      }\r\n    }\r\n    // Portal additional methods\r\n    uploadReview(){\r\n          window.webix.ui({\r\n            view:\"window\",\r\n            id:\"uploadReviewWindow\",\r\n            width: 900,\r\n            height: 600,\r\n            move:true,\r\n            position:\"center\",\r\n            head:{\r\n                type:\"space\",\r\n                cols:[\r\n                    { view:\"label\", label: \"Upload a Review\" },\r\n                    {\r\n                      view:\"button\", label:\"Close\", width:70,left:250,\r\n                      click:function(){\r\n                        window.webix.$$(\"uploadReviewWindow\").close();\r\n                      } \r\n                    }\r\n                ]   \r\n            },\r\n            body:{\r\n                type:\"space\",\r\n                rows:[\r\n                    { \r\n                      view:\"form\", \r\n                      id:\"uploadReviewForm\",\r\n                      width:900,\r\n                      elements:[\r\n                        { view:\"label\", label:\"Upload your review form here: \", name:\"\", labelWidth:100,value:\"\" },\r\n                        { view:\"uploader\",inputName:\"files\",upload:\"/Review/UploadReview\" ,urlData:{studentAssignmentId:35} ,name:\"ReviewFile\",value:\"Click here to upload your review file\"},\r\n                        { view:\"text\", label:\"Course\", name:\"Course\", labelWidth:100, value:\"\"}, \r\n                        { view:\"text\", label:\"Assignment\", name:\"Assignment\", labelWidth:100, value:\"\"},\r\n                          \r\n                          // { margin:5, cols:[\r\n                          //     { view:\"button\", value:\"Upload\" , type:\"form\", click:function(){\r\n                          //       scope.uploadTheReviewDoc();\r\n                          //     }}\r\n                          // ]}\r\n                      ],\r\n                      rules:{\r\n                          \"Email\": window.webix.rules.isEmail,\r\n                          \"LastName\": window.webix.rules.isNotEmpty,\r\n                          \"FirstName\": window.webix.rules.isNotEmpty,\r\n                          \"Password\" :  window.webix.rules.isNotEmpty\r\n                      }\r\n                    }\r\n                ]\r\n            }\r\n    }).show();\r\n    }\r\n \r\n   \r\n    logout(){\r\n      fetch(\"/Account/Logout\", {\r\n\r\n          method: 'GET', // or 'PUT'\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: \"include\",\r\n          mode: \"no-cors\"\r\n        }).then(res => res.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          this.handleLogin(null, null);\r\n          // Don't remove the comment below - its actually functional.\r\n          //eslint-disable-next-line\r\n          document.location.reload();\r\n        } else {\r\n            console.log(response.error);\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n    \r\n  }\r\n  render() {\r\n    /*Portal Container */\r\n    \r\n    let toolbar = function () {\r\n      if (this.state.role === \"Administrator\") {\r\n        return \"AdminToolbar\";\r\n      }\r\n      else if (this.state.role === \"Instructor\") {\r\n        return \"InstructorToolbar\";\r\n      }\r\n      else if (this.state.role === \"Student\") {\r\n        return \"StudentToolbar\";\r\n      }\r\n      else {\r\n\r\n      }\r\n    }.bind(this);\r\n    let data = null;\r\n    let ui =\r\n    {\r\n      type: \"space\", id: \"a1\", rows:\r\n        [\r\n          {\r\n            type: \"space\",\r\n            scroll: \"auto\",\r\n            padding: 0,\r\n            responsive: \"a1\",\r\n            height: window.innerHeight,\r\n            width: window.innerWidth,\r\n            cols:\r\n              [\r\n                {\r\n                  view: \"template\",\r\n                  scroll: false,\r\n                  gravity: 1,\r\n                  width:350,\r\n                  template: \"left\",\r\n                  content: toolbar()\r\n                },\r\n                {\r\n                  view: \"template\",\r\n                  scroll: false,\r\n                  gravity: 4,\r\n                  template: \"right\",\r\n                  content: \"MultipleContentWidgets\"\r\n                }\r\n              ]\r\n          }\r\n        ]\r\n    };\r\n\r\n    return (\r\n      <div id=\"Portal\">\r\n        {this.renderAdminToolbar()}\r\n        {this.renderInstructorToolbar()}\r\n        {this.renderStudentToolbar()}\r\n        <Webix ui={ui} data={data} />\r\n        <div id=\"MultipleContentWidgets\">\r\n          {this.renderLiveFeed()}\r\n          {this.renderAdminManageUsers()}\r\n          {this.renderAdminManageCourses()}\r\n          {this.renderAdminSettings()}\r\n          {this.renderCourseContent()}\r\n          {this.renderShowAssignment()}\r\n          {this.renderShowStudentAssignment()}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\nexport default Portal;\r\n\r\n","// example of custom component with Webix UI inside\r\n// this one is a static view, not linked to the React data store\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Webix from '../webix';\r\n\r\n \r\nclass Login extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        data : null,\r\n      };\r\n      //grab the update Login method\r\n      this.updateLogin = props.handleLogin;\r\n     \r\n\r\n    window.webix.protoUI({\r\n      name:\"react\",\r\n      defaults:{\r\n        borderless:true\r\n      },\r\n      $init:function(config){\r\n        this.$ready.push(function(){    \r\n          ReactDOM.render(\r\n            this.config.app,\r\n            this.$view\r\n          );\r\n        });\r\n      }\r\n    }, window.webix.ui.view)\r\n  }\r\n  clearError(){\r\n     window.webix.$$(\"loginForm\").elements.passwordErrorLabel.setValue(\"\");\r\n  }\r\n doLogin(){\r\n    let userName = window.webix.$$(\"loginForm\").elements.emailAddress.getValue();\r\n    let password = window.webix.$$(\"loginForm\").elements.password.getValue();\r\n   \r\n    fetch(\"/Account/Login?Email=\" + userName + \"&Password=\" + password + \"&returnUrl=\", {\r\n      method: 'POST', // or 'PUT'\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\",\r\n      mode:\"no-cors\"\r\n    }).then(res => res.json())\r\n    .then(response => {\r\n      if(response.success){\r\n        this.updateLogin(response.data[0].emailAddress,response.data[0].role);\r\n      }else{\r\n        let errors = \"\";\r\n        response.error.forEach( error => {\r\n          errors += error.description\r\n        }); \r\n        window.webix.$$(\"loginForm\").elements.passwordErrorLabel.setValue(errors);\r\n      }\r\n\r\n    })\r\n    .catch(error => console.error('Error:', error));\r\n\r\n  }\r\n  render(){\r\n    let data = null;\r\n    let ui = {\r\n       type:\"space\",\r\n       id:\"a1\",\r\n       height: window.innerHeight-5,\r\n       width:  window.innerWidth-5,\r\n       minWidth:500,  \r\n       minHeight:500,\r\n      rows:\r\n                [{\r\n                 type:\"space\", \r\n                 padding:0, \r\n                 responsive:\"a1\", \r\n                 margin:0,\r\n                \r\n                 cols:[\r\n                        {},\r\n                        { \r\n                            view:\"form\", \r\n                            id:\"loginForm\",\r\n                            elements:[\r\n                                { \r\n                                  type:\"header\",\r\n                                  template:\"Please Login\"\r\n                                },\r\n                                { \r\n                                 \r\n                                  view:\"text\",\r\n                                  labelAlign:\"top\",\r\n                                  labelPosition:\"top\", \r\n                                  name:\"emailAddress\",\r\n                                  label:\"Email Address\",\r\n                                  validate:\"isNotEmpty\",\r\n                                  validateEvent:\"key\",\r\n                                  value:\"\" ,\r\n                              \r\n                                },\r\n                                { \r\n                                 \r\n                                  view:\"text\", \r\n                                  labelPosition:\"top\",\r\n                                  type:\"password\", \r\n                                  name:\"password\", \r\n                                  label:\"Password\",\r\n                                  validate:\"isNotEmpty\", \r\n                                  validateEvent:\"key\",\r\n                                  value:\"\"\r\n                                 \r\n                                },\r\n                                { \r\n                                  view:\"label\", \r\n                                  name:\"passwordErrorLabel\", \r\n                                  label:\"\" \r\n                                },\r\n\r\n                                 {}, { view:\"button\", label: 'login', click:this.doLogin.bind(this), hotkey:\"enter\"}\r\n                          ],\r\n                            width:500,\r\n                            height:500,\r\n                            gravity:0.3\r\n                        },\r\n                        {}\r\n                       ]\r\n                     }\r\n                 ]};\r\n\r\n                // Now lets check for returns\r\n               //console.log(window.webix.$$(\"loginForm\").elements);\r\n               \r\n     \r\n\r\n     return(\r\n      <div>\r\n        <Webix ui={ui} data={data}/>\r\n      </div>\r\n      );\r\n  }\r\n}\r\nexport default Login;\r\n\r\n","import React, { Component } from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport Portal from './containers/portal.js';\r\nimport Login from './containers/Login.js';\r\nimport CommentForm from './widget/CommentForm.js';\r\n//https://facebook.github.io/create-react-app/docs/proxying-api-requests-in-development\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: null,\r\n      role: null,\r\n      viewingCourse: null,\r\n      viewingAssignment: null,\r\n      seed : (new Date).getTime()\r\n    };\r\n    // Bind handle Login\r\n    this.handleLogin = this.updateLogin.bind(this);\r\n    this.checkIfLoggedIn();\r\n    // Remember to use this.setState({currentUser : something}); \r\n    //this.renderCommentWindow();\r\n  }\r\n  // / <Login  currentUser={this.state.currentUser}/>\r\n  checkIfLoggedIn() {//https://stackoverflow.com/questions/38742379/cors-why-my-browser-doesnt-send-options-preflight-request/38746674#38746674\r\n    fetch(\"/Account/GetCurrentUserRole\", {\r\n      method: 'GET',\r\n      credentials: 'same-origin',\r\n      cache: \"no-cache\",\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-PINGOVER': \"because\"\r\n      }\r\n    }).then(\r\n      res => {\r\n        let json = res.json();\r\n        return json;\r\n      }\r\n    )\r\n      .then(response => {\r\n        //console.log('Success:', JSON.stringify(response))\r\n        if (response.success) {\r\n          //console.log(\"show me \" +  JSON.stringify(response));\r\n          if ((response.data[0].role.length > 1) && (response.data[0].emailAddress.length > 1)) {\r\n            // Update the state and include the user\r\n            this.setState({ 'currentUser': response.data[0].emailAddress, 'role': response.data[0].role });\r\n          }\r\n        } else {\r\n          response.error.forEach(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n  }\r\n  redrawAll() {\r\n    console.log(\"REDRAW ALL TRIGGERED\");\r\n    this.setState({ seed: (new Date).getTime() });\r\n  }\r\n  handleCourseViewer(statechange) {\r\n    console.log(\"changing state\" + JSON.stringify(statechange));\r\n    this.setState(statechange);\r\n  }\r\n  renderPortal() {\r\n\r\n    if (this.state.currentUser != null) {\r\n      return <Portal\r\n        currentUser={this.state.currentUser}\r\n        role={this.state.role}\r\n        handleLogin={this.handleLogin}\r\n        viewingCourse={this.state.viewingCourse}\r\n        handleCourseViewer={this.handleCourseViewer.bind(this)}\r\n        redrawAll={this.redrawAll.bind(this)}\r\n        seed={this.state.seed}\r\n        viewingAssignment={this.state.viewingAssignment}\r\n\r\n      />\r\n    }\r\n  }\r\n  renderLogin() {\r\n\r\n    if (this.state.currentUser == null) {\r\n      return <Login handleLogin={this.handleLogin} />\r\n    }\r\n  }\r\n   /*renderCommentWindow() {\r\n\r\n    window.webix.ui({\r\n      view: \"window\",\r\n      id: \"comment_win\",\r\n      head: {\r\n        type: \"space\",\r\n        padding: 0,\r\n        cols: [\r\n          { view: \"label\", label: \"Add Comment\" },\r\n          {\r\n            view: \"button\", label: \"Close\", width: 70, left: 250,\r\n            click: function () {\r\n              window.webix.$$(\"comment_win\").close();\r\n            }\r\n          }]\r\n      },\r\n      move: true,\r\n      width: 300,\r\n      height: 200,\r\n      body: {\r\n        type: \"space\",\r\n        rows: [\r\n          {\r\n            view: \"form\",\r\n            id: \"newCommentForm\",\r\n            padding: 0,\r\n            elements: [\r\n              {\r\n                view: \"textarea\",\r\n                name: \"textBox\"\r\n              },\r\n              {\r\n                view: \"button\", value: \"Comment\", type: \"form\", click: function () {\r\n                  this.createComment()  //studentAssignmentID,comment);\r\n                  window.webix.$$(\"comment_win\").close();\r\n                }.bind(this)\r\n              }\r\n            ]\r\n          }]\r\n      }\r\n    }).show();\r\n  }\r\n  createComment() {\r\n    let formdata = window.webix.$$(\"newCommentForm\").getValues();\r\n    //console.log(formdata.textBox);\r\n\r\n    fetch(\"Comment/CreateComment?studentAssignmentId=\" + 4 + \"&commentContent=\" + formdata.textBox, {\r\n      method: 'POST', // or 'PUT'\r\n\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: \"include\",\r\n      mode: \"no-cors\"\r\n    }).then(res => res.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          this.setState({ \"data\": 0 });\r\n          this.redrawAll();\r\n        } else {\r\n          //   let errors = \"\";\r\n          //response.error.forEach(error => {\r\n          //  //   errors += error.description\r\n          //    });\r\n\r\n        }\r\n        console.log(response);\r\n\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n\r\n  } */\r\n  updateLogin(user, role) {\r\n    this.setState({ 'currentUser': user, 'role': role });\r\n  }\r\n\r\n  /* rendercommentform(){\r\n     if(this.state.currentUser != null) \r\n      return <CommentForm role={this.state.role} currentUser={this.state.currentUser} assignmentId={4}/> ;}\r\n      */\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"appContainer\">\r\n\r\n        {/* this.rendercommentform()*/}\r\n      \r\n        {this.renderLogin()}\r\n        {this.renderPortal()}\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            currentUser: props.currentUser,\r\n            role: props.role,\r\n            assignmentId : props.assignmentId\r\n        };\r\n    }\r\n\r\n    renderCommentForm() {\r\n\r\n        window.webix.ui({\r\n            view: \"window\",\r\n            id: \"comment_win\",\r\n            head: {\r\n                type: \"space\",\r\n                padding: 0,\r\n                cols: [\r\n                    { view: \"label\", label: \"Add Comment\" },\r\n                    {\r\n                        view: \"button\", label: \"Close\", width: 70, left: 250,\r\n                        click: function () {\r\n                            window.webix.$$(\"comment_win\").close();\r\n                        }\r\n                    }]\r\n            },\r\n            move: true,\r\n            width: 300,\r\n            height: 200,\r\n            body: {\r\n                type: \"space\",\r\n                rows: [\r\n                    {\r\n                        view: \"form\",\r\n                        id: \"newCommentForm\",\r\n                        padding: 0,\r\n                        elements: [\r\n                            {\r\n                                view: \"textarea\",\r\n                                name: \"textBox\"\r\n                            },\r\n                            {\r\n                                view: \"button\", value: \"Comment\", type: \"form\", click: function () {\r\n                                    this.createComment()  //studentAssignmentID,comment);\r\n                                    window.webix.$$(\"comment_win\").close();\r\n                                }.bind(this)\r\n                            }\r\n                        ]\r\n                    }]\r\n            }\r\n        }).show();\r\n    }\r\n    createComment() {\r\n        let formdata = window.webix.$$(\"newCommentForm\").getValues();\r\n        //console.log(formdata.textBox);\r\n\r\n        fetch(\"Comment/CreateComment?studentAssignmentId=\" + this.state.assignmentId + \"&commentContent=\" + formdata.textBox, {\r\n            method: 'POST', // or 'PUT'\r\n\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: \"include\",\r\n            mode: \"no-cors\"\r\n        }).then(res => res.json())\r\n            .then(response => {\r\n                if (response.success) {\r\n                    this.setState({ \"data\": 0 });\r\n                    this.redrawAll();\r\n                } else {\r\n                    //   let errors = \"\";\r\n                    //response.error.forEach(error => {\r\n                    //  //   errors += error.description\r\n                    //    });\r\n\r\n                }\r\n                console.log(response);\r\n\r\n            })\r\n            .catch(error => console.error('Error:', error));\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (<div id=\"CommentForm\">\r\n            load comment form\r\n    {this.renderCommentForm()}\r\n        </div>)\r\n    }\r\n}\r\nexport default CommentForm;\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}